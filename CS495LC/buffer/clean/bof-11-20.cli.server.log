CMBEGIN,,,sudo ./webserver 8080,,
CMBEGIN,,,cd /usr/src/fhttpd/,,
CMBEGIN,,,sudo ./webserver 8080,,
CMBEGIN,Nov 28 09:11:42,/users/jmache,wget http://localhost:8080/j,,wget http://localhost:8080/j
CMBEGIN,,,wget http://localhost:8080/j,,
CMBEGIN,,,sudo ./webserver 8080,,
CMBEGIN,,,cd /usr/src/fhttpd/,,
CMBEGIN,,,ssh server.bof-11-20.CS495LC.isi.deterlab.net,,
CMBEGIN,,,wget http://localhost:8080/j,%--2018-11-28 09:11:42--  http://localhost:8080/j<NL>Resolving localhost (localhost)... 127.0.0.1<NL>Connecting to localhost (localhost)|127.0.0.1|:8080... connected.<NL>HTTP request sent%% awaiting response... 404 Not Found<NL>2018-11-28 09:11:42 ERROR 404: Not Found.<NL>%,
CMBEGIN,Nov 28 09:11:26,/usr/src/fhttpd,sudo ./webserver 8080,,sudo ./webserver 8080
CMBEGIN,,,cd /usr/src/fhttpd/,,
CMBEGIN,,,sudo ./webserver 8080,GET /j HTTP/1.1<NL><NL>User-Agent: Wget/1.17.1 (linux-gnu)<NL><NL>Accept: */*<NL><NL>Accept-Encoding: identity<NL><NL>Host: localhost:8080<NL><NL>Connection: Keep-Alive<NL><NL>,
CMBEGIN,,,cd /usr/src/fhttpd,,
CMBEGIN,Nov 28 12:07:57,/usr/src/fhttpd,ls,frobnick  index.html  Makefile<HT>webserver  webserver.c,ls
CMBEGIN,Nov 28 12:08:31,/usr/src/fhttpd,sudo make,make: Nothing to be done for 'project'.,sudo make
CMBEGIN,Nov 28 12:08:40,/usr/src/fhttpd,sudo ./webserver 8080,GET / HTTP/1.1<NL><NL>User-Agent: Wget/1.17.1 (linux-gnu)<NL><NL>Accept: */*<NL><NL>Accept-Encoding: identity<NL><NL>Host: localhost:8080<NL><NL>Connection: Keep-Alive<NL><NL><NL>GET /jens HTTP/1.1<NL><NL>User-Agent: Wget/1.17.1 (linux-gnu)<NL><NL>Accept: */*<NL><NL>Accept-Encoding: identity<NL><NL>Host: localhost:8080<NL><NL>Connection: Keep-Alive<NL><NL><NL>GET /roshan HTTP/1.1<NL><NL>User-Agent: Wget/1.17.1 (linux-gnu)<NL><NL>Accept: */*<NL><NL>Accept-Encoding: identity<NL><NL>Host: localhost:8080<NL><NL>Connection: Keep-Alive<NL><NL><NL>GET /jeffely HTTP/1.1<NL><NL>User-Agent: Wget/1.17.1 (linux-gnu)<NL><NL>Accept: */*<NL><NL>Accept-Encoding: identity<NL><NL>Host: localhost:8080<NL><NL>Connection: Keep-Alive<NL><NL><NL>GET / HTTP/1.1<NL><NL>User-Agent: Wget/1.17.1 (linux-gnu)<NL><NL>Accept: */*<NL><NL>Accept-Encoding: identity<NL><NL>Host: localhost:8080<NL><NL>Connection: Keep-Alive<NL><NL><NL>GET /123456789 HTTP/1.1<NL><NL>User-Agent: Wget/1.17.1 (linux-gnu)<NL><NL>Accept: */*<NL><NL>Accept-Encoding: identity<NL><NL>Host: localhost:8080<NL><NL>Connection: Keep-Alive<NL><NL><NL>GET /123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789 HTTP/1.1<NL><NL>User-Agent: Wget/1.17.1 (linux-gnu)<NL><NL>Accept: */*<NL><NL>Accept-Encoding: identity<NL><NL>Host: localhost:8080<NL><NL>Connection: Keep-Alive<NL><NL><NL>GET /123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789 HTTP/1.1<NL><NL>User-Agent: Wget/1.17.1 (linux-gnu)<NL><NL>Accept: */*<NL><NL>Accept-Encoding: identity<NL><NL>Host: localhost:8080<NL><NL>Connection: Keep-Alive<NL><NL><NL>send: Bad file descriptor<NL>GET /123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789 HTTP/1.1<NL><NL>User-Agent: Wget/1.17.1 (linux-gnu)<NL><NL>Accept: */*<NL><NL>Accept-Encoding: identity<NL><NL>Host: localhost:8080<NL><NL>Connection: Keep-Alive<NL><NL><NL>Segmentation fault (core dumped),sudo ./webserver 8080
CMBEGIN,Nov 28 12:23:44,/usr/src/fhttpd,gdb ./webserver,%GNU gdb (Ubuntu 7.11.1-0ubuntu1~16.04) 7.11.1<NL>Copyright (C) 2016 Free Software Foundation%% Inc.<NL>License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html><NL>This is free software: you are free to change and redistribute it.<NL>There is NO WARRANTY%% to the extent permitted by law.  Type \"show copying\"<NL>and \"show warranty\" for details.<NL>This GDB was configured as \"x86_64-linux-gnu\".<NL>Type \"show configuration\" for configuration details.<NL>For bug reporting instructions%% please see:<NL><http://www.gnu.org/software/gdb/bugs/>.<NL>Find the GDB manual and other documentation resources online at:<NL><http://www.gnu.org/software/gdb/documentation/>.<NL>For help%% type \"help\".<NL>Type \"apropos word\" to search for commands related to \"word\"...<NL>Reading symbols from ./webserver...done.<NL>(gdb) run 8080<NL>Starting program: /usr/src/fhttpd/webserver 8080<NL>[Thread debugging using libthread_db enabled]<NL>Using host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".<NL>bind: Address already in use<NL>[Inferior 1 (process 28720) exited with code 01]<NL>(gdb) run 8081<NL>Starting program: /usr/src/fhttpd/webserver 8081<NL>[Thread debugging using libthread_db enabled]<NL>Using host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".<NL>[New Thread 0x7ffff71cdser-Agent: Wget/1.17.1 (linux-gnu)<NL><NL>Accept: */*<NL><NL>Accept-Encoding: identity<NL><NL>Host: localhost:8081<NL><NL>Connection: Keep-Alive<NL><NL><NL><NL>Thread 2 \"webserver\" received signal SIGSEGV%% Segmentation fault.<NL>[Switching to Thread 0x7ffff71cd700 (LWP 28730)]<NL>0x00000000004021d8 in send_response (sockfd=926299444%% req=0x3837363534333231%% <NL>    statcode=858927417) at webserver.c:314<NL>314<HT><HT><HT>strcat(sendmessage%% \"</h2></body></html>\");<NL>(gdb) q<NL>A debugging session is active.<NL><NL><HT>Inferior 1 [process 28728] will be killed.<NL><NL>Quit anyway? (y or n) y%,gdb ./webserver
CMBEGIN,Nov 28 12:28:01,/usr/src/fhttpd,gdb ./webserver,%GNU gdb (Ubuntu 7.11.1-0ubuntu1~16.04) 7.11.1<NL>Copyright (C) 2016 Free Software Foundation%% Inc.<NL>License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html><NL>This is free software: you are free to change and redistribute it.<NL>There is NO WARRANTY%% to the extent permitted by law.  Type \"show copying\"<NL>and \"show warranty\" for details.<NL>This GDB was configured as \"x86_64-linux-gnu\".<NL>Type \"show configuration\" for configuration details.<NL>For bug reporting instructions%% please see:<NL><http://www.gnu.org/software/gdb/bugs/>.<NL>Find the GDB manual and other documentation resources online at:<NL><http://www.gnu.org/software/gdb/documentation/>.<NL>For help%% type \"help\".<NL>Type \"apropos word\" to search for commands related to \"word\"...<NL>Reading symbols from ./webserver...done.<NL>(gdb) run 8080<NL>Starting program: /usr/src/fhttpd/webserver 8080<NL>[Thread debugging using libthread_db enabled]<NL>Using host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".<NL>[New Thread 0x7ffff71cd700 (LWP 28778)]<NL>GET /123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789 HTTP/1.1<NL><NL>User-Agent: Wget/1.17.1 (linux-gnu)<NL><NL>Accept: */*<NL><NL>Accept-Encoding: identity<NL><NL>Host: localhost:8080<NL><NL>Connection: Keep-Alive<NL><NL><NL><NL>Thread 2 \"webserver\" received signal SIGSEGV%% Segmentation fault.<NL>[Switching to Thread 0x7ffff71cd700 (LWP 28778)]<NL>0x000000000040220d in send_response (sockfd=926299444%% req=0x3837363534333231%% <NL>    statcode=858927417) at webserver.c:317<NL>317<HT><HT>if (sendmessage[0] != '\0') {<NL>(gdb) q<NL>A debugging session is active.<NL><NL><HT>Inferior 1 [process 28769] will be killed.<NL><NL>Quit anyway? (y or n) y%,gdb ./webserver
CMBEGIN,Nov 28 12:29:42,/usr/src/fhttpd,sudo make,%gcc -D_FORTIFY_SOURCE=0 -frecord-gcc-switches -fno-stack-protector -z execstack -g -o webserver -D_TS_ERRNO webserver.c -lnsl -lresolv -lpthread<NL>webserver.c: In function 'send_response':<NL>webserver.c:282:9: warning: implicit declaration of function 'strptime' [-Wimplicit-function-declaration]<NL>    if (!strptime(imstime%% "%%a%% %%d %%b %%Y %%H:%%M:%%S GMT"%% &tm)<NL>         ^%,sudo make
CMBEGIN,Nov 28 12:29:48,/usr/src/fhttpd,sudo ./webserver 8080,GET /123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789 HTTP/1.1<NL><NL>User-Agent: Wget/1.17.1 (linux-gnu)<NL><NL>Accept: */*<NL><NL>Accept-Encoding: identity<NL><NL>Host: localhost:8080<NL><NL>Connection: Keep-Alive<NL><NL><NL>^C,sudo ./webserver 8080
CMBEGIN,,,exit,exit,
CMBEGIN,Nov 28 12:11:00,/users/jmache,wget http://localhost:8080/jens,%--2018-11-28 12:11:00--  http://localhost:8080/jens<NL>Resolving localhost (localhost)... 127.0.0.1<NL>Connecting to localhost (localhost)|127.0.0.1|:8080... connected.<NL>HTTP request sent%% awaiting response... 404 Not Found<NL>2018-11-28 12:11:00 ERROR 404: Not Found.<NL>%,wget http://localhost:8080/jens
CMBEGIN,Nov 28 12:12:13,/users/jmache,wget http://localhost:8080/roshan,%--2018-11-28 12:12:13--  http://localhost:8080/roshan<NL>Resolving localhost (localhost)... 127.0.0.1<NL>Connecting to localhost (localhost)|127.0.0.1|:8080... connected.<NL>HTTP request sent%% awaiting response... 404 Not Found<NL>2018-11-28 12:12:13 ERROR 404: Not Found.<NL>%,wget http://localhost:8080/roshan
CMBEGIN,Nov 28 12:12:30,/users/jmache,wget http://localhost:8080/jeffely,%--2018-11-28 12:12:30--  http://localhost:8080/jeffely<NL>Resolving localhost (localhost)... 127.0.0.1<NL>Connecting to localhost (localhost)|127.0.0.1|:8080... connected.<NL>HTTP request sent%% awaiting response... 404 Not Found<NL>2018-11-28 12:12:30 ERROR 404: Not Found.<NL>%,wget http://localhost:8080/jeffely
CMBEGIN,Nov 28 12:12:37,/users/jmache,wget http://localhost:8080/,%--2018-11-28 12:12:37--  http://localhost:8080/<NL>Resolving localhost (localhost)... 127.0.0.1<NL>Connecting to localhost (localhost)|127.0.0.1|:8080... connected.<NL>HTTP request sent%% awaiting response... 200 OK<NL>Length: unspecified [text/html]<NL>Saving to: 'index.html.4'<NL><NL><NL>index.html.4            [<=>                 ]       0  --.-KB/s               <NL>index.html.4            [ <=>                ]   5.59K  --.-KB/s    in 0s      <NL><NL>2018-11-28 12:12:37 (299 MB/s) - 'index.html.4' saved [5725]<NL>%,wget http://localhost:8080/
CMBEGIN,Nov 28 12:12:48,/users/jmache,cat index.html.4,<html><NL><head><NL><title><NL><HT>Frobnick Production Reports<NL></title><NL></head><NL><body><NL><HT><h1>Frobnick Production Reports</h1><NL><HT><ul><NL><li><a href='frobnick/1.frob.txt'>1.frob.txt</a></li><NL><li><a href='frobnick/2.frob.txt'>2.frob.txt</a></li><NL><li><a href='frobnick/3.frob.txt'>3.frob.txt</a></li><NL><li><a href='frobnick/4.frob.txt'>4.frob.txt</a></li><NL><li><a href='frobnick/5.frob.txt'>5.frob.txt</a></li><NL><li><a href='frobnick/6.frob.txt'>6.frob.txt</a></li><NL><li><a href='frobnick/7.frob.txt'>7.frob.txt</a></li><NL><li><a href='frobnick/8.frob.txt'>8.frob.txt</a></li><NL><li><a href='frobnick/9.frob.txt'>9.frob.txt</a></li><NL><li><a href='frobnick/10.frob.txt'>10.frob.txt</a></li><NL><li><a href='frobnick/11.frob.txt'>11.frob.txt</a></li><NL><li><a href='frobnick/12.frob.txt'>12.frob.txt</a></li><NL><li><a href='frobnick/13.frob.txt'>13.frob.txt</a></li><NL><li><a href='frobnick/14.frob.txt'>14.frob.txt</a></li><NL><li><a href='frobnick/15.frob.txt'>15.frob.txt</a></li><NL><li><a href='frobnick/16.frob.txt'>16.frob.txt</a></li><NL><li><a href='frobnick/17.frob.txt'>17.frob.txt</a></li><NL><li><a href='frobnick/18.frob.txt'>18.frob.txt</a></li><NL><li><a href='frobnick/19.frob.txt'>19.frob.txt</a></li><NL><li><a href='frobnick/20.frob.txt'>20.frob.txt</a></li><NL><li><a href='frobnick/21.frob.txt'>21.frob.txt</a></li><NL><li><a href='frobnick/22.frob.txt'>22.frob.txt</a></li><NL><li><a href='frobnick/23.frob.txt'>23.frob.txt</a></li><NL><li><a href='frobnick/24.frob.txt'>24.frob.txt</a></li><NL><li><a href='frobnick/25.frob.txt'>25.frob.txt</a></li><NL><li><a href='frobnick/26.frob.txt'>26.frob.txt</a></li><NL><li><a href='frobnick/27.frob.txt'>27.frob.txt</a></li><NL><li><a href='frobnick/28.frob.txt'>28.frob.txt</a></li><NL><li><a href='frobnick/29.frob.txt'>29.frob.txt</a></li><NL><li><a href='frobnick/30.frob.txt'>30.frob.txt</a></li><NL><li><a href='frobnick/31.frob.txt'>31.frob.txt</a></li><NL><li><a href='frobnick/32.frob.txt'>32.frob.txt</a></li><NL><li><a href='frobnick/33.frob.txt'>33.frob.txt</a></li><NL><li><a href='frobnick/34.frob.txt'>34.frob.txt</a></li><NL><li><a href='frobnick/35.frob.txt'>35.frob.txt</a></li><NL><li><a href='frobnick/36.frob.txt'>36.frob.txt</a></li><NL><li><a href='frobnick/37.frob.txt'>37.frob.txt</a></li><NL><li><a href='frobnick/38.frob.txt'>38.frob.txt</a></li><NL><li><a href='frobnick/39.frob.txt'>39.frob.txt</a></li><NL><li><a href='frobnick/40.frob.txt'>40.frob.txt</a></li><NL><li><a href='frobnick/41.frob.txt'>41.frob.txt</a></li><NL><li><a href='frobnick/42.frob.txt'>42.frob.txt</a></li><NL><li><a href='frobnick/43.frob.txt'>43.frob.txt</a></li><NL><li><a href='frobnick/44.frob.txt'>44.frob.txt</a></li><NL><li><a href='frobnick/45.frob.txt'>45.frob.txt</a></li><NL><li><a href='frobnick/46.frob.txt'>46.frob.txt</a></li><NL><li><a href='frobnick/47.frob.txt'>47.frob.txt</a></li><NL><li><a href='frobnick/48.frob.txt'>48.frob.txt</a></li><NL><li><a href='frobnick/49.frob.txt'>49.frob.txt</a></li><NL><li><a href='frobnick/50.frob.txt'>50.frob.txt</a></li><NL><li><a href='frobnick/51.frob.txt'>51.frob.txt</a></li><NL><li><a href='frobnick/52.frob.txt'>52.frob.txt</a></li><NL><li><a href='frobnick/53.frob.txt'>53.frob.txt</a></li><NL><li><a href='frobnick/54.frob.txt'>54.frob.txt</a></li><NL><li><a href='frobnick/55.frob.txt'>55.frob.txt</a></li><NL><li><a href='frobnick/56.frob.txt'>56.frob.txt</a></li><NL><li><a href='frobnick/57.frob.txt'>57.frob.txt</a></li><NL><li><a href='frobnick/58.frob.txt'>58.frob.txt</a></li><NL><li><a href='frobnick/59.frob.txt'>59.frob.txt</a></li><NL><li><a href='frobnick/60.frob.txt'>60.frob.txt</a></li><NL><li><a href='frobnick/61.frob.txt'>61.frob.txt</a></li><NL><li><a href='frobnick/62.frob.txt'>62.frob.txt</a></li><NL><li><a href='frobnick/63.frob.txt'>63.frob.txt</a></li><NL><li><a href='frobnick/64.frob.txt'>64.frob.txt</a></li><NL><li><a href='frobnick/65.frob.txt'>65.frob.txt</a></li><NL><li><a href='frobnick/66.frob.txt'>66.frob.txt</a></li><NL><li><a href='frobnick/67.frob.txt'>67.frob.txt</a></li><NL><li><a href='frobnick/68.frob.txt'>68.frob.txt</a></li><NL><li><a href='frobnick/69.frob.txt'>69.frob.txt</a></li><NL><li><a href='frobnick/70.frob.txt'>70.frob.txt</a></li><NL><li><a href='frobnick/71.frob.txt'>71.frob.txt</a></li><NL><li><a href='frobnick/72.frob.txt'>72.frob.txt</a></li><NL><li><a href='frobnick/73.frob.txt'>73.frob.txt</a></li><NL><li><a href='frobnick/74.frob.txt'>74.frob.txt</a></li><NL><li><a href='frobnick/75.frob.txt'>75.frob.txt</a></li><NL><li><a href='frobnick/76.frob.txt'>76.frob.txt</a></li><NL><li><a href='frobnick/77.frob.txt'>77.frob.txt</a></li><NL><li><a href='frobnick/78.frob.txt'>78.frob.txt</a></li><NL><li><a href='frobnick/79.frob.txt'>79.frob.txt</a></li><NL><li><a href='frobnick/80.frob.txt'>80.frob.txt</a></li><NL><li><a href='frobnick/81.frob.txt'>81.frob.txt</a></li><NL><li><a href='frobnick/82.frob.txt'>82.frob.txt</a></li><NL><li><a href='frobnick/83.frob.txt'>83.frob.txt</a></li><NL><li><a href='frobnick/84.frob.txt'>84.frob.txt</a></li><NL><li><a href='frobnick/85.frob.txt'>85.frob.txt</a></li><NL><li><a href='frobnick/86.frob.txt'>86.frob.txt</a></li><NL><li><a href='frobnick/87.frob.txt'>87.frob.txt</a></li><NL><li><a href='frobnick/88.frob.txt'>88.frob.txt</a></li><NL><li><a href='frobnick/89.frob.txt'>89.frob.txt</a></li><NL><li><a href='frobnick/90.frob.txt'>90.frob.txt</a></li><NL><li><a href='frobnick/91.frob.txt'>91.frob.txt</a></li><NL><li><a href='frobnick/92.frob.txt'>92.frob.txt</a></li><NL><li><a href='frobnick/93.frob.txt'>93.frob.txt</a></li><NL><li><a href='frobnick/94.frob.txt'>94.frob.txt</a></li><NL><li><a href='frobnick/95.frob.txt'>95.frob.txt</a></li><NL><li><a href='frobnick/96.frob.txt'>96.frob.txt</a></li><NL><li><a href='frobnick/97.frob.txt'>97.frob.txt</a></li><NL><li><a href='frobnick/98.frob.txt'>98.frob.txt</a></li><NL><li><a href='frobnick/99.frob.txt'>99.frob.txt</a></li><NL><li><a href='frobnick/100.frob.txt'>100.frob.txt</a></li><NL></ul><NL></body><NL></html>,cat index.html.4
CMBEGIN,,,pwd,/users/jmache,
CMBEGIN,,,cd /usr/src/fhttpd/,,
CMBEGIN,Nov 28 12:14:49,/usr/src/fhttpd,ls,frobnick  index.html  Makefile<HT>webserver  webserver.c,ls
CMBEGIN,Nov 28 12:14:55,/usr/src/fhttpd,emacs webserver.c,%=><NL>=-111:----F1  *scratch*      All L1     (Fundamental) ---------------------------<NL>Loading 00debian-vars...done<NL>/etc/emacs/site-start.d/50autoconf.el (source)...<NL>done<NL>Loading /etc/emacs/site-start.d/50autoconf.el (source)...doneFile Edit Options Buffers Tools Lisp-Interaction Help                           <NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL>-111:----F1  *scratch*      All L1     (Lisp Interaction) ----------------------<NL>For information about GNU Emacs and the GNU system%% type C-h C-a.<NL>Note: file is write protected<NL>Note: file is write protectedFile Edit Options Buffers Tools C Help                                          <NL><NL>// webserver.c                                                                  <NL><NL>// FrobozzCo Official Webserver                                                 <NL><NL>// Barbazzo Fernap barbazzo@gue.com                                             <NL><NL>// Gustar Woomax gustar@gue.com                                                 <NL><NL>// Wilbar Memboob wilbar@gue.com                                                <NL><NL><NL>// By the Frobozz Magic Webserver Company                                       <NL><NL>// Released under the Grue Public License                                       <NL><NL>// Frobruary 14th%% 1067 GUE                                                     <NL><NL><NL>// THERE IS NO WARRANTY FOR THE PROGRAM%% TO THE EXTENT PERMITTED                <NL><NL>// BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE               <NL><NL>// COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \u201CAS IS\uinclude <stdio.h><NL>#include <errno.h><NL>#include <string.h><NL>#include <stdlib.h><NL>#include <netdb.h><NL>#include <sys/stat.h><NL>#include <sys/types.h><NL>#include <sys/socket.h><NL>#include <netinet/in.h><NL>#include <arpa/inet.h><NL>#include <unistd.h><NL>#include <fcntl.h><NL>#include <time.h><NL>#include <pthread.h><NL><NL>#define _XOPEN_SOURCE<NL><NL>typedef struct {<NL>        char *method;<NL>        char *uri;<NL>-11U:%%%%--F1  webserver.c    Top L1     (C/l Abbrev) ----------------------------<NL>2<NL><NL>345678910123<NL>456789201234567654321234567893012345678940<NL>        char *version;<NL>        char *headers;<NL>} httpreq_t;<NL><NL><NL>/* NOTE: this function is based on a function provided in the GNU "timegm" man  <NL><NL>   page. timegm is a GNU extension to time.h that returns the given tm struct a\<NL><NL>s                                                                               <NL><NL>   a UNIX timestamp in GMT/UTC%% rather than local time. The man page suggests a<NL>   function similar to the one below as a portable equivalent.                  <NL><NL> */<NL>time_t my_timegm(struct tm *tm) {<NL>        time_t ret;<NL>        char *tz;<NL><NL>        tz = getenv("TZ");<NL>        putenv("TZ=GMT");<NL>        tzset();<NL>        ret = mktime(tm);<NL>        if (tz) {<NL>                char envstr[strlen(tz) + 4]; 7%% L410398767894039<HT>401232103989401234567<NL>89501234565432345678960<NL><HT>                envstr[0] = '\0';<NL>                strcat(envstr%% "TZ=");<NL>                strcat(envstr%% tz);<NL>                putenv(envstr);<NL>        } else {<NL>                putenv("TZ=");<NL>        }<NL><NL>        tzset();<NL><NL>        return ret;<NL>}<NL><NL>char *get_header(const httpreq_t *req%% const char* headername) {<NL>        char *hdrptr;<NL>        char *hdrend;<NL>        char *retval = NULL;<NL><NL>        char searchstr[strlen(headername) + 5];<NL>        strcpy(searchstr%% "<NL>");<NL>        strcat(searchstr%% headername);10%% L6123456789<HT><HT><HT><HT>343456789801<NL>        strcat(searchstr%% ": ");<NL><NL>        if (hdrptr = strstr(req->headers%% searchstr)) {<NL>                hdrptr += strlen(searchstr);<NL>                if (hdrend = strstr(hdrptr%% "<NL>")) {<NL>                        char hdrval[1024]; // temporary return value            <NL><NL>                        memcpy((char *)hdrval%% hdrptr%% (hdrend - hdrptr));<NL>                        hdrval[hdrend - hdrptr] = '\0'; // tack null onto end o\<NL><NL>f header value                                                                  <NL><NL>                        int hdrvallen = strlen(hdrval);<NL>                        retval = (char *)malloc((hdrvallen + 1) * sizeof(char))\<NL><NL>; // malloc a space for retval                                                  <NL><NL>                        strcpy(retval%% (char *)hdrval);<NL>                } else {<NL>                        retval = (char *)malloc((strlen(hdrptr) + 1) * sizeof(c\<NL><NL>har)); //                                                                       <NL><NL>                        strcpy(retval%% hdrptr);<NL>                }<NL>        }<NL><NL>        return retval;4%% L823456789<NL>901<NL>234<NL>56789<NL>}<NL><NL>/* As long as str begins with a proper HTTP-Version followed by delim%% returns \<NL><NL>a                                                                               <NL><NL>   pointer to the start of the version number (e.g.%% 1.0). Returns NULL otherwi\<NL><NL>se.                                                                             <NL><NL> */<NL>char *http_version_str(char *str%% char *delim) {<NL>        char *vstart = strstr(str%% "HTTP/");<NL>        char *vnumstart = str + 5;<NL>        char *vdot = strchr(str%% '.');<NL>        char *vend = strstr(str%% delim);<NL>        char *digits = "0123456789";<NL>        int majvlen = 0;<NL>        int minvlen = 0;<NL><NL>        if (!vstart || !vdot // something's missing                             <NL><NL>                || vstart != str) // str doesn't start with "HTTP/"             <NL><NL>                return NULL;<NL>6%% L10012<NL>3<NL>4565<HT><HT><HT>678910123434567<NL><NL>        majvlen = strspn(vnumstart%% digits);<NL>        minvlen = strspn(vdot + 1%% digits);<NL><NL>        if (majvlen < 1 || (vnumstart + majvlen) != vdot // bad major version   <NL><NL>                || minvlen < 1 || (vdot + minvlen + 1) != vend) // bad minor ve\<NL><NL>rsion                                                                           <NL><NL>                return NULL;<NL><NL>        return vnumstart;<NL>}<NL><NL>/* Fills req with the request data from datastr. Returns 0 on success.          <NL><NL> */<NL><NL>int parsereq(httpreq_t *req%% char *datastr) {<NL>        char *position;<NL>        char *last_position = datastr;<NL>        char *temp_position;<NL>        int matchlen;21%% L11892012<NL>3456789301<HT><HT><HT><HT><NL><NL><NL><NL><NL><NL>23<NL><NL><NL><NL>23456<NL><NL>        req->method = "";<NL>        req->uri = "";<NL>        req->version = "";<NL>        req->headers = "";<NL><NL>        if (!(position = strchr(last_position%% ' '))) {<NL>                return 1;<NL>        }<NL>        matchlen = (int)(position - last_position);<NL>        req->method = (char *)malloc((matchlen + 1) * sizeof(char));<NL>        memcpy(req->method%% last_position%% matchlen);<NL>        req->method[matchlen] = '\0';<NL>        last_position = position + 1;<NL><NL>        if (!(position = strchr(last_position%% ' '))<NL>                && !(position = strstr(last_position%% "<NL>"))) {<NL>                return 1;<NL>        }<NL><NL><HT>// strip any query string out of the URI                                <NL>5%% L13788<HT>9501012345656        if ((temp_position = strchr(last_position%% '?')) && temp_position < pos\<NL><NL>ition)<NL>                matchlen = (int)(temp_position - last_position);<NL>        else<NL>                matchlen = (int)(position - last_position);<NL><NL>        req->uri = (char *)malloc((matchlen + 1) * sizeof(char));<NL>        memcpy(req->uri%% last_position%% matchlen);<NL>        req->uri[matchlen] = '\0';<NL>        if (position[0] == '<NL>') {<NL>                req->version = "0.9";<NL>                req->headers = "";<NL>                return 0; // simple req -- uri only                             <NL><NL>        }<NL><NL>        // If we get here%% it's a full request%% get the HTTP version and header\<NL><NL>s                                                                               <NL><NL>        last_position = position + 1;<NL><NL>        if (!(position = strstr(last_position%% "<NL>"))<NL>                || !(last_position = http_version_str(last_position%% "<NL>"))) \<NL>9%% L1578960123456789701<NL>2345434345<NL>{<NL>                return 1;<NL>        }<NL><NL>        matchlen = (int)(position - last_position);<NL>        req->version = (char *)malloc((matchlen + 1) * sizeof(char));<NL>        memcpy(req->version%% last_position%% matchlen);<NL>        req->version[matchlen] = '\0';<NL>        last_position = position;<NL><NL>        req->headers = (char *)malloc(strlen(last_position) * sizeof(char));<NL>        strcpy(req->headers%% last_position);<NL><NL>        return 0;<NL>}<NL><NL>char *contype(char *ext) {<NL>        if (strcmp(ext%% "html") == 0) return "text/html";<NL>        else if (strcmp(ext%% "htm") == 0) return "text/html";<NL>        else if (strcmp(ext%% "jpeg") == 0) return "image/jpeg";32678980123456789901234<NL>        else if (strcmp(ext%% "jpg") == 0) return "image/jpeg";<NL>        else if (strcmp(ext%% "gif") == 0) return "image/gif";<NL>        else if (strcmp(ext%% "txt") == 0) return "text/plain";<NL>        else return "application/octet-stream";<NL><NL>}<NL><NL>char *status(int statcode) {<NL>        if (statcode == 200)    return "200 OK";<NL>        else if (statcode == 304) return "304 Not Modified";<NL>        else if (statcode == 400) return "400 Bad Request";<NL>        else if (statcode == 403) return "403 Forbidden";<NL>        else if (statcode == 404) return "404 Not Found";<NL>        else if (statcode == 500) return "500 Internal Server Error";<NL>        else if (statcode == 501) return "501 Not Implemented";<NL>        else return "";<NL>}<NL><NL>int send_response(int sockfd%% httpreq_t *req%% int statcode) {<NL>        int urifd;7%% L1956543456789287654323456789101234        const int BUFSIZE = 1024;<NL>        char sendmessage[BUFSIZE];<NL>        char *path = req->uri;<NL><NL>        if (req->uri == NULL || req->method == NULL ||<NL>                req->headers == NULL || req->version == NULL) {<NL>                return 0;<NL>        }<NL><NL><NL>        if ((path[0] == '/') || ((strstr(path%% "http://") == path)<NL>                                                         && (path = strchr(path\<NL><NL> + 7%%  '/')))) {<NL>                path += 1; // remove leading slash                              <NL><NL>                if (path[0] == '\0') {  // substituting in index.html for a bla\<NL><NL>nk URL!                                                                         <NL><NL>                        path = "index.html";<NL>                } else if (path[strlen(path) - 1] == '/') {<NL>                        //concatenating index.html for a /-terminated URL!      <NL><NL>                        strcat(path%% "index.html");<NL>                }41%% L2154323456789201920123456<NL><HT><HT>78<NL>930123        } else {<NL>                statcode = 400;<NL>        }<NL><NL>        if (statcode == 200 && (urifd = open(path%% O_RDONLY%% 0)) < 0) {<NL>                if (errno == ENOENT || errno == ENOTDIR) { // file or directory\<NL><NL> doesn't exist                                                                  <NL><NL>                        statcode = 404;<NL>                } else if (errno == EACCES) { // access denied                  <NL><NL>                        statcode = 403;<NL>                } else {<NL>                        // some other file access problem                       <NL><NL>                        statcode = 500;<NL>                }<NL>        }<NL><NL>        if (strstr(path%% "..") != NULL) {<NL>                statcode = 500;<NL>        }<NL>7%% L23456789401234567895012<NL><NL><NL>        sendmessage[0] = '\0';<NL>        if (strcmp(req->version%% "0.9") != 0) { // full request                 <NL><NL>                char *ext; // file extension                                    <NL><NL>                time_t curtime;<NL>                char *imstime;<NL>                struct tm tm;<NL>                struct stat stbuf;<NL><NL><NL>                if (statcode == 200) {<NL>                        if (ext = strrchr(path%% '.')) ext++; // skip the '.'    <NL><NL>                        else ext = "";<NL>                } else {<NL>                        // errors are always html messages                      <NL><NL>                        ext = "html";<NL>                }<NL><NL>                // Conditional GET                                              <NL><NL><HT><HT>if ((strcmp(req->method%% "GET") == 0)51%% L25345676567896012345678<NL><NL><NL><NL><NL>9701<NL><NL>2                        && (statcode == 200)<NL>                        && (imstime = get_header(req%% "If-Modified-Since"))) {<NL><NL>                        // Get statistics about the requested URI from the loca\<NL><NL>l filesystem                                                                    <NL><NL>                        if (stat(path%% &stbuf) == -1) {<NL>                                statcode = 500;<NL>                        }<NL><NL>                        if (!strptime(imstime%% "%%a%% %%d %%b %%Y %%H:%%M:%%S GMT"%% &tm\<NL><NL>)<NL>                                && !strptime(imstime%% "%%a%% %%d-%%b-%%y %%H:%%M:%%S GM\<NL><NL>T"%% &tm)<NL>                                && !strptime(imstime%% "%%a %%b %%d %%H:%%M:%%S %%Y"%% &\<NL><NL>tm)) {<NL>                                // badly formatted date                         <NL><NL>                                statcode = 400;<NL>                        }<NL><NL>                        if (stbuf.st_mtime <= my_timegm(&tm)) {<NL>                                // Not Modified                                 <NL>4%% L273432123456789801<NL>2<NL><HT>3456789                                statcode = 304;<NL>                        }<NL>                }<NL><NL>                time(&curtime); // time for Date: header                        <NL><NL>                strcat(sendmessage%% "HTTP/1.0 ");<NL>                strcat(sendmessage%% status(statcode));<NL>                strcat(sendmessage%% "<NL>Date: ");<NL>                strncat(sendmessage%% asctime(gmtime(&curtime))%% 24);<NL>                strcat(sendmessage%% "<NL>Server: Frobozz Magic Software Company\<NL><NL> Webserver v.002");<NL>                strcat(sendmessage%% "<NL>Connection: close");<NL>                strcat(sendmessage%% "<NL>Content-Type: ");<NL>                strcat(sendmessage%% contype(ext));<NL>                strcat(sendmessage%% "<NL><NL>");<NL><NL>        }<NL><NL>        if (statcode != 200) {<NL>                strcat(sendmessage%% "<html><head><title>");7%% L29012345678930012345678                strcat(sendmessage%% status(statcode));<NL>                strcat(sendmessage%% "</title></head><body><h2>HTTP/1.0</h2><h1>\<NL><NL>");<NL>                strcat(sendmessage%% status(statcode));<NL>                strcat(sendmessage%% "</h1><h2>URI: ");<NL>                strcat(sendmessage%% path);<NL>                strcat(sendmessage%% "</h2></body></html>");<NL>        }<NL><NL>        if (sendmessage[0] != '\0') {<NL>                // send headers as long as there are headers to send            <NL><NL>                if (send(sockfd%% sendmessage%% strlen(sendmessage)%% 0) < 0) {<NL>                        perror("send");<NL>                        pthread_exit(NULL);<NL>                }<NL>        }<NL><NL>        if (statcode == 200 && (strcmp(req->method%% "HEAD") != 0)) {<NL>                // send the requested file as long as there's no error and the  <NL><NL>                // request wasn't just for the headers                          <NL><NL>                int readbytes;<NL>61%% L30910123432100989101234567892012345678<NL>                while (readbytes = read(urifd%% sendmessage%% BUFSIZE)) {<NL>                        if (readbytes < 0) {<NL>                                perror("read");<NL>                                pthread_exit(NULL);<NL>                        }<NL>                        if (send(sockfd%% sendmessage%% readbytes%% 0) < 0) {<NL>                                perror("send");<NL>                                pthread_exit(NULL);<NL>                        }<NL>                }<NL>        }<NL>}<NL><NL>void *data_thread(void *sockfd_ptr) {<NL><NL>        int sockfd = *(int *) sockfd_ptr;<NL>        const int BUFSIZE = 5;<NL>        char recvmessage[BUFSIZE];<NL>        char *headerstr = NULL;<NL>5%% L329301234567894012345678<NL>        char *newheaderstr = NULL;<NL>        int recvbytes = 0;<NL>        int curheadlen = 0;<NL>        int totalheadlen = 0;<NL>        httpreq_t req;<NL>        int statcode = 200;<NL>        int done = 0;<NL>        int seen_header = 0;<NL>        char *header_end;<NL>        int content_length = 0;<NL>        char *qstr;<NL><NL>        free(sockfd_ptr); // we have the int value out of this now              <NL><NL>        recvmessage[BUFSIZE - 1] = '\0'; // mark end of "string"                <NL><NL><NL>        /* Read incoming client message from the socket */<NL>        while(!done && (recvbytes = recv(sockfd%% recvmessage%% BUFSIZE - 1%% 0)))\<NL><NL> {<NL>                if (recvbytes < 0) {<NL>                        perror("recv");<NL>                        pthread_exit(NULL);70%% L349501234567896012345<NL>678<NL>                }<NL><NL><NL>                recvmessage[recvbytes] = '\0';<NL><NL>                if (seen_header) {<NL>                        // getting the entity body                              <NL><NL>                        content_length -= recvbytes;<NL>                        if (content_length <= 0) done = 1;<NL><NL>                } else {<NL><NL>                        newheaderstr = (char *) malloc((totalheadlen + recvbyte\<NL><NL>s + 1) * sizeof(char));<NL>                        newheaderstr[totalheadlen + recvbytes] = '\0';<NL>                        memcpy(newheaderstr%% headerstr%% totalheadlen);<NL>                        memcpy(newheaderstr + totalheadlen%% recvmessage%% recvby\<NL><NL>tes);<NL><NL>                        if (headerstr != NULL) {3%% L36970123456789801<NL>234<NL>56<NL>                                free(headerstr);<NL>                        }<NL><NL>                        headerstr = newheaderstr;<NL>                        totalheadlen += recvbytes;<NL><NL>                        header_end = strstr(headerstr%% "<NL><NL>");<NL><NL>                        if (header_end) {<NL>                                seen_header = 1;<NL>                                header_end[2] = '\0';<NL><NL>                                if (parsereq(&req%% headerstr) != 0) {<NL>                                        statcode = 400;<NL>                                }<NL><NL>                                if (strcmp(req.method%% "POST") == 0) {<NL><NL>                                        // grab the body length                 <NL><NL>                                        char *clenstr = get_header(&req%% "Conte\<NL>7%% L3878990123456789400123456<NL>nt-Length");<NL><NL>                                        if (clenstr) {<NL><NL>                                                content_length = atoi(clenstr) \<NL><NL>- ((headerstr + totalheadlen) - header_end - 4);<NL><NL>                                                if (content_length <= 0) {<NL>                                                        done = 1;<NL>                                                }<NL><NL>                                                free(clenstr);<NL><NL>                                        } else {<NL><NL>                                                statcode = 400; // bad request \<NL><NL>-- no content length                                                            <NL><NL>                                                done = 1;<NL>                                        }<NL><NL>                                } else {8178910<NL>12345678920<NL>1234<NL><NL>                                        // This isn't a POST%% so there's no ent\<NL><NL>ity body                                                                        <NL><NL>                                        done = 1;<NL><NL>                                        if (strcmp(req.method%% "GET") != 0<NL>                                                && strcmp(req.method%% "HEAD") !\<NL><NL>= 0) {<NL><NL>                                                statcode = 501; // unknown requ\<NL><NL>est method                                                                      <NL><NL>                                        }<NL><NL>                                }<NL>                        } // end of "if (header)end)"                           <NL><NL>                }<NL>        } // end of recv while loop                                             <NL><NL><NL>        // used to deref a NULL pointer here... :(                              <NL><NL>        if (headerstr != NULL) {<NL>4%% L4256<NL>78930<NL>12<NL>3456789401<NL>                printf("%%s<NL>"%% headerstr);<NL>                free(headerstr);<NL>        }<NL><NL>        send_response(sockfd%% &req%% statcode);<NL>        close(sockfd);<NL><NL>        return NULL;<NL><NL>}<NL><NL>int main(int argc%% char *argv[]) {<NL>        int acc%% sockfd%% clen%% port;<NL>        struct hostent *he;<NL>        struct sockaddr_in caddr%% saddr;<NL><NL>        if(argc <= 1) {<NL><NL>                fprintf(stderr%% "No port specified. Exiting!<NL>");<NL>                exit(1);6%% L44234567895012343456789601<NL><NL>        }<NL><NL>        port = atoi(argv[1]);<NL><NL>        /* Obtain name and address for the local host */<NL>        if((he=gethostbyname("localhost"))==NULL) {<NL><NL>                herror("gethostbyname");<NL>                exit(1);<NL><NL>        }<NL><NL>        /* Open a TCP (Internet Stream) socket */<NL>        if((sockfd=socket(AF_INET%%SOCK_STREAM%%0)) == -1) {<NL><NL>                perror("socket");<NL>                exit(1);<NL><NL>        }<NL>9%% L462105960123456789701234567898012<NL><NL>        /* Create socket address structure for the local host */<NL>        memset((char *) &saddr%% '\0'%% sizeof(saddr));<NL>        saddr.sin_family=AF_INET;<NL>        saddr.sin_port=htons(port);<NL>        saddr.sin_addr.s_addr=htonl(INADDR_ANY);<NL><NL>        /* Bind our local address so that the client can send to us */<NL>        if(bind(sockfd%%(struct sockaddr *) &saddr%%sizeof(saddr)) == -1) {<NL>                perror("bind");<NL>                exit(1);<NL>        }<NL><NL>        if(listen(sockfd%%5) < 0) {<NL>                perror("listen");<NL>                exit(1);<NL>        }<NL><NL>        /* Infinite loop for receiving and processing client requests */<NL>        for(;;) {<NL>                clen=sizeof(caddr);91%% L48345678990123456789500123<NL>21<HT><HT>23<NL><NL>                /* Wait for a connection for a client process */<NL>                acc=accept(sockfd%%(struct sockaddr *) &caddr%%(socklen_t*)&clen)\<NL><NL>;<NL>                if(acc < 0) {<NL>                        perror("accept");<NL>                        exit(1);<NL>                } else {<NL>                        pthread_t *thread = (pthread_t *) malloc(sizeof(pthread\<NL><NL>_t));<NL>                        int *sockfd_ptr = (int *) malloc(sizeof(int));<NL><NL>                        *sockfd_ptr = acc;<NL>                        pthread_create(thread%% NULL%% data_thread%% sockfd_ptr);<NL>                }<NL>        }<NL><NL>        return 0;<NL>}<NL><NL>Bot L50454345<NL>678910<NL>1234<HT><HT><HT>(No files need saving)>%,emacs webserver.c
CMBEGIN,Nov 28 12:21:52,/usr/src/fhttpd,wget http://localhost:8080/123456789,%--2018-11-28 12:21:52--  http://localhost:8080/123456789<NL>Resolving localhost (localhost)... 127.0.0.1<NL>Connecting to localhost (localhost)|127.0.0.1|:8080... connected.<NL>HTTP request sent%% awaiting response... 404 Not Found<NL>2018-11-28 12:21:52 ERROR 404: Not Found.<NL>%,wget http://localhost:8080/123456789
CMBEGIN,,,wget http://localhost:8080/1234567891234567891234 ,%56789123456789123456789123456789123456789123456789123456789123456789<NL>--2018-11-28 12:22:08--  http://localhost:8080/123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789<NL>Resolving localhost (localhost)... 127.0.0.1<NL>Connecting to localhost (localhost)|127.0.0.1|:8080... connected.<NL>HTTP request sent%% awaiting response... 404 Not Found<NL>2018-11-28 12:22:08 ERROR 404: Not Found.<NL>%,
CMBEGIN,,,wget http://localhost:8080/12345678912345678912345,%56789123456789123456789123456789123456789123456789123456789123456789123456789123 <NL>45678912345678912345678912345678912345678912345678912345678912345678912345678912 <NL>34567891234567891234567891234567891234567891234567891234567891234567891234567891 <NL>23456789123456789123456789123456789123456789123456789123456789123456789123456789 <NL>12345678912345678912345678912345678912345678912345678912345678912345678912345678 <NL>91234567891234567891234567891234567891234567891234567891234567891234567891234567 <NL>89123456789123456789123456789123456789123456789123456789123456789123456789123456 <NL>78912345678912345678912345678912345678912345678912345678912345678912345678912345 <NL>67891234567891234567891234567891234567891234567891234567891234567891234567891234 <NL>56789123456789123456789123456789123456789123456789123456789123456789123456789123 <NL>456789123456789123456789123456789123456789123456789123456789123456789123456789<NL>The name is too long%% 900 chars total.<NL>Trying to shorten...<NL>New name is 12345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912.<NL>--2018-11-28 12:22:47--  http://localhostesolving localhost (localhost)... 127.0.0.1<NL>Connecting to localhost (localhost)|127.0.0.1|:8080... connected.<NL>HTTP request sent%% awaiting response... ^C%,
CMBEGIN,,,wget http://localhost:8080/12345678912345678912345,%567891234567891234567891234567891234567891234567891234567891234567891234567891234<NL>456789123456789123456789123456789123456789123456789123456789123456789123456789123<NL>345678912345678912345678912345678912345678912345678912345678912345678912345678912<NL>234567891234567891234567891234567891234567891234567891234567891234567891234567891<NL>123456789123456789123456789123456789123456789123456789123456789123456789123456789<NL>912345678912345678912345678912345678912345678912345678912345678912345678912345678<NL>891234567891234567891234567891234567891234567891234567891234567891234567891234567<NL>789123456789123456789123456789123456789123456789123456789123456789123456789123456<NL>678912345678912345678912345678912345678912345678912345678912345678912345678912345<NL>567891234567891234567891234567891234567891234567891234567891234567891234567891234<NL>45678912345678912345678912345678912345678912345678912345678912345678912345678912 <NL>34567891234567891234567891234567891234567891234567891234567891234567891234567891 <NL>23456789<NL>The name is too long%% 990 chars total.<NL>Trying to shorten...<NL>New name is 12345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912.<NL>--2018-11-28 12:23:01--  http://localhostesolving localhost (localhost)... 127.0.0.1<NL>Connecting to localhost (localhost)|127.0.0.1|:8080... connected.<NL>HTTP request sent%% awaiting response... No data received.<NL>Retrying.<NL><NL>--2018-11-28 12:23:04--  (try: 2)  http://localhost:8080/123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789<NL>Connecting to localhost (localhost)|127.0.0.1|:8080... failed: Connection refused.<NL>Resolving localhost (localhost)... 127.0.0.1<NL>Connecting to localhost (localhost)|127.0.0.1|:8080... failed: Connection refused.%,
CMBEGIN,Nov 28 12:23:16,/usr/src/fhttpd,gdb ./webserver,%GNU gdb (Ubuntu 7.11.1-0ubuntu1~16.04) 7.11.1<NL>Copyright (C) 2016 Free Software Foundation%% Inc.<NL>License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html><NL>This is free software: you are free to change and redistribute it.<NL>There is NO WARRANTY%% to the extent permitted by law.  Type \"show copying\"<NL>and \"show warranty\" for details.<NL>This GDB was configured as \"x86_64-linux-gnu\".<NL>Type \"show configuration\" for configuration details.<NL>For bug reporting instructions%% please see:<NL><http://www.gnu.org/software/gdb/bugs/>.<NL>Find the GDB manual and other documentation resources online at:<NL><http://www.gnu.org/software/gdb/documentation/>.<NL>For help%% type \"help\".<NL>Type \"apropos word\" to search for commands related to \"word\"...<NL>Reading symbols from ./webserver...done.<NL>(gdb) run 8080<NL>Starting program: /usr/src/fhttpd/webserver 8080<NL>[Thread debugging using libthread_db enabled]<NL>Using host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".<NL>bind: Address already in use<NL>[Inferior 1 (process 28714) exited with code 01]<NL>(gdb) q%,gdb ./webserver
CMBEGIN,,,wget http://localhost:8080/12345678912345678912345,%567891234567891234567891234567891234567891234567891234567891234567891234567891234<NL>456789123456789123456789123456789123456789123456789123456789123456789123456789123<NL>345678912345678912345678912345678912345678912345678912345678912345678912345678912<NL>234567891234567891234567891234567891234567891234567891234567891234567891234567891<NL>123456789123456789123456789123456789123456789123456789123456789123456789123456789<NL>912345678912345678912345678912345678912345678912345678912345678912345678912345678<NL>891234567891234567891234567891234567891234567891234567891234567891234567891234567<NL>789123456789123456789123456789123456789123456789123456789123456789123456789123456<NL>678912345678912345678912345678912345678912345678912345678912345678912345678912345<NL>567891234567891234567891234567891234567891234567891234567891234567891234567891234<NL>456789123456789123456789123456789123456789123456789123456789123456789123456789123<NL>345678912345678912345678912345678912345678912345678912345678912345678912345678912<NL>23456789<ESC>[A<ESC>[A3456789123456789123456789123456789123456789123456789123456789123456789<ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<ESC>[A<ESC>[A456789123456789123456789123456789123456789123456789123456789123456789123456789123<NL>345678912345678912345678912345678912345678912345678912345678912345678912345678912<NL>23456789<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[Aerver:/usr/src/fhttpd$ wget http://localhostmache@server:/usr/src/fhttpd$ wget http://localhostache@server:/usr/src/fhttpd$ wget http://localhost:8081<NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL>The name is too long%% 990 chars total.<NL>Trying to shorten...<NL>New name is 12345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912.<NL>--2018-11-28 12:24:34--  http://localhostesolving localhost (localhost)... 127.0.0.1<NL>Connecting to localhost (localhost)|127.0.0.1|:8081... connected.<NL>HTTP request sent%% awaiting response... No data received.<NL>Retrying.<NL><NL>--2018-11-28 12:25:09--  (try: 2)  http://localhostonnecting to localhost (localhost)|127.0.0.1|:8081... failed: Connection refused.<NL>Resolving localhost (localhost)... 127.0.0.1<NL>Connecting to localhost (localhost)|127.0.0.1|:8081... failed: Connection refused.%,
CMBEGIN,,,wget http://localhost:8081/12345678912345678912345,567891234567891234567891234567891234567891234567891234567891234567891234567891234<NL>456789123456789123456789123456789123456789123456789123456789123456789123456789123<NL>345678912345678912345678912345678912345678912345678912345678912345678912345678912<NL>234567891234567891234567891234567891234567891234567891234567891234567891234567891<NL>123456789123456789123456789123456789123456789123456789123456789123456789123456789<NL>912345678912345678912345678912345678912345678912345678912345678912345678912345678<NL>891234567891234567891234567891234567891234567891234567891234567891234567891234567<NL>789123456789123456789123456789123456789123456789123456789123456789123456789123456<NL>678912345678912345678912345678912345678912345678912345678912345678912345678912345<NL>567891234567891234567891234567891234567891234567891234567891234567891234567891234<NL>456789123456789123456789123456789123456789123456789123456789123456789123456789123<NL>345678912345678912345678912345678912345678912345678912345678912345678912345678912<NL>23456789<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[Aerver:/usr/src/fhttpd$ gdb ./webserver<ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL>,
CMBEGIN,,,wget http://localhost:8080/12345678912345678912345,567891234567891234567891234567891234567891234567891234567891234567891234567891234<NL>456789123456789123456789123456789123456789123456789123456789123456789123456789123<NL>345678912345678912345678912345678912345678912345678912345678912345678912345678912<NL>234567891234567891234567891234567891234567891234567891234567891234567891234567891<NL>123456789123456789123456789123456789123456789123456789123456789123456789123456789<NL>912345678912345678912345678912345678912345678912345678912345678912345678912345678<NL>891234567891234567891234567891234567891234567891234567891234567891234567891234567<NL>789123456789123456789123456789123456789123456789123456789123456789123456789123456<NL>678912345678912345678912345678912345678912345678912345678912345678912345678912345<NL>567891234567891234567891234567891234567891234567891234567891234567891234567891234<NL>456789123456789123456789123456789123456789123456789123456789123456789123456789123<NL>345678912345678912345678912345678912345678912345678912345678912345678912345678912<NL>23456789<ESC>[A<ESC>[A3456789123456789123456789123456789123456789123456789123456789123456789<ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<ESC>[A<ESC>[A456789123456789123456789123456789123456789123456789123456789123456789123456789<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<BS><BS><BS><BS><BS><BS><BS><BS><BS><BS><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A56789123456789123456789123456789123456789123456789123456789123456789<ESC>[A<BS><ESC>[K<NL>,
CMBEGIN,,,wget http://localhost:8080/123456789,,
CMBEGIN,Nov 28 12:25:14,/usr/src/fhttpd,emacs webserver.c,%=><NL>=-111:----F1  *scratch*      All L1     (Fundamental) ---------------------------<NL>Loading 00debian-vars...done<NL>/etc/emacs/site-start.d/50autoconf.el (source)...<NL>done<NL>Loading /etc/emacs/site-start.d/50autoconf.el (source)...doneFile Edit Options Buffers Tools Lisp-Interaction Help                           <NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL>-111:----F1  *scratch*      All L1     (Lisp Interaction) ----------------------<NL>For information about GNU Emacs and the GNU system%% type C-h C-a.<NL>Note: file is write protected<NL>Note: file is write protectedFile Edit Options Buffers Tools C Help                                          <NL><NL>// webserver.c                                                                  <NL><NL>// FrobozzCo Official Webserver                                                 <NL><NL>// Barbazzo Fernap barbazzo@gue.com                                             <NL><NL>// Gustar Woomax gustar@gue.com                                                 <NL><NL>// Wilbar Memboob wilbar@gue.com                                                <NL><NL><NL>// By the Frobozz Magic Webserver Company                                       <NL><NL>// Released under the Grue Public License                                       <NL><NL>// Frobruary 14th%% 1067 GUE                                                     <NL><NL><NL>// THERE IS NO WARRANTY FOR THE PROGRAM%% TO THE EXTENT PERMITTED                <NL><NL>// BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE               <NL><NL>// COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \u201CAS IS\uinclude <stdio.h><NL>#include <errno.h><NL>#include <string.h><NL>#include <stdlib.h><NL>#include <netdb.h><NL>#include <sys/stat.h><NL>#include <sys/types.h><NL>#include <sys/socket.h><NL>#include <netinet/in.h><NL>#include <arpa/inet.h><NL>#include <unistd.h><NL>#include <fcntl.h><NL>#include <time.h><NL>#include <pthread.h><NL><NL>#define _XOPEN_SOURCE<NL><NL>typedef struct {<NL>        char *method;<NL>        char *uri;<NL>-11U:%%%%--F1  webserver.c    Top L1     (C/l Abbrev) ----------------------------<NL>        char *method;<NL>        char *uri;<NL>        char *version;<NL>        char *headers;<NL>} httpreq_t;<NL><NL><NL>* NOTE: this function is based on a function provided in the GNU "timegm" man<NL>   page. timegm is a GNU extension to time.h that returns the given tm struct a\<NL>s                                                                               <NL>   a UNIX timestamp in GMT/UTC%% rather than local time. The man page suggests a<NL>   function similar to the one below as a portable equivalent.   <NL> */<NL>time_t my_timegm(struct tm *tm) {<NL>        time_t ret;<NL>        char *tz;<NL><NL>        tz = getenv("TZ");<NL>        putenv("TZ=GMT");<NL>        tzset();<NL><HT>ret = mktime(tm);<NL>        if (tz) {<NL>                char envstr[strlen(tz) + 4];<NL>                envstr[0] = '\0';<NL>                strcat(envstr%% "TZ=");<NL>                strcat(envstr%% tz);<NL>                putenv(envstr);<NL>        } else {<NL>                putenv("TZ=");<NL>        }<NL><NL>        tzset();<NL><NL>        return ret;<NL>}<NL><NL>char *get_header(const httpreq_t *req%% const char* headername) {<NL><HT>char *hdrptr;<NL>        char *hdrend;retval = NULL;<NL> 9%% L39<NL>retval = NULL;<NL>searchstr[strlen(headername) + 5];<NL><HT>strcpy(searchstr%% "<NL>");<NL>        strcat(searchstr%% headername);<NL><HT>strcat(searchstr%% ": ");<NL><NL>        if (hdrptr = strstr(req->headers%% searchstr)) {<NL>                hdrptr += strlen(searchstr);<NL>                if (hdrend = strstr(hdrptr%% "<NL>")) {<NL>                        char hdrval[1024]; // temporary return value            <NL>                        memcpy((char *)hdrval%% hdrptr%% (hdrend - hdrptr));<NL>                        hdrval[hdrend - hdrptr] = '\0'; // tack null onto end o\<NL>f header value                                                                  <NL><HT>                int hdrvallen = strlen(hdrval);<NL><HT>                retval = (char *)malloc((hdrvallen + 1) * sizeof(char))\<NL>; // malloc a space for retval                                                  <NL><HT>                strcpy(retval%% (char *)hdrval);<NL><HT>        } else {<NL><HT>                retval = (char *)malloc((strlen(hdrptr) + 1) * sizeof(c\<NL>har)); //                                                                       <NL><HT>                strcpy(retval%% hdrptr);<NL><HT><HT>}<NL><HT>}<NL><NL><HT>return retval;<NL>}<NL><NL>/* As long as str begins with a proper HTTP-Version followed by delim%% returns \<NL>a                                                                               <NL>   pointer to the start of the version number (e.g.%% 1.0). Returns NULL otherwi\<NL>se.                                                                             <NL> */<NL>char *http_version_str(char *str%% char *delim) {<NL>        char *vstart = strstr(str%% "HTTP/");<NL><HT>char *vnumstart = str + 5;<NL>        char *vdot = strchr(str%% '.');vend = strstr(str%% delim);digits = "0123456789";<NL><HT>int majvlen = 0;<NL><HT>int minvlen = 0;15%% L77<NL><HT>int majvlen = 0;<NL><HT>int minvlen = 0;<NL><NL><HT>if (!vstart || !vdot // something's missing                             <NL><HT>        || vstart != str) // str doesn't start with "HTTP/"             <NL><HT>        return NULL;<NL><NL><HT>majvlen = strspn(vnumstart%% digits);<NL><HT>minvlen = strspn(vdot + 1%% digits);<NL><NL><HT>if (majvlen < 1 || (vnumstart + majvlen) != vdot // bad major version<NL><HT><HT>|| minvlen < 1 || (vdot + minvlen + 1) != vend) // bad minor ve\<NL>rsion                                                                           <NL>                return NULL;<NL><NL><HT>return vnumstart;<NL>}<NL><NL>/* Fills req with the request data from datastr. Returns 0 on success.          <NL> */<NL><NL>int parsereq(httpreq_t *req%% char *datastr) {<NL><HT>char *position;<NL><HT>char *last_position = datastr;<NL><HT>char *temp_position;<NL><HT>int matchlen;<NL><NL><HT>req->method = "";<NL>        req->uri = "";<NL>        req->version = "";<NL>        req->headers = "";<NL><NL>        if (!(position = strchr(last_position%% ' '))) {<NL>                return 1;<NL><HT>}<NL>matchlen = (int)(position - last_position);<NL><HT>req->method = (char *)malloc((matchlen + 1) * sizeof(char));<NL><HT>memcpy(req->method%% last_position%% matchlen);<NL><HT>req->method[matchlen] = '\0';<NL><HT>last_position = position + 1;<NL>24%% L111<NL>last_position = position + 1;<NL><NL><HT>if (!(position = strchr(last_position%% ' '))<NL><HT>        && !(position = strstr(last_position%% "<NL>"))) {<NL><HT><HT>return 1;<NL><HT>}<NL><NL>// strip any query string out of the URI                                <NL><HT>if ((temp_position = strchr(last_position%% '?')) && temp_position < pos\<NL>ition)<NL><HT>        matchlen = (int)(temp_position - last_position);<NL><HT>else<NL>                matchlen = (int)(position - last_position);<NL><NL><HT>req->uri = (char *)malloc((matchlen + 1) * sizeof(char));<NL><HT>memcpy(req->uri%% last_position%% matchlen);<NL>        req->uri[matchlen] = '\0';<NL><HT>if (position[0] == '<NL>') {<NL>                req->version = "0.9";<NL>                req->headers = "";<NL><HT><HT>return 0; // simple req -- uri only                             <NL>        }<NL><NL><HT>// If we get here%% it's a full request%% get the HTTP version and header\<NL>s                                                                               <NL><HT>last_position = position + 1;<NL><NL><HT>if (!(position = strstr(last_position%% "<NL>"))<NL><HT>        || !(last_position = http_version_str(last_position%% "<NL>"))) \<NL>{<NL><HT>        return 1;<NL><HT>}<NL><NL><NL>        req->version = (char *)malloc((matchlen + 1) * sizeof(char));<NL>        memcpy(req->version%% last_position%% matchlen);version[matchlen] = '\0';<NL><HT>last_position = position;<NL><NL><HT>req->headers = (char *)malloc(strlen(last_position) * sizeof(char));<NL><HT>strcpy(req->headers%% last_position);31%% L149<NL><HT>req->headers = (char *)malloc(strlen(last_position) * sizeof(char));<NL><HT>strcpy(req->headers%% last_position);<NL><NL><HT>return 0;<NL>}<NL><NL>char *contype(char *ext) {<NL><HT>if (strcmp(ext%% "html") == 0) return "text/html";<NL><HT>else if (strcmp(ext%% "htm") == 0) return "text/html";<NL>        else if (strcmp(ext%% "jpeg") == 0) return "image/jpeg";<NL><HT>else if (strcmp(ext%% "jpg") == 0) return "image/jpeg";if (strcmp(ext%% "gif") == 0) return "image/gif";<NL><HT>else if (strcmp(ext%% "txt") == 0) return "text/plain";<NL><HT>else return "application/octet-stream";<NL><NL>}<NL><NL>char *status(int statcode) {<NL><HT>if (statcode == 200)    return "200 OK";<NL><HT>else if (statcode == 304) return "304 Not Modified";<NL><HT>else if (statcode == 400) return "400 Bad Request";<NL><HT>else if (statcode == 403) return "403 Forbidden";<NL><HT>else if (statcode == 404) return "404 Not Found";<NL><HT>else if (statcode == 500) return "500 Internal Server Error";<NL>        else if (statcode == 501) return "501 Not Implemented";<NL><HT>else return "";<NL>}<NL><NL>int send_response(int sockfd%% httpreq_t *req%% int statcode) {<NL>        int urifd;<NL><HT>const int BUFSIZE = 1024;<NL><HT>char sendmessage[BUFSIZE];<NL><HT>char *path = req->uri;<NL><NL><HT>if (req->uri == NULL || req->method == NULL ||<NL><HT>        req->headers == NULL || req->version == NULL) {<NL><HT>        return 0;<NL><HT>}<NL><NL><NL><HT>if ((path[0] == '/') || ((strstr(path%% "http://") == path)9%% L185<NL><NL><HT>if ((path[0] == '/') || ((strstr(path%% "http://") == path)&& (path = strchr(path\<NL>+ 7%%  '/')))) {<NL>                path += 1; // remove leading slash                              <NL><HT><HT>if (path[0] == '\0') {  // substituting in index.html for a bla\<NL>nk URL!                                                                         <NL><HT>                path = "index.html";<NL><HT>        } else if (path[strlen(path) - 1] == '/') {<NL><HT>                //concatenating index.html for a /-terminated URL!      <NL><HT>                strcat(path%% "index.html");<NL><HT>        }<NL><HT>} else {<NL><HT>        statcode = 400;<NL><HT>}<NL><NL><HT>if (statcode == 200 && (urifd = open(path%% O_RDONLY%% 0)) < 0) {<NL>                if (errno == ENOENT || errno == ENOTDIR) { // file or directory\<NL> doesn't exist                                                                  <NL><HT>                statcode = 404;<NL><HT>        } else if (errno == EACCES) { // access denied                  <NL><HT>                statcode = 403;<NL><HT>        } else {<NL><HT>                // some other file access problem                       <NL><HT>                statcode = 500;<NL><HT>        }<NL><NL><NL>        if (strstr(path%% "..") != NULL) {<NL><HT>        statcode = 500;<NL><HT>}<NL><NL><NL><HT>sendmessage[0] = '\0';strcmp(req->version%% "0.9") != 0) { // full request                 <NL><HT><HT>char *ext; // file extension                                    <NL><HT><HT>time_t curtime;<NL><HT>        char *imstime;<NL><HT><HT>struct tm tm;<NL><HT><HT>struct stat stbuf;<NL>48%% L224<NL><HT><HT>struct stat stbuf;<NL><NL><NL>               if (statcode == 200) {<NL><HT><HT>        if (ext = strrchr(path%% '.')) ext++; // skip the '.'<NL><HT><HT>        else ext = "";<NL>                } else {<NL>// errors are always html messages                      <NL><HT><HT>        ext = "html";<NL><HT><HT>}<NL><NL><HT><HT>// Conditional GET                                              <NL><HT>        if ((strcmp(req->method%% "GET") == 0)<NL><HT><HT>        && (statcode == 200)<NL><HT>                && (imstime = get_header(req%% "If-Modified-Since"))) {<NL><NL><HT>                // Get statistics about the requested URI from the loca\<NL>l filesystem                                                                    <NL>                        if (stat(path%% &stbuf) == -1) {<NL><HT><HT><HT>500<NL><HT><HT>        }<NL><NL><HT><HT>        if (!strptime(imstime%% "%%a%% %%d %%b %%Y %%H:%%M:%%S GMT"%% &tm\<NL>)<NL><HT><HT><HT>        && !strptime(imstime%% "%%a%% %%d-%%b-%%y %%H:%%M:%%S GM\<NL>T"%% &tm)<NL>                        && !strptime(imstime%% "%%a %%b %%d %%H:%%M:%%S %%Y"%% &\<NL>tm)) {<NL><HT>                        // badly formatted date                         <NL><HT><HT>4<NL><HT><NL><NL><HT><HT>if (stbuf.st_mtime <= my_timegm(&tm)) {<NL><HT>                        // Not Modified                                 <NL><HT>                        statcode = 304;<NL><HT><HT>        }<NL><HT><HT>}<NL><NL><HT><HT>time(&curtime); // time for Date: header                        <NL><HT><HT>strcat(sendmessage%% "HTTP/1.0 ");<NL><HT><HT>strcat(sendmessage%% status(statcode));55%% L260<NL><HT><HT>strcat(sendmessage%% "HTTP/1.0 ");<NL><HT><HT>strcat(sendmessage%% status(statcode));<NL><HT><HT>strcat(sendmessage%% "<NL>Date: ");<NL><HT><HT>strncat(sendmessage%% asctime(gmtime(&curtime))%% 24);<NL><HT><HT>strcat(sendmessage%% "<NL>Server: Frobozz Magic Software Company\<NL> Webserver v.002");<NL>strcat(sendmessage%% "<NL>Connection: close");<NL><HT><HT>strcat(sendmessage%% "<NL>Content-Type: ");<NL><HT><HT>strcat(sendmessage%% contype(ext));<NL><HT><HT>strcat(sendmessage%% "<NL><NL>");<NL><NL><HT>}<NL><NL><HT>if (statcode != 200) {<NL><HT><HT>strcat(sendmessage%% "<html><head><title>");<NL><HT><HT>strcat(sendmessage%% status(statcode));<NL><HT><HT>strcat(sendmessage%% "</title></head><body><h2>HTTP/1.0</h2><h1><NL>");<NL><HT><HT>strcat(sendmessage%% status(statcode));<NL><HT><HT>strcat(sendmessage%% "</h1><h2>URI: ");<NL><HT><HT>strcat(sendmessage%% path);<NL><HT><HT>strcat(sendmessage%% "</h2></body></html>");<NL><HT>}<NL><NL><HT>if (sendmessage[0] != '\0') {<NL>                // send headers as long as there are headers to send            <NL><HT><HT>if (send(sockfd%% sendmessage%% strlen(sendmessage)%% 0) < 0) {<NL>                        perror("send");<NL><HT><HT><HT>pthread_exit(NULL);<NL><HT><HT>}<NL><HT><NL><NL>if (statcode == 200 && (strcmp(req->method%% "HEAD") != 0)) {<NL><HT><HT>// send the requested file as long as there's no error and the  <NL><HT><HT>// request wasn't just for the headers                          <NL><HT><HT>int readbytes;<NL><NL><HT><HT>while (readbytes = read(urifd%% sendmessage%% BUFSIZE)) {<NL><HT><HT>        if (readbytes < 0) {<NL><HT><HT>                perror("read");<NL><HT><HT>                pthread_exit(NULL);62%% L295<NL><HT><HT>                perror("read");<NL><HT><HT>                pthread_exit(NULL);<NL><HT><HT>        }<NL><HT><HT>        if (send(sockfd%% sendmessage%% readbytes%% 0) < 0) {<NL><HT><HT>                perror("send");<NL>                                pthread_exit(NULL);<NL><HT><HT>        }<NL><HT><HT>}<NL><HT>}<NL>}<NL><NL>void *data_thread(void *sockfd_ptr) {<NL><NL><HT>int sockfd = *(int *) sockfd_ptr;<NL><HT>const int BUFSIZE = 5;<NL><HT>char recvmessage[BUFSIZE];<NL><HT>char *headerstr = NULL;<NL>        char *newheaderstr = NULL;<NL><HT>int recvbytes = 0;<NL><HT>int curheadlen = 0;<NL><HT>int totalheadlen = 0;<NL><HT>httpreq_t req;<NL><HT>int statcode = 200;<NL><HT>int done = 0;<NL><HT>int seen_header = 0;<NL><HT>char *header_end;<NL><HT>int content_length = 0;<NL><HT>char *qstr;<NL><NL><HT>free(sockfd_ptr); // we have the int value out of this now              <NL><HT>recvmessage[BUFSIZE - 1] = '\0'; // mark end of "string"                <NL><NL><HT>/* Read incoming client message from the socket */<NL><HT>while(!done && (recvbytes = recv(sockfd%% recvmessage%% BUFSIZE - 1%% 0)))\<NL>{<NL><HT><HT>if (recvbytes < 0) {<NL><HT><HT><HT>perror("recv");<NL><HT><HT>        pthread_exit(NULL);<NL><HT><HT>}<NL><NL>71%% L332<NL><NL><NL><HT><HT>recvmessage[recvbytes] = '\0';<NL><NL><HT><HT>if (seen_header) {<NL><HT><HT><HT>// getting the entity body                              <NL><HT><HT><HT>content_length -= recvbytes;<NL><HT><HT>        if (content_length <= 0) done = 1;<NL><NL>                } else {<NL><NL>                        newheaderstr = (char *) malloc((totalheadlen + recvbyte\<NL>s + 1) * sizeof(char));<NL><HT>                newheaderstr[totalheadlen + recvbytes] = '\0';<NL><HT>                memcpy(newheaderstr%% headerstr%% totalheadlen);<NL><HT>                memcpy(newheaderstr + totalheadlen%% recvmessage%% recvby\<NL>tes);<NL><NL><HT>                if (headerstr != NULL) {<NL><HT>                        free(headerstr);<NL><HT>                }<NL><NL><HT>                headerstr = newheaderstr;<NL><HT>                totalheadlen += recvbytes;<NL><NL><HT>                header_end = strstr(headerstr%% "<NL><NL>");<NL><NL><HT>                if (header_end) {<NL><HT><HT><HT><HT>seen_header = 1;<NL><HT>                        header_end[2] = '\0';<NL><NL><HT><HT><HT><HT>if (parsereq(&req%% headerstr) != 0) {<NL><HT>                                statcode = 400;<NL><HT>                        }<NL><NL><HT><HT>                if (strcmp(req.method%% "POST") == 0) {<NL><NL><HT><HT><HT>                // grab the body length                 <NL><HT><HT>                        char *clenstr = get_header(&req%% "Conte\<NL>nt-Length");7%% L370<NL>nt-Length");<NL><NL><HT>                        if (clenstr) {<NL><NL><HT><HT>                                content_length = atoi(clenstr) \<NL>- ((headerstr + totalheadlen) - header_end - 4);<NL><NL><HT><HT><HT>{done = 1;<NL><HT><HT>                                }<NL><NL><HT><HT><HT>                        free(clenstr);<NL><NL><HT><HT><HT>                } else {<NL><NL><HT><HT><HT>                        statcode = 400; // bad request <NL>-- no content length                                                            <NL><HT><HT><HT><HT><HT><HT>done = 1;<NL><HT><HT><HT>                }<NL><NL><HT><HT><HT>        } else {<NL><NL><HT><HT><HT>                // This isn't a POST%% so there's no ent\<NL>ity body                                                                        <NL><HT><HT><HT><HT><HT>done = 1;<NL><NL><HT><HT><HT><HT><HT>if (strcmp(req.method%% "GET") != 0<NL><HT><HT><HT>                        && strcmp(req.method%% "HEAD") !\<NL>= 0) {<NL><NL><HT><HT><HT><HT><HT><HT>statcode = 501; // unknown requ\<NL>est method                                                                      <NL><HT><HT><HT><HT><HT>}<NL><NL><HT><HT><HT><HT>}<NL><HT><HT><HT>} // end of "if (header)end)"                           <NL><HT><HT>}<NL><HT>} // end of recv while loop                            <NL><NL>        // used to deref a NULL pointer here... :(                              <NL><HT>if (headerstr != NULL) {<NL>84%% L406<NL>        // used to deref a NULL pointer here... :(                              <NL><HT>if (headerstr != NULL) {<NL><HT><HT>printf("%%s<NL>"%% headerstr);<NL><HT><HT>free(headerstr);<NL><HT>}<NL><NL><HT>send_response(sockfd%% &req%% statcode);<NL><HT>close(sockfd);<NL><NL><HT>return NULL;<NL><NL>}<NL><NL>int main(int argc%% char *argv[]) {<NL><HT>int acc%% sockfd%% clen%% port;<NL><HT>struct hostent *he;<NL>        struct sockaddr_in caddr%% saddr;<NL><NL><HT>if(argc <= 1) {<NL><NL><HT><HT>fprintf(stderr%% "No port specified. Exiting!<NL>");<NL><HT><HT>exit(1);<NL><NL>        }<NL><NL><HT>port = atoi(argv[1]);<NL><NL><HT>/* Obtain name and address for the local host */<NL>        if((he=gethostbyname("localhost"))==NULL) {<NL><NL><HT><HT>herror("gethostbyname");<NL>                exit(1);<NL><NL><HT>}<NL><NL><HT>/* Open a TCP (Internet Stream) socket */<NL><HT>if((sockfd=socket(AF_INET%%SOCK_STREAM%%0)) == -1) {<NL><NL><HT><HT>perror("socket");<NL><HT>        exit(1);<NL>8%% L440<NL>                                                done = 1;<NL>                                        }<NL><NL>                                } else {<NL><NL>                                        // This isn't a POST%% so there's no ent\<NL><NL>ity body                                                                        <NL><NL>                                        done = 1;<NL><NL>                                        if (strcmp(req.method%% "GET") != 0<NL>                                                && strcmp(req.method%% "HEAD") !\<NL><NL>= 0) {<NL><NL>                                                statcode = 501; // unknown requ\<NL><NL>est method                                                                      <NL><NL>                                        }<NL><NL>                                }<NL>                        } // end of "if (header)end)"                           <NL><NL>                }<NL>        } // end of recv while loop                                             <NL><NL>6%% L439876543210298765432<NL><NL>1<NL><NL>                                if (strcmp(req.method%% "POST") == 0) {<NL><NL>                                        // grab the body length                 <NL><NL>                                        char *clenstr = get_header(&req%% "Conte\<NL><NL>nt-Length");<NL><NL>                                        if (clenstr) {<NL><NL>                                                content_length = atoi(clenstr) \<NL><NL>- ((headerstr + totalheadlen) - header_end - 4);<NL><NL>                                                if (content_length <= 0) {<NL>                                                        done = 1;<NL>                                                }<NL><NL>                                                free(clenstr);<NL><NL>                                        } else {<NL><NL>                                                statcode = 400; // bad request \<NL><NL>-- no content length                                                            <NL>3%% L420198765432100986543<NL><NL>2<NL>s + 1) * sizeof(char));<NL>                        newheaderstr[totalheadlen + recvbytes] = '\0';<NL>                        memcpy(newheaderstr%% headerstr%% totalheadlen);<NL>                        memcpy(newheaderstr + totalheadlen%% recvmessage%% recvby\<NL><NL>tes);<NL><NL>                        if (headerstr != NULL) {<NL>                                free(headerstr);<NL>                        }<NL><NL>                        headerstr = newheaderstr;<NL>                        totalheadlen += recvbytes;<NL><NL>                        header_end = strstr(headerstr%% "<NL><NL>");<NL><NL>                        if (header_end) {<NL>                                seen_header = 1;<NL>                                header_end[2] = '\0';<NL><NL>                                if (parsereq(&req%% headerstr) != 0) {<NL>                                        statcode = 400;<NL>                                }<NL>79%% L4010399876543210898765432<NL><NL>1<NL>        free(sockfd_ptr); // we have the int value out of this now              <NL><NL>        recvmessage[BUFSIZE - 1] = '\0'; // mark end of "string"                <NL><NL><NL>        /* Read incoming client message from the socket */<NL>        while(!done && (recvbytes = recv(sockfd%% recvmessage%% BUFSIZE - 1%% 0)))\<NL><NL> {<NL>                if (recvbytes < 0) {<NL>                        perror("recv");<NL>                        pthread_exit(NULL);<NL>                }<NL><NL><NL>                recvmessage[recvbytes] = '\0';<NL><NL>                if (seen_header) {<NL>                        // getting the entity body                              <NL><NL>                        content_length -= recvbytes;<NL>                        if (content_length <= 0) done = 1;<NL><NL>                } else {<NL><NL>                        newheaderstr = (char *) malloc((totalheadlen + recvbyte\<NL>5079876543210698765432<NL><NL>1<NL>        }<NL>}<NL><NL>void *data_thread(void *sockfd_ptr) {<NL><NL>        int sockfd = *(int *) sockfd_ptr;<NL>        const int BUFSIZE = 5;<NL>        char recvmessage[BUFSIZE];<NL>        char *headerstr = NULL;<NL>        char *newheaderstr = NULL;<NL>        int recvbytes = 0;<NL>        int curheadlen = 0;<NL>        int totalheadlen = 0;<NL>        httpreq_t req;<NL>        int statcode = 200;<NL>        int done = 0;<NL>        int seen_header = 0;<NL>        char *header_end;<NL>        int content_length = 0;<NL>        char *qstr;<NL>2%% L360598765432104987654321<NL><NL>0<NL>                if (send(sockfd%% sendmessage%% strlen(sendmessage)%% 0) < 0) {<NL>                        perror("send");<NL>                        pthread_exit(NULL);<NL>                }<NL>        }<NL><NL>        if (statcode == 200 && (strcmp(req->method%% "HEAD") != 0)) {<NL>                // send the requested file as long as there's no error and the  <NL><NL>                // request wasn't just for the headers                          <NL><NL>                int readbytes;<NL><NL>                while (readbytes = read(urifd%% sendmessage%% BUFSIZE)) {<NL>                        if (readbytes < 0) {<NL>                                perror("read");<NL>                                pthread_exit(NULL);<NL>                        }<NL>                        if (send(sockfd%% sendmessage%% readbytes%% 0) < 0) {<NL>                                perror("send");<NL>                                pthread_exit(NULL);<NL>                        }<NL>                }68%% L33987654321029876543210<NL><NL>19<NL>                strcat(sendmessage%% "<NL>Server: Frobozz Magic Software Company\<NL><NL> Webserver v.002");<NL>                strcat(sendmessage%% "<NL>Connection: close");<NL>                strcat(sendmessage%% "<NL>Content-Type: ");<NL>                strcat(sendmessage%% contype(ext));<NL>                strcat(sendmessage%% "<NL><NL>");<NL><NL>        }<NL><NL>        if (statcode != 200) {<NL>                strcat(sendmessage%% "<html><head><title>");<NL>                strcat(sendmessage%% status(statcode));<NL>                strcat(sendmessage%% "</title></head><body><h2>HTTP/1.0</h2><h1>\<NL><NL>");<NL>                strcat(sendmessage%% status(statcode));<NL>                strcat(sendmessage%% "</h1><h2>URI: ");<NL>                strcat(sendmessage%% path);<NL>                strcat(sendmessage%% "</h2></body></html>");<NL>        }<NL><NL>        if (sendmessage[0] != '\0') {<NL>                // send headers as long as there are headers to send            <NL>3%% L3187654321234321009876543210299<NL><NL><NL>                        if (!strptime(imstime%% "%%a%% %%d %%b %%Y %%H:%%M:%%S GMT"%% &tm\<NL><NL>)<NL>                                && !strptime(imstime%% "%%a%% %%d-%%b-%%y %%H:%%M:%%S GM\<NL><NL>T"%% &tm)<NL>                                && !strptime(imstime%% "%%a %%b %%d %%H:%%M:%%S %%Y"%% &\<NL><NL>tm)) {<NL>                                // badly formatted date                         <NL><NL>                                statcode = 400;<NL>                        }<NL><NL>                        if (stbuf.st_mtime <= my_timegm(&tm)) {<NL>                                // Not Modified                                 <NL><NL>                                statcode = 304;<NL>                        }<NL>                }<NL><NL>                time(&curtime); // time for Date: header                        <NL><NL>                strcat(sendmessage%% "HTTP/1.0 ");<NL>                strcat(sendmessage%% status(statcode));<NL>                strcat(sendmessage%% "<NL>Date: ");<NL>                strncat(sendmessage%% asctime(gmtime(&curtime))%% 24);59%% L2987654321089876543210<NL>struct tm tm;<NL>                struct stat stbuf;<NL><NL><NL>                if (statcode == 200) {<NL>                        if (ext = strrchr(path%% '.')) ext++; // skip the '.'    <NL><NL>                        else ext = "";<NL>                } else {<NL>                        // errors are always html messages                      <NL><NL>                        ext = "html";<NL>                }<NL><NL>                // Conditional GET                                              <NL><NL>                if ((strcmp(req->method%% "GET") == 0)<NL>                        && (statcode == 200)<NL>                        && (imstime = get_header(req%% "If-Modified-Since"))) {<NL><NL>                        // Get statistics about the requested URI from the loca\<NL><NL>l filesystem                                                                    <NL><NL>                        if (stat(path%% &stbuf) == -1) {<NL>                                statcode = 500;<NL>                        }<NL>5%% L27987654321069876543210<NL><NL>59<NL>        if (statcode == 200 && (urifd = open(path%% O_RDONLY%% 0)) < 0) {<NL>                if (errno == ENOENT || errno == ENOTDIR) { // file or directory\<NL><NL> doesn't exist                                                                  <NL><NL>                        statcode = 404;<NL>                } else if (errno == EACCES) { // access denied                  <NL><NL>                        statcode = 403;<NL>                } else {<NL>                        // some other file access problem                       <NL><NL>                        statcode = 500;<NL>                }<NL>        }<NL><NL>        if (strstr(path%% "..") != NULL) {<NL>                statcode = 500;<NL>        }<NL><NL><NL>        sendmessage[0] = '\0';<NL>        if (strcmp(req->version%% "0.9") != 0) { // full request                 <NL><NL>                char *ext; // file extension                                    <NL><NL>                time_t curtime;<NL>                char *imstime;1%% L2587654321049876543210398<NL><NL>        if (req->uri == NULL || req->method == NULL ||<NL>                req->headers == NULL || req->version == NULL) {<NL>                return 0;<NL>        }<NL><NL><NL>        if ((path[0] == '/') || ((strstr(path%% "http://") == path)<NL>                                                         && (path = strchr(path\<NL><NL> + 7%%  '/')))) {<NL>                path += 1; // remove leading slash                              <NL><NL>                if (path[0] == '\0') {  // substituting in index.html for a bla\<NL><NL>nk URL!                                                                         <NL><NL>                        path = "index.html";<NL>                } else if (path[strlen(path) - 1] == '/') {<NL>                        //concatenating index.html for a /-terminated URL!      <NL><NL>                        strcat(path%% "index.html");<NL>                }<NL>        } else {<NL>                statcode = 400;<NL>        }<NL>47%% L23765432102987654321019<NL><NL>8<NL>else if (strcmp(ext%% "txt") == 0) return "text/plain";<NL>        else return "application/octet-stream";<NL><NL>}<NL><NL>char *status(int statcode) {<NL>        if (statcode == 200)    return "200 OK";<NL>        else if (statcode == 304) return "304 Not Modified";<NL>        else if (statcode == 400) return "400 Bad Request";<NL>        else if (statcode == 403) return "403 Forbidden";<NL>        else if (statcode == 404) return "404 Not Found";<NL>        else if (statcode == 500) return "500 Internal Server Error";<NL>        else if (statcode == 501) return "501 Not Implemented";<NL>        else return "";<NL>}<NL><NL>int send_response(int sockfd%% httpreq_t *req%% int statcode) {<NL>        int urifd;<NL>        const int BUFSIZE = 1024;<NL>        char sendmessage[BUFSIZE];<NL>        char *path = req->uri;<NL>2%% L217654321009878910123<HT><HT><HT><HT><HT><HT>Buffer is read-only: #<buffer webserver.c>(No files need saving)>%,emacs webserver.c
CMBEGIN,,,sudo ,%<ESC>[?1049h<ESC>[?12;25h<ESC>[?1h<ESC>=<ESC>[H<ESC>[2J<ESC>[44d<ESC>[K<ESC>[?1l<ESC>><ESC>[?12l<ESC>[?25h<ESC>[?1049l<ESC>[39;49m<NL><ESC>[?1049h<ESC>[?12;25h<ESC>[?1h<ESC>=<ESC>[H<ESC>[2J<ESC>[43d<ESC>[?25l<ESC>[30m<ESC>[47m-111:----F1  <ESC>[39;49m<ESC>[1m<ESC>[30m<ESC>[47m*scratch*   <ESC>[0m<ESC>[39;49m<ESC>[30m<ESC>[47m   All L1     (Fundamental) ---------------------------<ESC>[39;49m<NL><ESC>[A<ESC>[2d<ESC>[?12l<ESC>[?25h<ESC>[?12;25h<ESC>[44d<ESC>[?25lLoading 00debian-vars...done<ESC>[K<ESC>[H<NL><ESC>[?12l<ESC>[?25h<ESC>[?12;25h<ESC>[44;9H<ESC>[?25l/etc/emacs/site-start.d/50autoconf.el (source)...<ESC>[H<NL><ESC>[?12l<ESC>[?25h<ESC>[?12;25h<ESC>[44;58H<ESC>[?25ldone<ESC>[H<NL><ESC>[?12l<ESC>[?25h<ESC>[?12;25h<ESC>[>0c<ESC>[44d<ESC>[?25lLoading /etc/emacs/site-start.d/50autoconf.el (source)...done<ESC>[K<ESC>[H<ESC>[7mFile Edit Options Buffers Tools Lisp-Interaction Help                           <ESC>[0m<ESC>[39;49m<ESC>[27m<NL><ESC>[A<NL><ESC>[K<NL><ESC>[K<NL><ESC>[K<NL><ESC>[K<NL><ESC>[K<NL><ESC>[K<NL><ESC>[K<NL><ESC>[K<NL><ESC>[K<NL><ESC>[K<NL><ESC>[K<NL><ESC>[K<NL><ESC>[K<NL><ESC>[K<NL><ESC>[K<NL><ESC>[K<NL><ESC>[K<NL><ESC>[K<NL><ESC>[K<NL><ESC>[K<NL><ESC>[K<NL><ESC>[K<NL><ESC>[K<NL><ESC>[K<NL><ESC>[K<NL><ESC>[K<NL><ESC>[K<NL><ESC>[K<NL><ESC>[K<NL><ESC>[K<NL><ESC>[K<NL><ESC>[K<NL><ESC>[K<NL><ESC>[K<NL><ESC>[K<NL><ESC>[K<NL><ESC>[K<NL><ESC>[K<NL><ESC>[K<NL><ESC>[K<NL><ESC>[K<NL><ESC>[30m<ESC>[48;5;250m-111:----F1  <ESC>[39;49m<ESC>[1m<ESC>[30m<ESC>[48;5;250m*scratch*   <ESC>[0m<ESC>[39;49m<ESC>[30m<ESC>[48;5;250m   All L1     (Lisp Interaction) ----------------------<ESC>[39;49m<NL><ESC>[A<ESC>[2d<ESC>[?12l<ESC>[?25h<ESC>[?12;25h<ESC>[44d<ESC>[?25lFor information about GNU Emacs and the GNU system%% type C-h C-a.<ESC>[H<NL><ESC>[?12l<ESC>[?25h<ESC>[?12;25h<ESC>[44d<ESC>[?25lFor information about GNU Emacs and the GNU system%% type C-h C-a.<ESC>[K<ESC>[H<ESC>[7mFile Edit Options Buffers Tools C Help                                          <ESC>[0m<ESC>[39;49m<ESC>[27m<NL><ESC>[A<NL><ESC>[38;5;124m// webserver.c                                                                  <ESC>[39;49m<NL><ESC>[A<NL><ESC>[38;5;124m// FrobozzCo Official Webserver                                                 <ESC>[39;49m<NL><ESC>[A<NL><ESC>[38;5;124m// Barbazzo Fernap barbazzo@gue.com                                             <ESC>[39;49m<NL><ESC>[A<NL><ESC>[38;5;124m// Gustar Woomax gustar@gue.com                                                 <ESC>[39;49m<NL><ESC>[A<NL><ESC>[38;5;124m// Wilbar Memboob wilbar@gue.com                                                <ESC>[39;49m<NL><ESC>[A<NL><ESC>[K<NL><ESC>[38;5;124m// By the Frobozz Magic Webserver Company                                       <ESC>[39;49m<NL><ESC>[A<NL><ESC>[38;5;124m// Released under the Grue Public License                                       <ESC>[39;49m<NL><ESC>[A<NL><ESC>[38;5;124m// Frobruary 14th%% 1067 GUE                                                     <ESC>[39;49m<NL><ESC>[A<NL><ESC>[K<NL><ESC>[38;5;124m// THERE IS NO WARRANTY FOR THE PROGRAM%% TO THE EXTENT PERMITTED                <ESC>[39;49m<NL><ESC>[A<NL><ESC>[38;5;124m// BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE               <ESC>[39;49m<NL><ESC>[A<NL><ESC>[38;5;124m// COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM <ESC>[39;49m<ESC>[4m<ESC>[38;5;124m\u201C<ESC>[0m<ESC>[39;49m<ESC>[38;5;124mAS IS<ESC>[39;49m<ESC>[4m<ESC>[38;5;124m\u201D<ESC>[0m<ESC>[39;49m\<NL><ESC>[A<NL><ESC>[38;5;124m                                                                                <ESC>[39;49m<NL><ESC>[A<NL><ESC>[38;5;124m// WITHOUT WARRANTY OF ANY KIND%% EITHER EXPRESSED OR IMPLIED%% INCLUDING%%        <ESC>[39;49m<NL><ESC>[A<NL><ESC>[38;5;124m// BUT NOT LIMITED TO%% THE IMPLIED WARRANTIES OF MERCHANTABILITY AND            <ESC>[39;49m<NL><ESC>[A<NL><ESC>[38;5;124m// FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY          <ESC>[39;49m<NL><ESC>[A<NL><ESC>[38;5;124m// AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE         <ESC>[39;49m<NL><ESC>[A<NL><ESC>[38;5;124m// DEFECTIVE%% *AND IT WILL*%% YOU ASSUME THE COST OF ALL NECESSARY               <ESC>[39;49m<NL><ESC>[A<NL><ESC>[38;5;124m// SERVICING%% REPAIR OR CORRECTION.                                             <ESC>[39;49m<NL><ESC>[A<NL><ESC>[K<NL><ESC>[38;5;60m#include<ESC>[39;49m <ESC>[38;5;89m<stdio.h><ESC>[39;49m<ESC>[K<NL><ESC>[38;5;60m#include<ESC>[39;49m <ESC>[38;5;89m<errno.h><ESC>[39;49m<ESC>[K<NL><ESC>[38;5;60m#include<ESC>[39;49m <ESC>[38;5;89m<string.h><ESC>[39;49m<ESC>[K<NL><ESC>[38;5;60m#include<ESC>[39;49m <ESC>[38;5;89m<stdlib.h><ESC>[39;49m<ESC>[K<NL><ESC>[38;5;60m#include<ESC>[39;49m <ESC>[38;5;89m<netdb.h><ESC>[39;49m<ESC>[K<NL><ESC>[38;5;60m#include<ESC>[39;49m <ESC>[38;5;89m<sys/stat.h><ESC>[39;49m<ESC>[K<NL><ESC>[38;5;60m#include<ESC>[39;49m <ESC>[38;5;89m<sys/types.h><ESC>[39;49m<ESC>[K<NL><ESC>[38;5;60m#include<ESC>[39;49m <ESC>[38;5;89m<sys/socket.h><ESC>[39;49m<ESC>[K<NL><ESC>[38;5;60m#include<ESC>[39;49m <ESC>[38;5;89m<netinet/in.h><ESC>[39;49m<ESC>[K<NL><ESC>[38;5;60m#include<ESC>[39;49m <ESC>[38;5;89m<arpa/inet.h><ESC>[39;49m<ESC>[K<NL><ESC>[38;5;60m#include<ESC>[39;49m <ESC>[38;5;89m<unistd.h><ESC>[39;49m<ESC>[K<NL><ESC>[38;5;60m#include<ESC>[39;49m <ESC>[38;5;89m<fcntl.h><ESC>[39;49m<ESC>[K<NL><ESC>[38;5;60m#include<ESC>[39;49m <ESC>[38;5;89m<time.h><ESC>[39;49m<ESC>[K<NL><ESC>[38;5;60m#include<ESC>[39;49m <ESC>[38;5;89m<pthread.h><ESC>[39;49m<ESC>[K<NL><ESC>[K<NL><ESC>[38;5;60m#define<ESC>[39;49m <ESC>[38;5;130m_XOPEN_SOURCE<ESC>[39;49m<ESC>[K<NL><ESC>[K<NL><ESC>[38;5;129mtypedef<ESC>[39;49m <ESC>[38;5;129mstruct<ESC>[39;49m {<ESC>[K<NL>        <ESC>[38;5;28mchar<ESC>[39;49m *<ESC>[38;5;130mmethod<ESC>[39;49m;<ESC>[K<NL>        <ESC>[38;5;28mchar<ESC>[39;49m *<ESC>[38;5;130muri<ESC>[39;49m;<ESC>[K<NL><ESC>[30m<ESC>[48;5;250m-11U:----F1  <ESC>[39;49m<ESC>[1m<ESC>[30m<ESC>[48;5;250mwebserver.c <ESC>[0m<ESC>[39;49m<ESC>[30m<ESC>[48;5;250m   Top L1     (C/l Abbrev) ----------------------------<ESC>[39;49m<NL><ESC>[A<ESC>[2d<ESC>[?12l<ESC>[?25h<ESC>[?12;25h<ESC>[44d<ESC>[K<ESC>[2d<ESC>[?25l        <ESC>[38;5;28mchar<ESC>[39;49m *<ESC>[38;5;130mmethod<ESC>[39;49m;<ESC>[K<NL>        <ESC>[38;5;28mchar<ESC>[39;49m *<ESC>[38;5;130muri<ESC>[39;49m;<ESC>[K<NL>        <ESC>[38;5;28mchar<ESC>[39;49m *<ESC>[38;5;130mversion<ESC>[39;49m;<ESC>[K<NL>        <ESC>[38;5;28mchar<ESC>[39;49m *<ESC>[38;5;130mheaders<ESC>[39;49m;<ESC>[K<NL>} <ESC>[38;5;28mhttpreq_t<ESC>[39;49m;<ESC>[K<NL><NL><ESC>[K<NL><ESC>[C<ESC>[38;5;124m* NOTE: this function is based on a function provided in the GNU "timegm" man<ESC>[39;49m<NL><ESC>[38;5;124m   page. timegm is a GNU extension to time.h that returns the given tm struct a<ESC>[39;49m\<NL><ESC>[38;5;124ms                                                                               <ESC>[39;49m<NL><ESC>[38;5;124m   a UNIX timestamp in GMT/UTC%% rather than local time. The man page suggests a<ESC>[39;49m<ESC>[K<NL><ESC>[38;5;124m   function similar to the one below as a portable equivalent.   <ESC>[39;49m<NL><ESC>[38;5;124m */<ESC>[39;49m<ESC>[K<NL><ESC>[38;5;28mtime_t<ESC>[39;49m <ESC>[38;5;21mmy_timegm<ESC>[39;49m(<ESC>[38;5;129mstruct<ESC>[39;49m <ESC>[38;5;28mtm<ESC>[39;49m *<ESC>[38;5;130mtm<ESC>[39;49m) {<ESC>[K<NL>        <ESC>[38;5;28mtime_t<ESC>[39;49m <ESC>[38;5;130mret<ESC>[39;49m;<ESC>[K<NL>        <ESC>[38;5;28mchar<ESC>[39;49m *<ESC>[38;5;130mtz<ESC>[39;49m;<ESC>[K<NL><ESC>[K<NL>        tz = getenv(<ESC>[38;5;89m"TZ"<ESC>[39;49m);<ESC>[K<NL>        putenv(<ESC>[38;5;89m"TZ=GMT"<ESC>[39;49m);<ESC>[K<NL>        tzset();<ESC>[K<NL><HT>ret = mktime(tm);<NL>        <ESC>[38;5;129mif<ESC>[39;49m (tz) {<ESC>[K<NL>                <ESC>[38;5;28mchar<ESC>[39;49m <ESC>[38;5;130menvstr<ESC>[39;49m[strlen(tz) + 4];<NL>                envstr[0] = <ESC>[38;5;89m'\0'<ESC>[39;49m;<NL>                strcat(envstr%% <ESC>[38;5;89m"TZ="<ESC>[39;49m);<NL>                strcat(envstr%% tz);<NL>                putenv(envstr);<NL>        } <ESC>[38;5;129melse<ESC>[39;49m {<ESC>[K<NL>                putenv(<ESC>[38;5;89m"TZ="<ESC>[39;49m);<NL>        }<ESC>[K<NL><ESC>[K<NL>        tzset();<ESC>[K<NL><ESC>[K<NL>        <ESC>[38;5;129mreturn<ESC>[39;49m ret;<NL>}<ESC>[K<NL><NL><BS><ESC>[38;5;28mchar<ESC>[39;49m *<ESC>[38;5;21mget_header<ESC>[39;49m(<ESC>[38;5;129mconst<ESC>[39;49m <ESC>[38;5;28mhttpreq_t<ESC>[39;49m *<ESC>[38;5;130mreq<ESC>[39;49m%% <ESC>[38;5;129mconst<ESC>[39;49m <ESC>[38;5;28mchar<ESC>[39;49m* <ESC>[38;5;130mheadername<ESC>[39;49m) {<NL><HT><ESC>[38;5;28mchar<ESC>[39;49m *<ESC>[38;5;130mhdrptr<ESC>[39;49m;<NL>        <ESC>[38;5;28mchar<ESC>[39;49m *<ESC>[38;5;130mhdrend<ESC>[39;49m;<ESC>[41;15H<ESC>[38;5;130mretval<ESC>[39;49m = <ESC>[38;5;30mNULL<ESC>[39;49m;<NL><ESC>[K<ESC>[43;29H<ESC>[30m<ESC>[48;5;250m 9%% L39<ESC>[39;49m<ESC>[H<NL><ESC>[?12l<ESC>[?25h<ESC>[?12;25h<HT><HT><BS><BS><ESC>[?25l<ESC>[38;5;130mretval<ESC>[39;49m = <ESC>[38;5;30mNULL<ESC>[39;49m;<NL><ESC>[K<ESC>[4;14H<ESC>[38;5;130msearchstr<ESC>[39;49m[strlen(headername) + 5];<NL><HT>strcpy(searchstr%% <ESC>[38;5;89m"<NL>"<ESC>[39;49m);<NL>        strcat(searchstr%% headername);<NL><HT>strcat(searchstr%% <ESC>[38;5;89m": "<ESC>[39;49m);<NL><NL>        <ESC>[38;5;129mif<ESC>[39;49m (hdrptr = strstr(req->headers%% searchstr)) {<ESC>[K<NL>                hdrptr += strlen(searchstr);<ESC>[K<NL>                <ESC>[38;5;129mif<ESC>[39;49m (hdrend = strstr(hdrptr%% <ESC>[38;5;89m"<NL>"<ESC>[39;49m)) {<ESC>[K<NL>                        <ESC>[38;5;28mchar<ESC>[39;49m <ESC>[38;5;130mhdrval<ESC>[39;49m[1024]; <ESC>[38;5;124m// temporary return value            <ESC>[39;49m<NL>                        memcpy((<ESC>[38;5;28mchar<ESC>[39;49m *)hdrval%% hdrptr%% (hdrend - hdrptr));<ESC>[K<NL>                        hdrval[hdrend - hdrptr] = <ESC>[38;5;89m'\0'<ESC>[39;49m; <ESC>[38;5;124m// tack null onto end o<ESC>[39;49m\<NL><ESC>[38;5;124mf header value                                                                  <ESC>[39;49m<NL><HT>                <ESC>[38;5;28mint<ESC>[39;49m <ESC>[38;5;130mhdrvallen<ESC>[39;49m = strlen(hdrval);<NL><HT>                retval = (<ESC>[38;5;28mchar<ESC>[39;49m *)malloc((hdrvallen + 1) * <ESC>[38;5;129msizeof<ESC>[39;49m(<ESC>[38;5;28mchar<ESC>[39;49m))\<NL>; <ESC>[38;5;124m// malloc a space for retval                                                  <ESC>[39;49m<NL><HT>                strcpy(retval%% (<ESC>[38;5;28mchar<ESC>[39;49m *)hdrval);<NL><HT>        } <ESC>[38;5;129melse<ESC>[39;49m {<ESC>[K<NL><HT>                retval = (<ESC>[38;5;28mchar<ESC>[39;49m *)malloc((strlen(hdrptr) + 1) * <ESC>[38;5;129msizeof<ESC>[39;49m(<ESC>[38;5;28mc<ESC>[39;49m\<NL><ESC>[38;5;28mhar<ESC>[39;49m)); <ESC>[38;5;124m//                                                                       <ESC>[39;49m<NL><HT>                strcpy(retval%% hdrptr);<NL><HT><HT>}<ESC>[K<NL><HT>}<ESC>[K<NL><ESC>[K<NL><HT><ESC>[38;5;129mreturn<ESC>[39;49m retval;<ESC>[K<NL>}<ESC>[K<NL><BS><ESC>[K<NL><ESC>[38;5;124m/* As long as str begins with a proper HTTP-Version followed by delim%% returns <ESC>[39;49m\<NL><ESC>[38;5;124ma                                                                               <ESC>[39;49m<NL><ESC>[38;5;124m   pointer to the start of the version number (e.g.%% 1.0). Returns NULL otherwi<ESC>[39;49m\<NL><ESC>[38;5;124mse.                                                                             <ESC>[39;49m<NL><ESC>[38;5;124m */<ESC>[39;49m<NL><ESC>[38;5;28mchar<ESC>[39;49m *<ESC>[38;5;21mhttp_version_str<ESC>[39;49m(<ESC>[38;5;28mchar<ESC>[39;49m *<ESC>[38;5;130mstr<ESC>[39;49m%% <ESC>[38;5;28mchar<ESC>[39;49m *<ESC>[38;5;130mdelim<ESC>[39;49m) {<NL>        <ESC>[38;5;28mchar<ESC>[39;49m *<ESC>[38;5;130mvstart<ESC>[39;49m = strstr(str%% <ESC>[38;5;89m"HTTP/"<ESC>[39;49m);<NL><HT><ESC>[38;5;28mchar<ESC>[39;49m *<ESC>[38;5;130mvnumstart<ESC>[39;49m = str + 5;<NL>        <ESC>[38;5;28mchar<ESC>[39;49m *<ESC>[38;5;130mvdot<ESC>[39;49m = strchr(str%% <ESC>[38;5;89m'.'<ESC>[39;49m);<ESC>[K<ESC>[39;15H<ESC>[38;5;130mvend<ESC>[39;49m = strstr(str%% delim);<ESC>[40;15H<ESC>[38;5;130mdigits<ESC>[39;49m = <ESC>[38;5;89m"0123456789"<ESC>[39;49m;<NL><HT><ESC>[38;5;28mint<ESC>[39;49m <ESC>[38;5;130mmajvlen<ESC>[39;49m = 0;<ESC>[K<NL><HT><ESC>[38;5;28mint<ESC>[39;49m <ESC>[38;5;130mminvlen<ESC>[39;49m = 0;<ESC>[43;29H<ESC>[30m<ESC>[48;5;250m15%% L77<ESC>[39;49m<ESC>[H<NL><ESC>[?12l<ESC>[?25h<ESC>[?12;25h<HT><ESC>[?25l<ESC>[38;5;28mint<ESC>[39;49m <ESC>[38;5;130mmajvlen<ESC>[39;49m = 0;<ESC>[K<NL><HT><ESC>[38;5;28mint<ESC>[39;49m <ESC>[38;5;130mminvlen<ESC>[39;49m = 0;<NL><ESC>[K<NL><HT><ESC>[38;5;129mif<ESC>[39;49m (!vstart || !vdot <ESC>[38;5;124m// something's missing                             <ESC>[39;49m<NL><HT>        || vstart != str) <ESC>[38;5;124m// str doesn't start with "HTTP/"             <ESC>[39;49m<NL><HT>        <ESC>[38;5;129mreturn<ESC>[39;49m <ESC>[38;5;30mNULL<ESC>[39;49m;<ESC>[K<NL><NL><HT>majvlen = strspn(vnumstart%% digits);<ESC>[K<NL><HT>minvlen = strspn(vdot + 1%% digits);<ESC>[K<NL><ESC>[K<NL><HT><ESC>[38;5;129mif<ESC>[39;49m (majvlen < 1 || (vnumstart + majvlen) != vdot <ESC>[38;5;124m// bad major version<ESC>[39;49m<NL><HT><HT>|| minvlen < 1 || (vdot + minvlen + 1) != vend) <ESC>[38;5;124m// bad minor ve<ESC>[39;49m\<NL><ESC>[38;5;124mrsion                                                                           <ESC>[39;49m<NL>                <ESC>[38;5;129mreturn<ESC>[39;49m <ESC>[38;5;30mNULL<ESC>[39;49m;<ESC>[K<NL><ESC>[K<NL><HT><ESC>[38;5;129mreturn<ESC>[39;49m vnumstart;<ESC>[K<NL>}<ESC>[K<NL><BS><ESC>[K<NL><ESC>[38;5;124m/* Fills req with the request data from datastr. Returns 0 on success.          <ESC>[39;49m<NL><ESC>[38;5;124m */<ESC>[39;49m<ESC>[K<NL><ESC>[K<NL><ESC>[38;5;28mint<ESC>[39;49m <ESC>[38;5;21mparsereq<ESC>[39;49m(<ESC>[38;5;28mhttpreq_t<ESC>[39;49m *<ESC>[38;5;130mreq<ESC>[39;49m%% <ESC>[38;5;28mchar<ESC>[39;49m *<ESC>[38;5;130mdatastr<ESC>[39;49m) {<ESC>[K<NL><HT><ESC>[38;5;28mchar<ESC>[39;49m *<ESC>[38;5;130mposition<ESC>[39;49m;<NL><HT><ESC>[38;5;28mchar<ESC>[39;49m *<ESC>[38;5;130mlast_position<ESC>[39;49m = datastr;<NL><HT><ESC>[38;5;28mchar<ESC>[39;49m *<ESC>[38;5;130mtemp_position<ESC>[39;49m;<NL><HT><ESC>[38;5;28mint<ESC>[39;49m <ESC>[38;5;130mmatchlen<ESC>[39;49m;<ESC>[K<NL><ESC>[K<NL><HT>req->method = <ESC>[38;5;89m""<ESC>[39;49m;<NL>        req->uri = <ESC>[38;5;89m""<ESC>[39;49m;<ESC>[K<NL>        req->version = <ESC>[38;5;89m""<ESC>[39;49m;<ESC>[K<NL>        req->headers = <ESC>[38;5;89m""<ESC>[39;49m;<ESC>[K<NL><ESC>[K<NL>        <ESC>[38;5;129mif<ESC>[39;49m (!(position = strchr(last_position%% <ESC>[38;5;89m' '<ESC>[39;49m))) {<NL>                <ESC>[38;5;129mreturn<ESC>[39;49m 1;<ESC>[K<NL><HT>}<ESC>[K<NL><BS>matchlen = (<ESC>[38;5;28mint<ESC>[39;49m)(position - last_position);<NL><HT>req->method = (<ESC>[38;5;28mchar<ESC>[39;49m *)malloc((matchlen + 1) * <ESC>[38;5;129msizeof<ESC>[39;49m(<ESC>[38;5;28mchar<ESC>[39;49m));<NL><HT>memcpy(req->method%% last_position%% matchlen);<NL><HT>req->method[matchlen] = <ESC>[38;5;89m'\0'<ESC>[39;49m;<NL><HT>last_position = position + 1;<NL><ESC>[K<ESC>[43;29H<ESC>[30m<ESC>[48;5;250m24%% L111<ESC>[39;49m<ESC>[H<NL><ESC>[?12l<ESC>[?25h<ESC>[?12;25h<ESC>[1;37r<ESC>[35;1H<ESC>[2M<ESC>[1;44r<ESC>[2;9H<ESC>[?25llast_position = position + 1;<NL><ESC>[K<NL><HT><ESC>[38;5;129mif<ESC>[39;49m (!(position = strchr(last_position%% <ESC>[38;5;89m' '<ESC>[39;49m))<NL><HT>        && !(position = strstr(last_position%% <ESC>[38;5;89m"<NL>"<ESC>[39;49m))) {<ESC>[K<NL><HT><HT><ESC>[38;5;129mreturn<ESC>[39;49m 1;<ESC>[K<NL><HT>}<ESC>[K<NL><NL><BS><ESC>[38;5;124m// strip any query string out of the URI                                <ESC>[39;49m<NL><HT><ESC>[38;5;129mif<ESC>[39;49m ((temp_position = strchr(last_position%% <ESC>[38;5;89m'?'<ESC>[39;49m)) && temp_position < pos\<NL>ition)<NL><HT>        matchlen = (<ESC>[38;5;28mint<ESC>[39;49m)(temp_position - last_position);<ESC>[K<NL><HT><ESC>[38;5;129melse<ESC>[39;49m<ESC>[K<NL>                matchlen = (<ESC>[38;5;28mint<ESC>[39;49m)(position - last_position);<ESC>[K<NL><ESC>[K<NL><HT>req->uri = (<ESC>[38;5;28mchar<ESC>[39;49m *)malloc((matchlen + 1) * <ESC>[38;5;129msizeof<ESC>[39;49m(<ESC>[38;5;28mchar<ESC>[39;49m));<NL><HT>memcpy(req->uri%% last_position%% matchlen);<NL>        req->uri[matchlen] = <ESC>[38;5;89m'\0'<ESC>[39;49m;<NL><HT><ESC>[38;5;129mif<ESC>[39;49m (position[0] == <ESC>[38;5;89m'<NL>'<ESC>[39;49m) {<NL>                req->version = <ESC>[38;5;89m"0.9"<ESC>[39;49m;<ESC>[K<NL>                req->headers = <ESC>[38;5;89m""<ESC>[39;49m;<NL><HT><HT><ESC>[38;5;129mreturn<ESC>[39;49m 0; <ESC>[38;5;124m// simple req -- uri only                             <ESC>[39;49m<NL>        }<ESC>[K<NL><ESC>[K<NL><HT><ESC>[38;5;124m// If we get here%% it's a full request%% get the HTTP version and header<ESC>[39;49m\<NL><ESC>[38;5;124ms                                                                               <ESC>[39;49m<NL><HT>last_position = position + 1;<NL><NL><HT><ESC>[38;5;129mif<ESC>[39;49m (!(position = strstr(last_position%% <ESC>[38;5;89m"<NL>"<ESC>[39;49m))<NL><HT>        || !(last_position = http_version_str(last_position%% <ESC>[38;5;89m"<NL>"<ESC>[39;49m))) \<NL>{<ESC>[K<NL><HT>        <ESC>[38;5;129mreturn<ESC>[39;49m 1;<ESC>[K<NL><HT>}<NL><ESC>[K<NL><NL>        req->version = (<ESC>[38;5;28mchar<ESC>[39;49m *)malloc((matchlen + 1) * <ESC>[38;5;129msizeof<ESC>[39;49m(<ESC>[38;5;28mchar<ESC>[39;49m));<ESC>[K<NL>        memcpy(req->version%% last_position%% matchlen);<ESC>[K<ESC>[38;14Hversion[matchlen] = <ESC>[38;5;89m'\0'<ESC>[39;49m;<ESC>[K<NL><HT>last_position = position;<ESC>[K<NL><ESC>[K<NL><HT>req->headers = (<ESC>[38;5;28mchar<ESC>[39;49m *)malloc(strlen(last_position) * <ESC>[38;5;129msizeof<ESC>[39;49m(<ESC>[38;5;28mchar<ESC>[39;49m));<NL><HT>strcpy(req->headers%% last_position);<ESC>[43;29H<ESC>[30m<ESC>[48;5;250m31%% L149<ESC>[39;49m<ESC>[H<NL><ESC>[?12l<ESC>[?25h<ESC>[?12;25h<HT><ESC>[?25lreq->headers = (<ESC>[38;5;28mchar<ESC>[39;49m *)malloc(strlen(last_position) * <ESC>[38;5;129msizeof<ESC>[39;49m(<ESC>[38;5;28mchar<ESC>[39;49m));<NL><HT>strcpy(req->headers%% last_position);<NL><ESC>[K<NL><HT><ESC>[38;5;129mreturn<ESC>[39;49m 0;<ESC>[K<NL>}<ESC>[K<NL><BS><ESC>[K<NL><ESC>[38;5;28mchar<ESC>[39;49m *<ESC>[38;5;21mcontype<ESC>[39;49m(<ESC>[38;5;28mchar<ESC>[39;49m *<ESC>[38;5;130mext<ESC>[39;49m) {<NL><HT><ESC>[38;5;129mif<ESC>[39;49m (strcmp(ext%% <ESC>[38;5;89m"html"<ESC>[39;49m) == 0) <ESC>[38;5;129mreturn<ESC>[39;49m <ESC>[38;5;89m"text/html"<ESC>[39;49m;<ESC>[K<NL><HT><ESC>[38;5;129melse<ESC>[39;49m <ESC>[38;5;129mif<ESC>[39;49m (strcmp(ext%% <ESC>[38;5;89m"htm"<ESC>[39;49m) == 0) <ESC>[38;5;129mreturn<ESC>[39;49m <ESC>[38;5;89m"text/html"<ESC>[39;49m;<ESC>[K<NL>        <ESC>[38;5;129melse<ESC>[39;49m <ESC>[38;5;129mif<ESC>[39;49m (strcmp(ext%% <ESC>[38;5;89m"jpeg"<ESC>[39;49m) == 0) <ESC>[38;5;129mreturn<ESC>[39;49m <ESC>[38;5;89m"image/jpeg"<ESC>[39;49m;<NL><HT><ESC>[38;5;129melse<ESC>[39;49m <ESC>[38;5;129mif<ESC>[39;49m (strcmp(ext%% <ESC>[38;5;89m"jpg"<ESC>[39;49m) == 0) <ESC>[38;5;129mreturn<ESC>[39;49m <ESC>[38;5;89m"image/jpeg"<ESC>[39;49m;<ESC>[K<ESC>[13;14H<ESC>[38;5;129mif<ESC>[39;49m (strcmp(ext%% <ESC>[38;5;89m"gif"<ESC>[39;49m) == 0) <ESC>[38;5;129mreturn<ESC>[39;49m <ESC>[38;5;89m"image/gif"<ESC>[39;49m;<NL><HT><ESC>[38;5;129melse<ESC>[39;49m <ESC>[38;5;129mif<ESC>[39;49m (strcmp(ext%% <ESC>[38;5;89m"txt"<ESC>[39;49m) == 0) <ESC>[38;5;129mreturn<ESC>[39;49m <ESC>[38;5;89m"text/plain"<ESC>[39;49m;<NL><HT><ESC>[38;5;129melse<ESC>[39;49m <ESC>[38;5;129mreturn<ESC>[39;49m <ESC>[38;5;89m"application/octet-stream"<ESC>[39;49m;<NL><ESC>[K<NL>}<ESC>[K<NL><BS><ESC>[K<NL><ESC>[38;5;28mchar<ESC>[39;49m *<ESC>[38;5;21mstatus<ESC>[39;49m(<ESC>[38;5;28mint<ESC>[39;49m <ESC>[38;5;130mstatcode<ESC>[39;49m) {<ESC>[K<NL><HT><ESC>[38;5;129mif<ESC>[39;49m (statcode == 200)    <ESC>[38;5;129mreturn<ESC>[39;49m <ESC>[38;5;89m"200 OK"<ESC>[39;49m;<NL><HT><ESC>[38;5;129melse<ESC>[39;49m <ESC>[38;5;129mif<ESC>[39;49m (statcode == 304) <ESC>[38;5;129mreturn<ESC>[39;49m <ESC>[38;5;89m"304 Not Modified"<ESC>[39;49m;<NL><HT><ESC>[38;5;129melse<ESC>[39;49m <ESC>[38;5;129mif<ESC>[39;49m (statcode == 400) <ESC>[38;5;129mreturn<ESC>[39;49m <ESC>[38;5;89m"400 Bad Request"<ESC>[39;49m;<ESC>[K<NL><HT><ESC>[38;5;129melse<ESC>[39;49m <ESC>[38;5;129mif<ESC>[39;49m (statcode == 403) <ESC>[38;5;129mreturn<ESC>[39;49m <ESC>[38;5;89m"403 Forbidden"<ESC>[39;49m;<NL><HT><ESC>[38;5;129melse<ESC>[39;49m <ESC>[38;5;129mif<ESC>[39;49m (statcode == 404) <ESC>[38;5;129mreturn<ESC>[39;49m <ESC>[38;5;89m"404 Not Found"<ESC>[39;49m;<NL><HT><ESC>[38;5;129melse<ESC>[39;49m <ESC>[38;5;129mif<ESC>[39;49m (statcode == 500) <ESC>[38;5;129mreturn<ESC>[39;49m <ESC>[38;5;89m"500 Internal Server Error"<ESC>[39;49m;<ESC>[K<NL>        <ESC>[38;5;129melse<ESC>[39;49m <ESC>[38;5;129mif<ESC>[39;49m (statcode == 501) <ESC>[38;5;129mreturn<ESC>[39;49m <ESC>[38;5;89m"501 Not Implemented"<ESC>[39;49m;<ESC>[K<NL><HT><ESC>[38;5;129melse<ESC>[39;49m <ESC>[38;5;129mreturn<ESC>[39;49m <ESC>[38;5;89m""<ESC>[39;49m;<ESC>[K<NL>}<NL><BS><ESC>[K<NL><ESC>[38;5;28mint<ESC>[39;49m <ESC>[38;5;21msend_response<ESC>[39;49m(<ESC>[38;5;28mint<ESC>[39;49m <ESC>[38;5;130msockfd<ESC>[39;49m%% <ESC>[38;5;28mhttpreq_t<ESC>[39;49m *<ESC>[38;5;130mreq<ESC>[39;49m%% <ESC>[38;5;28mint<ESC>[39;49m <ESC>[38;5;130mstatcode<ESC>[39;49m) {<ESC>[K<NL>        <ESC>[38;5;28mint<ESC>[39;49m <ESC>[38;5;130murifd<ESC>[39;49m;<NL><HT><ESC>[38;5;129mconst<ESC>[39;49m <ESC>[38;5;28mint<ESC>[39;49m <ESC>[38;5;130mBUFSIZE<ESC>[39;49m = 1024;<NL><HT><ESC>[38;5;28mchar<ESC>[39;49m <ESC>[38;5;130msendmessage<ESC>[39;49m[BUFSIZE];<NL><HT><ESC>[38;5;28mchar<ESC>[39;49m *<ESC>[38;5;130mpath<ESC>[39;49m = req->uri;<NL><ESC>[K<NL><HT><ESC>[38;5;129mif<ESC>[39;49m (req->uri == <ESC>[38;5;30mNULL<ESC>[39;49m || req->method == <ESC>[38;5;30mNULL<ESC>[39;49m ||<ESC>[K<NL><HT>        req->headers == <ESC>[38;5;30mNULL<ESC>[39;49m || req->version == <ESC>[38;5;30mNULL<ESC>[39;49m) {<NL><HT>        <ESC>[38;5;129mreturn<ESC>[39;49m 0;<ESC>[K<NL><HT>}<ESC>[K<NL><NL><ESC>[K<NL><HT><ESC>[38;5;129mif<ESC>[39;49m ((path[0] == <ESC>[38;5;89m'/'<ESC>[39;49m) || ((strstr(path%% <ESC>[38;5;89m"http://"<ESC>[39;49m) == path)<ESC>[43;30H<ESC>[30m<ESC>[48;5;250m9%% L185<ESC>[39;49m<ESC>[H<NL><ESC>[?12l<ESC>[?25h<ESC>[?12;25h<ESC>[K<NL><HT><ESC>[?25l<ESC>[38;5;129mif<ESC>[39;49m ((path[0] == <ESC>[38;5;89m'/'<ESC>[39;49m) || ((strstr(path%% <ESC>[38;5;89m"http://"<ESC>[39;49m) == path)<ESC>[4;58H&& (path = strchr(path\<NL><ESC>[C+ 7%%  <ESC>[38;5;89m'/'<ESC>[39;49m)))) {<ESC>[K<NL>                path += 1; <ESC>[38;5;124m// remove leading slash                              <ESC>[39;49m<NL><HT><HT><ESC>[38;5;129mif<ESC>[39;49m (path[0] == <ESC>[38;5;89m'\0'<ESC>[39;49m) {  <ESC>[38;5;124m// substituting in index.html for a bla<ESC>[39;49m\<NL><ESC>[38;5;124mnk URL!                                                                         <ESC>[39;49m<NL><HT>                path = <ESC>[38;5;89m"index.html"<ESC>[39;49m;<ESC>[K<NL><HT>        } <ESC>[38;5;129melse<ESC>[39;49m <ESC>[38;5;129mif<ESC>[39;49m (path[strlen(path) - 1] == <ESC>[38;5;89m'/'<ESC>[39;49m) {<ESC>[K<NL><HT>                <ESC>[38;5;124m//concatenating index.html for a /-terminated URL!      <ESC>[39;49m<NL><HT>                strcat(path%% <ESC>[38;5;89m"index.html"<ESC>[39;49m);<ESC>[K<NL><HT>        }<ESC>[K<NL><HT>} <ESC>[38;5;129melse<ESC>[39;49m {<ESC>[K<NL><HT>        statcode = 400;<ESC>[K<NL><HT>}<NL><ESC>[K<NL><HT><ESC>[38;5;129mif<ESC>[39;49m (statcode == 200 && (urifd = open(path%% O_RDONLY%% 0)) < 0) {<NL>                <ESC>[38;5;129mif<ESC>[39;49m (errno == ENOENT || errno == ENOTDIR) { <ESC>[38;5;124m// file or directory<ESC>[39;49m\<NL><ESC>[38;5;124m doesn't exist                                                                  <ESC>[39;49m<NL><HT>                statcode = 404;<ESC>[K<NL><HT>        } <ESC>[38;5;129melse<ESC>[39;49m <ESC>[38;5;129mif<ESC>[39;49m (errno == EACCES) { <ESC>[38;5;124m// access denied                  <ESC>[39;49m<NL><HT>                statcode = 403;<ESC>[K<NL><HT>        } <ESC>[38;5;129melse<ESC>[39;49m {<ESC>[K<NL><HT>                <ESC>[38;5;124m// some other file access problem                       <ESC>[39;49m<NL><HT>                statcode = 500;<ESC>[K<NL><HT>        }<ESC>[K<NL><ESC>[8@<NL><NL>        <ESC>[38;5;129mif<ESC>[39;49m (strstr(path%% <ESC>[38;5;89m".."<ESC>[39;49m) != <ESC>[38;5;30mNULL<ESC>[39;49m) {<ESC>[K<NL><HT>        statcode = 500;<NL><HT>}<ESC>[K<NL><ESC>[K<NL><ESC>[K<NL><HT>sendmessage[0] = <ESC>[38;5;89m'\0'<ESC>[39;49m;<ESC>[36;13Hstrcmp(req->version%% <ESC>[38;5;89m"0.9"<ESC>[39;49m) != 0) { <ESC>[38;5;124m// full request                 <ESC>[39;49m<NL><HT><HT><ESC>[38;5;28mchar<ESC>[39;49m *<ESC>[38;5;130mext<ESC>[39;49m; <ESC>[38;5;124m// file extension                                    <ESC>[39;49m<NL><HT><HT><ESC>[38;5;28mtime_t<ESC>[39;49m <ESC>[38;5;130mcurtime<ESC>[39;49m;<NL><HT>        <ESC>[38;5;28mchar<ESC>[39;49m *<ESC>[38;5;130mimstime<ESC>[39;49m;<NL><HT><HT><ESC>[38;5;129mstruct<ESC>[39;49m <ESC>[38;5;28mtm<ESC>[39;49m <ESC>[38;5;130mtm<ESC>[39;49m;<NL><HT><HT><ESC>[38;5;129mstruct<ESC>[39;49m <ESC>[38;5;28mstat<ESC>[39;49m <ESC>[38;5;130mstbuf<ESC>[39;49m;<NL><ESC>[K<ESC>[43;29H<ESC>[30m<ESC>[48;5;250m48%% L224<ESC>[39;49m<ESC>[H<NL><ESC>[?12l<ESC>[?25h<ESC>[?12;25h<HT><HT><ESC>[?25l<ESC>[38;5;129mstruct<ESC>[39;49m <ESC>[38;5;28mstat<ESC>[39;49m <ESC>[38;5;130mstbuf<ESC>[39;49m;<NL><ESC>[K<NL><ESC>[K<NL><ESC>[C               <ESC>[38;5;129mif<ESC>[39;49m (statcode == 200) {<NL><HT><HT>        <ESC>[38;5;129mif<ESC>[39;49m (ext = strrchr(path%% <ESC>[38;5;89m'.'<ESC>[39;49m)) ext++; <ESC>[38;5;124m// skip the '.'<ESC>[39;49m<NL><HT><HT>        <ESC>[38;5;129melse<ESC>[39;49m ext = <ESC>[38;5;89m""<ESC>[39;49m;<ESC>[K<NL>                } <ESC>[38;5;129melse<ESC>[39;49m {<ESC>[K<NL><ESC>[38;5;124m// errors are always html messages                      <ESC>[39;49m<NL><HT><HT>        ext = <ESC>[38;5;89m"html"<ESC>[39;49m;<ESC>[K<NL><HT><HT>}<ESC>[K<NL><ESC>[K<NL><HT><HT><ESC>[38;5;124m// Conditional GET                                              <ESC>[39;49m<NL><HT>        <ESC>[38;5;129mif<ESC>[39;49m ((strcmp(req->method%% <ESC>[38;5;89m"GET"<ESC>[39;49m) == 0)<NL><HT><HT>        && (statcode == 200)<NL><HT>                && (imstime = get_header(req%% <ESC>[38;5;89m"If-Modified-Since"<ESC>[39;49m))) {<NL><NL><HT>                <ESC>[38;5;124m// Get statistics about the requested URI from the loca<ESC>[39;49m\<NL><ESC>[38;5;124ml filesystem                                                                    <ESC>[39;49m<NL>                        <ESC>[38;5;129mif<ESC>[39;49m (stat(path%% &stbuf) == -1) {<ESC>[K<NL><HT><HT><HT><ESC>[8@<ESC>[21;44H500<NL><HT><HT>        }<ESC>[K<NL><ESC>[K<NL><HT><HT>        <ESC>[38;5;129mif<ESC>[39;49m (!strptime(imstime%% <ESC>[38;5;89m"%%a%% %%d %%b %%Y %%H:%%M:%%S GMT"<ESC>[39;49m%% &tm\<NL>)<ESC>[K<NL><HT><HT><HT>        && !strptime(imstime%% <ESC>[38;5;89m"%%a%% %%d-%%b-%%y %%H:%%M:%%S GM<ESC>[39;49m\<NL><ESC>[38;5;89mT"<ESC>[39;49m%% &tm)<ESC>[K<NL>                        && !strptime(imstime%% <ESC>[38;5;89m"%%a %%b %%d %%H:%%M:%%S %%Y"<ESC>[39;49m%% &\<NL>tm)) {<NL><HT>                        <ESC>[38;5;124m// badly formatted date                         <ESC>[39;49m<NL><HT><HT><ESC>[16@<ESC>[31;44H4<NL><HT><ESC>[16@<NL><NL><HT><HT><ESC>[38;5;129mif<ESC>[39;49m (stbuf.st_mtime <= my_timegm(&tm)) {<NL><HT>                        <ESC>[38;5;124m// Not Modified                                 <ESC>[39;49m<NL><HT>                        statcode = 304;<ESC>[K<NL><HT><HT>        }<ESC>[K<NL><HT><HT>}<ESC>[K<NL><ESC>[K<NL><HT><HT>time(&curtime); <ESC>[38;5;124m// time for Date: header                        <ESC>[39;49m<NL><HT><HT>strcat(sendmessage%% <ESC>[38;5;89m"HTTP/1.0 "<ESC>[39;49m);<NL><HT><HT>strcat(sendmessage%% status(statcode));<ESC>[43;29H<ESC>[30m<ESC>[48;5;250m55%% L260<ESC>[39;49m<ESC>[H<NL><ESC>[?12l<ESC>[?25h<ESC>[?12;25h<ESC>[1;42r<ESC>[2;1H<ESC>[22L<ESC>[1;44r<ESC>[2;1H<ESC>[?25l                <ESC>[38;5;129mif<ESC>[39;49m (errno == ENOENT || errno == ENOTDIR) { <ESC>[38;5;124m// file or directory<ESC>[39;49m\<NL><ESC>[A<NL><ESC>[38;5;124m doesn't exist                                                                  <ESC>[39;49m<NL><ESC>[A<NL>                        statcode = 404;<ESC>[K<NL>                } <ESC>[38;5;129melse<ESC>[39;49m <ESC>[38;5;129mif<ESC>[39;49m (errno == EACCES) { <ESC>[38;5;124m// access denied                  <ESC>[39;49m<NL><ESC>[A<NL>                        statcode = 403;<ESC>[K<NL>                } <ESC>[38;5;129melse<ESC>[39;49m {<ESC>[K<NL>                        <ESC>[38;5;124m// some other file access problem                       <ESC>[39;49m<NL><ESC>[A<NL>                        statcode = 500;<ESC>[K<NL>                }<ESC>[K<NL>        }<ESC>[K<NL><ESC>[K<NL>        <ESC>[38;5;129mif<ESC>[39;49m (strstr(path%% <ESC>[38;5;89m".."<ESC>[39;49m) != <ESC>[38;5;30mNULL<ESC>[39;49m) {<ESC>[K<NL>                statcode = 500;<ESC>[K<NL>        }<ESC>[K<NL><ESC>[K<NL><ESC>[K<NL>        sendmessage[0] = <ESC>[38;5;89m'\0'<ESC>[39;49m;<ESC>[K<NL>        <ESC>[38;5;129mif<ESC>[39;49m (strcmp(req->version%% <ESC>[38;5;89m"0.9"<ESC>[39;49m) != 0) { <ESC>[38;5;124m// full request                 <ESC>[39;49m<NL><ESC>[A<NL>                <ESC>[38;5;28mchar<ESC>[39;49m *<ESC>[38;5;130mext<ESC>[39;49m; <ESC>[38;5;124m// file extension                                    <ESC>[39;49m<NL><ESC>[A<NL>                <ESC>[38;5;28mtime_t<ESC>[39;49m <ESC>[38;5;130mcurtime<ESC>[39;49m;<ESC>[K<NL>                <ESC>[38;5;28mchar<ESC>[39;49m *<ESC>[38;5;130mimstime<ESC>[39;49m;<ESC>[K<NL>                <ESC>[38;5;129mstruct<ESC>[39;49m <ESC>[38;5;28mtm<ESC>[39;49m <ESC>[38;5;130mtm<ESC>[39;49m;<ESC>[K<ESC>[43d<ESC>[30m<ESC>[48;5;250m2%% L259<ESC>[39;49m<ESC>[23;1H<ESC>[?12l<ESC>[?25h<ESC>[?12;25h<ESC>[43;36H<ESC>[?25l<ESC>[30m<ESC>[48;5;250m8<ESC>[39;49m<ESC>[22;1H<ESC>[?12l<ESC>[?25h<ESC>[?12;25h<ESC>[43;36H<ESC>[?25l<ESC>[30m<ESC>[48;5;250m7<ESC>[39;49m<ESC>[21;1H<ESC>[?12l<ESC>[?25h<ESC>[?12;25h<ESC>[43;36H<ESC>[?25l<ESC>[30m<ESC>[48;5;250m6<ESC>[39;49m<ESC>[20;1H<ESC>[?12l<ESC>[?25h<ESC>[?12;25h<ESC>[43;36H<ESC>[?25l<ESC>[30m<ESC>[48;5;250m5<ESC>[39;49m<ESC>[19;1H<ESC>[?12l<ESC>[?25h<ESC>[?12;25h<ESC>[43;36H<ESC>[?25l<ESC>[30m<ESC>[48;5;250m4<ESC>[39;49m<ESC>[18;1H<ESC>[?12l<ESC>[?25h<ESC>[?12;25h<ESC>[43;36H<ESC>[?25l<ESC>[30m<ESC>[48;5;250m3<ESC>[39;49m<ESC>[17;1H<ESC>[?12l<ESC>[?25h<ESC>[?12;25h<ESC>[43;36H<ESC>[?25l<ESC>[30m<ESC>[48;5;250m2<ESC>[39;49m<ESC>[16;1H<ESC>[?12l<ESC>[?25h<ESC>[?12;25h<ESC>[43;36H<ESC>[?25l<ESC>[30m<ESC>[48;5;250m1<ESC>[39;49m<ESC>[15;1H<ESC>[?12l<ESC>[?25h<ESC>[?12;25h<ESC>[43;36H<ESC>[?25l<ESC>[30m<ESC>[48;5;250m0<ESC>[39;49m<ESC>[14;1H<ESC>[?12l<ESC>[?25h<ESC>[?12;25h<ESC>[43;35H<ESC>[?25l<ESC>[30m<ESC>[48;5;250m49<ESC>[39;49m<ESC>[13;1H<ESC>[?12l<ESC>[?25h<ESC>[?12;25h<ESC>[43;36H<ESC>[?25l<ESC>[30m<ESC>[48;5;250m8<ESC>[39;49m<ESC>[12;1H<ESC>[?12l<ESC>[?25h<ESC>[?12;25h<ESC>[43;36H<ESC>[?25l<ESC>[30m<ESC>[48;5;250m7<ESC>[39;49m<ESC>[11;1H<ESC>[?12l<ESC>[?25h<ESC>[?12;25h<ESC>[43;36H<ESC>[?25l<ESC>[30m<ESC>[48;5;250m6<ESC>[39;49m<ESC>[10;1H<ESC>[?12l<ESC>[?25h<ESC>[?12;25h<ESC>[43;36H<ESC>[?25l<ESC>[30m<ESC>[48;5;250m5<ESC>[39;49m<ESC>[9;1H<ESC>[?12l<ESC>[?25h<ESC>[?12;25h<ESC>[43;36H<ESC>[?25l<ESC>[30m<ESC>[48;5;250m4<ESC>[39;49m<ESC>[8;1H<ESC>[?12l<ESC>[?25h<ESC>[?12;25h<ESC>[43;36H<ESC>[?25l<ESC>[30m<ESC>[48;5;250m3<ESC>[39;49m<ESC>[7;1H<ESC>[?12l<ESC>[?25h<ESC>[?12;25h<ESC>[43;36H<ESC>[?25l<ESC>[30m<ESC>[48;5;250m2<ESC>[39;49m<ESC>[6;1H<ESC>[?12l<ESC>[?25h<ESC>[?12;25h<ESC>[43;36H<ESC>[?25l<ESC>[30m<ESC>[48;5;250m1<ESC>[39;49m<ESC>[5;1H<ESC>[?12l<ESC>[?25h<ESC>[?12;25h<ESC>[43;36H<ESC>[?25l<ESC>[30m<ESC>[48;5;250m0<ESC>[39;49m<ESC>[4;1H<ESC>[?12l<ESC>[?25h<ESC>[?12;25h<ESC>[43;35H<ESC>[?25l<ESC>[30m<ESC>[48;5;250m39<ESC>[39;49m<ESC>[H<NL><NL><ESC>[?12l<ESC>[?25h<ESC>[?12;25h<ESC>[A<ESC>[1;42r<ESC>[2;1H<ESC>[22L<ESC>[1;44r<ESC>[2;1H<ESC>[?25l        <ESC>[38;5;129mif<ESC>[39;49m (req->uri == <ESC>[38;5;30mNULL<ESC>[39;49m || req->method == <ESC>[38;5;30mNULL<ESC>[39;49m ||<ESC>[K<NL>                req->headers == <ESC>[38;5;30mNULL<ESC>[39;49m || req->version == <ESC>[38;5;30mNULL<ESC>[39;49m) {<ESC>[K<NL>                <ESC>[38;5;129mreturn<ESC>[39;49m 0;<ESC>[K<NL>        }<ESC>[K<NL><ESC>[K<NL><ESC>[K<NL>        <ESC>[38;5;129mif<ESC>[39;49m ((path[0] == <ESC>[38;5;89m'/'<ESC>[39;49m) || ((strstr(path%% <ESC>[38;5;89m"http://"<ESC>[39;49m) == path)<ESC>[K<NL>                                                         && (path = strchr(path\<NL><ESC>[A<NL> + 7%%  <ESC>[38;5;89m'/'<ESC>[39;49m)))) {<ESC>[K<NL>                path += 1; <ESC>[38;5;124m// remove leading slash                              <ESC>[39;49m<NL><ESC>[A<NL>                <ESC>[38;5;129mif<ESC>[39;49m (path[0] == <ESC>[38;5;89m'\0'<ESC>[39;49m) {  <ESC>[38;5;124m// substituting in index.html for a bla<ESC>[39;49m\<NL><ESC>[A<NL><ESC>[38;5;124mnk URL!                                                                         <ESC>[39;49m<NL><ESC>[A<NL>                        path = <ESC>[38;5;89m"index.html"<ESC>[39;49m;<ESC>[K<NL>                } <ESC>[38;5;129melse<ESC>[39;49m <ESC>[38;5;129mif<ESC>[39;49m (path[strlen(path) - 1] == <ESC>[38;5;89m'/'<ESC>[39;49m) {<ESC>[K<NL>                        <ESC>[38;5;124m//concatenating index.html for a /-terminated URL!      <ESC>[39;49m<NL><ESC>[A<NL>                        strcat(path%% <ESC>[38;5;89m"index.html"<ESC>[39;49m);<ESC>[K<NL>                }<ESC>[K<NL>        } <ESC>[38;5;129melse<ESC>[39;49m {<ESC>[K<NL>                statcode = 400;<ESC>[K<NL>        }<ESC>[K<NL><ESC>[K<NL>        <ESC>[38;5;129mif<ESC>[39;49m (statcode == 200 && (urifd = open(path%% O_RDONLY%% 0)) < 0) {<ESC>[K<ESC>[43;29H<ESC>[30m<ESC>[48;5;250m47%% L238<ESC>[39;49m<ESC>[23;1H<ESC>[?12l<ESC>[?25h<ESC>[?12;25h<ESC>[43;36H<ESC>[?25l<ESC>[30m<ESC>[48;5;250m7<ESC>[39;49m<ESC>[22;1H<ESC>[?12l<ESC>[?25h<ESC>[?12;25h<ESC>[43;36H<ESC>[?25l<ESC>[30m<ESC>[48;5;250m6<ESC>[39;49m<ESC>[21;1H<ESC>[?12l<ESC>[?25h<ESC>[?12;25h<ESC>[43;36H<ESC>[?25l<ESC>[30m<ESC>[48;5;250m5<ESC>[39;49m<ESC>[20;1H<ESC>[?12l<ESC>[?25h<ESC>[?12;25h<ESC>[43;36H<ESC>[?25l<ESC>[30m<ESC>[48;5;250m4<ESC>[39;49m<ESC>[19;1H<ESC>[?12l<ESC>[?25h<ESC>[?12;25h<ESC>[43;36H<ESC>[?25l<ESC>[30m<ESC>[48;5;250m3<ESC>[39;49m<ESC>[18;1H<ESC>[?12l<ESC>[?25h<ESC>[?12;25h<ESC>[43;36H<ESC>[?25l<ESC>[30m<ESC>[48;5;250m2<ESC>[39;49m<ESC>[17;1H<ESC>[?12l<ESC>[?25h<ESC>[?12;25h<ESC>[43;36H<ESC>[?25l<ESC>[30m<ESC>[48;5;250m1<ESC>[39;49m<ESC>[16;1H<ESC>[?12l<ESC>[?25h<ESC>[?12;25h<ESC>[43;36H<ESC>[?25l<ESC>[30m<ESC>[48;5;250m0<ESC>[39;49m<ESC>[15;1H<ESC>[?12l<ESC>[?25h<ESC>[?12;25h<ESC>[43;35H<ESC>[?25l<ESC>[30m<ESC>[48;5;250m29<ESC>[39;49m<ESC>[14;1H<ESC>[?12l<ESC>[?25h<ESC>[?12;25h<ESC>[43;36H<ESC>[?25l<ESC>[30m<ESC>[48;5;250m8<ESC>[39;49m<ESC>[13;1H<ESC>[?12l<ESC>[?25h<ESC>[?12;25h<ESC>[A<ESC>[43;36H<ESC>[?25l<ESC>[30m<ESC>[48;5;250m7<ESC>[39;49m<ESC>[11;1H<ESC>[?12l<ESC>[?25h<ESC>[?12;25h<ESC>[43;36H<ESC>[?25l<ESC>[30m<ESC>[48;5;250m6<ESC>[39;49m<ESC>[10;1H<ESC>[?12l<ESC>[?25h<ESC>[?12;25h<ESC>[A<ESC>[43;36H<ESC>[?25l<ESC>[30m<ESC>[48;5;250m5<ESC>[39;49m<ESC>[8;1H<ESC>[?12l<ESC>[?25h<ESC>[?12;25h<ESC>[43;36H<ESC>[?25l<ESC>[30m<ESC>[48;5;250m4<ESC>[39;49m<ESC>[7;1H<ESC>[?12l<ESC>[?25h<ESC>[?12;25h<ESC>[43;36H<ESC>[?25l<ESC>[30m<ESC>[48;5;250m3<ESC>[39;49m<ESC>[6;1H<ESC>[?12l<ESC>[?25h<ESC>[?12;25h<ESC>[43;36H<ESC>[?25l<ESC>[30m<ESC>[48;5;250m2<ESC>[39;49m<ESC>[5;1H<ESC>[?12l<ESC>[?25h<ESC>[?12;25h<ESC>[43;36H<ESC>[?25l<ESC>[30m<ESC>[48;5;250m1<ESC>[39;49m<ESC>[4;1H<ESC>[?12l<ESC>[?25h<ESC>[?12;25h<ESC>[43;36H<ESC>[?25l<ESC>[30m<ESC>[48;5;250m0<ESC>[39;49m<ESC>[H<NL><NL><ESC>[?12l<ESC>[?25h<ESC>[?12;25h<ESC>[43;35H<ESC>[?25l<ESC>[30m<ESC>[48;5;250m19<ESC>[39;49m<ESC>[H<NL><ESC>[?12l<ESC>[?25h<ESC>[?12;25h<ESC>[1;42r<ESC>[2;1H<ESC>[21L<ESC>[1;44r<ESC>[2;1H<ESC>[?25l        <ESC>[38;5;129melse<ESC>[39;49m <ESC>[38;5;129mreturn<ESC>[39;49m <ESC>[38;5;89m"application/octet-stream"<ESC>[39;49m;<ESC>[K<NL><ESC>[K<NL>}<ESC>[K<NL><BS><ESC>[K<NL><ESC>[38;5;28mchar<ESC>[39;49m *<ESC>[38;5;21mstatus<ESC>[39;49m(<ESC>[38;5;28mint<ESC>[39;49m <ESC>[38;5;130mstatcode<ESC>[39;49m) {<ESC>[K<NL>        <ESC>[38;5;129mif<ESC>[39;49m (statcode == 200)    <ESC>[38;5;129mreturn<ESC>[39;49m <ESC>[38;5;89m"200 OK"<ESC>[39;49m;<ESC>[K<NL>        <ESC>[38;5;129melse<ESC>[39;49m <ESC>[38;5;129mif<ESC>[39;49m (statcode == 304) <ESC>[38;5;129mreturn<ESC>[39;49m <ESC>[38;5;89m"304 Not Modified"<ESC>[39;49m;<ESC>[K<NL>        <ESC>[38;5;129melse<ESC>[39;49m <ESC>[38;5;129mif<ESC>[39;49m (statcode == 400) <ESC>[38;5;129mreturn<ESC>[39;49m <ESC>[38;5;89m"400 Bad Request"<ESC>[39;49m;<ESC>[K<NL>        <ESC>[38;5;129melse<ESC>[39;49m <ESC>[38;5;129mif<ESC>[39;49m (statcode == 403) <ESC>[38;5;129mreturn<ESC>[39;49m <ESC>[38;5;89m"403 Forbidden"<ESC>[39;49m;<ESC>[K<NL>        <ESC>[38;5;129melse<ESC>[39;49m <ESC>[38;5;129mif<ESC>[39;49m (statcode == 404) <ESC>[38;5;129mreturn<ESC>[39;49m <ESC>[38;5;89m"404 Not Found"<ESC>[39;49m;<ESC>[K<NL>        <ESC>[38;5;129melse<ESC>[39;49m <ESC>[38;5;129mif<ESC>[39;49m (statcode == 500) <ESC>[38;5;129mreturn<ESC>[39;49m <ESC>[38;5;89m"500 Internal Server Error"<ESC>[39;49m;<ESC>[K<NL>        <ESC>[38;5;129melse<ESC>[39;49m <ESC>[38;5;129mif<ESC>[39;49m (statcode == 501) <ESC>[38;5;129mreturn<ESC>[39;49m <ESC>[38;5;89m"501 Not Implemented"<ESC>[39;49m;<ESC>[K<NL>        <ESC>[38;5;129melse<ESC>[39;49m <ESC>[38;5;129mreturn<ESC>[39;49m <ESC>[38;5;89m""<ESC>[39;49m;<ESC>[K<NL>}<ESC>[K<NL><BS><ESC>[K<NL><ESC>[38;5;28mint<ESC>[39;49m <ESC>[38;5;21msend_response<ESC>[39;49m(<ESC>[38;5;28mint<ESC>[39;49m <ESC>[38;5;130msockfd<ESC>[39;49m%% <ESC>[38;5;28mhttpreq_t<ESC>[39;49m *<ESC>[38;5;130mreq<ESC>[39;49m%% <ESC>[38;5;28mint<ESC>[39;49m <ESC>[38;5;130mstatcode<ESC>[39;49m) {<ESC>[K<NL>        <ESC>[38;5;28mint<ESC>[39;49m <ESC>[38;5;130murifd<ESC>[39;49m;<ESC>[K<NL>        <ESC>[38;5;129mconst<ESC>[39;49m <ESC>[38;5;28mint<ESC>[39;49m <ESC>[38;5;130mBUFSIZE<ESC>[39;49m = 1024;<ESC>[K<NL>        <ESC>[38;5;28mchar<ESC>[39;49m <ESC>[38;5;130msendmessage<ESC>[39;49m[BUFSIZE];<ESC>[K<NL>        <ESC>[38;5;28mchar<ESC>[39;49m *<ESC>[38;5;130mpath<ESC>[39;49m = req->uri;<ESC>[K<NL><ESC>[K<ESC>[43;30H<ESC>[30m<ESC>[48;5;250m3%% L218<ESC>[39;49m<ESC>[22;1H<ESC>[?12l<ESC>[?25h<ESC>[?12;25h<ESC>[43;36H<ESC>[?25l<ESC>[30m<ESC>[48;5;250m7<ESC>[39;49m<ESC>[21;1H<ESC>[?12l<ESC>[?25h<ESC>[?12;25h<ESC>[43;36H<ESC>[?25l<ESC>[30m<ESC>[48;5;250m6<ESC>[39;49m<ESC>[20;1H<ESC>[?12l<ESC>[?25h<ESC>[?12;25h<ESC>[43;36H<ESC>[?25l<ESC>[30m<ESC>[48;5;250m5<ESC>[39;49m<ESC>[19;1H<ESC>[?12l<ESC>[?25h<ESC>[?12;25h<ESC>[43;36H<ESC>[?25l<ESC>[30m<ESC>[48;5;250m4<ESC>[39;49m<ESC>[18;1H<ESC>[?12l<ESC>[?25h<ESC>[?12;25h<ESC>[43;36H<ESC>[?25l<ESC>[30m<ESC>[48;5;250m5<ESC>[39;49m<ESC>[19;1H<ESC>[?12l<ESC>[?25h<ESC>[?12;25h<ESC>[43;36H<ESC>[?25l<ESC>[30m<ESC>[48;5;250m6<ESC>[39;49m<ESC>[20;1H<ESC>[?12l<ESC>[?25h<ESC>[?12;25h<ESC>[43;36H<ESC>[?25l<ESC>[30m<ESC>[48;5;250m7<ESC>[39;49m<ESC>[21;1H<ESC>[?12l<ESC>[?25h<ESC>[?12;25h<ESC>[43;36H<ESC>[?25l<ESC>[30m<ESC>[48;5;250m6<ESC>[39;49m<ESC>[20;1H<ESC>[?12l<ESC>[?25h<ESC>[?12;25h<ESC>[43;36H<ESC>[?25l<ESC>[30m<ESC>[48;5;250m5<ESC>[39;49m<ESC>[19;34H<ESC>[?12l<ESC>[?25h<ESC>[?12;25h<BS><BS><BS><BS><BS><ESC>[?25l024;<ESC>[K<ESC>[43;6H<ESC>[30m<ESC>[48;5;250m**<ESC>[39;49m<ESC>[19;29H<ESC>[?12l<ESC>[?25h<ESC>[?12;25h<ESC>[?25l2024;<BS><BS><BS><BS><ESC>[?12l<ESC>[?25h<ESC>[?12;25h<ESC>[44;1H<ESC>[?25lSaving file /usr/src/fhttpd/webserver.c...<ESC>[19;30H<ESC>[?12l<ESC>[?25h<ESC>[?12;25h<ESC>[44;1H<ESC>[?25lWrote /usr/src/fhttpd/webserver.c<ESC>[K<ESC>[19;30H<ESC>[?12l<ESC>[?25h<ESC>[?12;25h<ESC>[44;1H<ESC>[K<ESC>[43;6H<ESC>[?25l<ESC>[30m<ESC>[48;5;250m--<ESC>[39;49m<ESC>[19;30H<ESC>[?12l<ESC>[?25h<ESC>[?12;25h<ESC>[44;1H<ESC>[?25l(No files need saving)<ESC>[19;30H<ESC>[?12l<ESC>[?25h<ESC>[?12;25h<ESC>[44;1H<ESC>[K<ESC>[?1l<ESC>><ESC>[?12l<ESC>[?25h<ESC>[?1049l<ESC>[39;49m%,
CMBEGIN,Nov 28 12:27:48,/usr/src/fhttpd,sudo make,%gcc -D_FORTIFY_SOURCE=0 -frecord-gcc-switches -fno-stack-protector -z execstack -g -o webserver -D_TS_ERRNO webserver.c -lnsl -lresolv -lpthread<NL>webserver.c: In function 'send_response':<NL>webserver.c:281:9: warning: implicit declaration of function 'strptime' [-Wimplicit-function-declaration]<NL>    if (!strptime(imstime%% "%%a%% %%d %%b %%Y %%H:%%M:%%S GMT"%% &tm)<NL>         ^%,sudo make
CMBEGIN,,,wget http://localhost:8081/12345678912345678912345,567891234567891234567891234567891234567891234567891234567891234567891234567891234<NL>456789123456789123456789123456789123456789123456789123456789123456789123456789123<NL>345678912345678912345678912345678912345678912345678912345678912345678912345678912<NL>234567891234567891234567891234567891234567891234567891234567891234567891234567891<NL>123456789123456789123456789123456789123456789123456789123456789123456789123456789<NL>912345678912345678912345678912345678912345678912345678912345678912345678912345678<NL>891234567891234567891234567891234567891234567891234567891234567891234567891234567<NL>789123456789123456789123456789123456789123456789123456789123456789123456789123456<NL>678912345678912345678912345678912345678912345678912345678912345678912345678912345<NL>567891234567891234567891234567891234567891234567891234567891234567891234567891234<NL>456789123456789123456789123456789123456789123456789123456789123456789123456789123<NL>345678912345678912345678912345678912345678912345678912345678912345678912345678912<NL>23456789<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[Aerver:/usr/src/fhttpd$ gdb ./webserver<ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL>,
CMBEGIN,,,wget http://localhosthe name is too long%% 1980 chars total.<NL>Trying to shorten...<NL>New name is 12345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912.<NL>--2018-11-28 12:28:21--  http://localhostesolving localhost (localhost)... 127.0.0.1<NL>Connecting to localhost (localhost)|127.0.0.1|:8080... connected.<NL>HTTP request sent%% awaiting response... <NL><NL>^C%,
CMBEGIN,,,wget http://localhost:8080/12345678912345678912345,567891234567891234567891234567891234567891234567891234567891234567891234567891234<NL>456789123456789123456789123456789123456789123456789123456789123456789123456789123<NL>345678912345678912345678912345678912345678912345678912345678912345678912345678912<NL>234567891234567891234567891234567891234567891234567891234567891234567891234567891<NL>123456789123456789123456789123456789123456789123456789123456789123456789123456789<NL>912345678912345678912345678912345678912345678912345678912345678912345678912345678<NL>891234567891234567891234567891234567891234567891234567891234567891234567891234567<NL>789123456789123456789123456789123456789123456789123456789123456789123456789123456<NL>678912345678912345678912345678912345678912345678912345678912345678912345678912345<NL>567891234567891234567891234567891234567891234567891234567891234567891234567891234<NL>456789123456789123456789123456789123456789123456789123456789123456789123456789123<NL>345678912345678912345678912345678912345678912345678912345678912345678912345678912<NL>234567891234567891234567891234567891234567891234567891234567891234567891234567891<NL>123456789123456789123456789123456789123456789123456789123456789123456789123456789<NL>912345678912345678912345678912345678912345678912345678912345678912345678912345678<NL>891234567891234567891234567891234567891234567891234567891234567891234567891234567<NL>789123456789123456789123456789123456789123456789123456789123456789123456789123456<NL>678912345678912345678912345678912345678912345678912345678912345678912345678912345<NL>567891234567891234567891234567891234567891234567891234567891234567891234567891234<NL>456789123456789123456789123456789123456789123456789123456789123456789123456789123<NL>345678912345678912345678912345678912345678912345678912345678912345678912345678912<NL>234567891234567891234567891234567891234567891234567891234567891234567891234567891<NL>123456789123456789123456789123456789123456789123456789123456789123456789123456789<NL>912345678912345678912345678912345678912345678912345678912345678912345678912345678<NL>89123456789123456789123456789123456789<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<BS><BS><BS><BS><BS><BS><BS>sudo make<ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL>,
CMBEGIN,Nov 28 12:28:34,/usr/src/fhttpd,sudo emacs webserver.c,%=><NL>=-111:----F1  *scratch*      All L1     (Fundamental) ---------------------------<NL>Loading 00debian-vars...done<NL>/etc/emacs/site-start.d/50autoconf.el (source)...<NL>done<NL>Loading /etc/emacs/site-start.d/50autoconf.el (source)...doneFile Edit Options Buffers Tools Lisp-Interaction Help                           <NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL>-111:----F1  *scratch*      All L1     (Lisp Interaction) ----------------------<NL>For information about GNU Emacs and the GNU system%% type C-h C-a.<NL>For information about GNU Emacs and the GNU system%% type C-h C-a.File Edit Options Buffers Tools C Help                                          <NL><NL>// webserver.c                                                                  <NL><NL>// FrobozzCo Official Webserver                                                 <NL><NL>// Barbazzo Fernap barbazzo@gue.com                                             <NL><NL>// Gustar Woomax gustar@gue.com                                                 <NL><NL>// Wilbar Memboob wilbar@gue.com                                                <NL><NL><NL>// By the Frobozz Magic Webserver Company                                       <NL><NL>// Released under the Grue Public License                                       <NL><NL>// Frobruary 14th%% 1067 GUE                                                     <NL><NL><NL>// THERE IS NO WARRANTY FOR THE PROGRAM%% TO THE EXTENT PERMITTED                <NL><NL>// BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE               <NL><NL>// COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \u201CAS IS\uinclude <stdio.h><NL>#include <errno.h><NL>#include <string.h><NL>#include <stdlib.h><NL>#include <netdb.h><NL>#include <sys/stat.h><NL>#include <sys/types.h><NL>#include <sys/socket.h><NL>#include <netinet/in.h><NL>#include <arpa/inet.h><NL>#include <unistd.h><NL>#include <fcntl.h><NL>#include <time.h><NL>#include <pthread.h><NL><NL>#define _XOPEN_SOURCE<NL><NL>typedef struct {<NL>        char *method;<NL>        char *uri;<NL>-11U:----F1  webserver.c    Top L1     (C/l Abbrev) ----------------------------<NL>        char *method;<NL>        char *uri;<NL>        char *version;<NL>        char *headers;<NL>} httpreq_t;<NL><NL><NL>* NOTE: this function is based on a function provided in the GNU "timegm" man<NL>   page. timegm is a GNU extension to time.h that returns the given tm struct a\<NL>s                                                                               <NL>   a UNIX timestamp in GMT/UTC%% rather than local time. The man page suggests a<NL>   function similar to the one below as a portable equivalent.   <NL> */<NL>time_t my_timegm(struct tm *tm) {<NL>        time_t ret;<NL>        char *tz;<NL><NL>        tz = getenv("TZ");<NL>        putenv("TZ=GMT");<NL>        tzset();<NL><HT>ret = mktime(tm);<NL>        if (tz) {<NL>                char envstr[strlen(tz) + 4];<NL>                envstr[0] = '\0';<NL>                strcat(envstr%% "TZ=");<NL>                strcat(envstr%% tz);<NL>                putenv(envstr);<NL>        } else {<NL>                putenv("TZ=");<NL>        }<NL><NL>        tzset();<NL><NL>        return ret;<NL>}<NL><NL>char *get_header(const httpreq_t *req%% const char* headername) {<NL><HT>char *hdrptr;<NL>        char *hdrend;retval = NULL;<NL> 9%% L39<NL>retval = NULL;<NL>searchstr[strlen(headername) + 5];<NL><HT>strcpy(searchstr%% "<NL>");<NL>        strcat(searchstr%% headername);<NL><HT>strcat(searchstr%% ": ");<NL><NL>        if (hdrptr = strstr(req->headers%% searchstr)) {<NL>                hdrptr += strlen(searchstr);<NL>                if (hdrend = strstr(hdrptr%% "<NL>")) {<NL>                        char hdrval[1024]; // temporary return value            <NL>                        memcpy((char *)hdrval%% hdrptr%% (hdrend - hdrptr));<NL>                        hdrval[hdrend - hdrptr] = '\0'; // tack null onto end o\<NL>f header value                                                                  <NL><HT>                int hdrvallen = strlen(hdrval);<NL><HT>                retval = (char *)malloc((hdrvallen + 1) * sizeof(char))\<NL>; // malloc a space for retval                                                  <NL><HT>                strcpy(retval%% (char *)hdrval);<NL><HT>        } else {<NL><HT>                retval = (char *)malloc((strlen(hdrptr) + 1) * sizeof(c\<NL>har)); //                                                                       <NL><HT>                strcpy(retval%% hdrptr);<NL><HT><HT>}<NL><HT>}<NL><NL><HT>return retval;<NL>}<NL><NL>/* As long as str begins with a proper HTTP-Version followed by delim%% returns \<NL>a                                                                               <NL>   pointer to the start of the version number (e.g.%% 1.0). Returns NULL otherwi\<NL>se.                                                                             <NL> */<NL>char *http_version_str(char *str%% char *delim) {<NL>        char *vstart = strstr(str%% "HTTP/");<NL><HT>char *vnumstart = str + 5;<NL>        char *vdot = strchr(str%% '.');vend = strstr(str%% delim);digits = "0123456789";<NL><HT>int majvlen = 0;<NL><HT>int minvlen = 0;15%% L77<NL><HT>int majvlen = 0;<NL><HT>int minvlen = 0;<NL><NL><HT>if (!vstart || !vdot // something's missing                             <NL><HT>        || vstart != str) // str doesn't start with "HTTP/"             <NL><HT>        return NULL;<NL><NL><HT>majvlen = strspn(vnumstart%% digits);<NL><HT>minvlen = strspn(vdot + 1%% digits);<NL><NL><HT>if (majvlen < 1 || (vnumstart + majvlen) != vdot // bad major version<NL><HT><HT>|| minvlen < 1 || (vdot + minvlen + 1) != vend) // bad minor ve\<NL>rsion                                                                           <NL>                return NULL;<NL><NL><HT>return vnumstart;<NL>}<NL><NL>/* Fills req with the request data from datastr. Returns 0 on success.          <NL> */<NL><NL>int parsereq(httpreq_t *req%% char *datastr) {<NL><HT>char *position;<NL><HT>char *last_position = datastr;<NL><HT>char *temp_position;<NL><HT>int matchlen;<NL><NL><HT>req->method = "";<NL>        req->uri = "";<NL>        req->version = "";<NL>        req->headers = "";<NL><NL>        if (!(position = strchr(last_position%% ' '))) {<NL>                return 1;<NL><HT>}<NL>matchlen = (int)(position - last_position);<NL><HT>req->method = (char *)malloc((matchlen + 1) * sizeof(char));<NL><HT>memcpy(req->method%% last_position%% matchlen);<NL><HT>req->method[matchlen] = '\0';<NL><HT>last_position = position + 1;<NL>24%% L111<NL>last_position = position + 1;<NL><NL><HT>if (!(position = strchr(last_position%% ' '))<NL><HT>        && !(position = strstr(last_position%% "<NL>"))) {<NL><HT><HT>return 1;<NL><HT>}<NL><NL>// strip any query string out of the URI                                <NL><HT>if ((temp_position = strchr(last_position%% '?')) && temp_position < pos\<NL>ition)<NL><HT>        matchlen = (int)(temp_position - last_position);<NL><HT>else<NL>                matchlen = (int)(position - last_position);<NL><NL><HT>req->uri = (char *)malloc((matchlen + 1) * sizeof(char));<NL><HT>memcpy(req->uri%% last_position%% matchlen);<NL>        req->uri[matchlen] = '\0';<NL><HT>if (position[0] == '<NL>') {<NL>                req->version = "0.9";<NL>                req->headers = "";<NL><HT><HT>return 0; // simple req -- uri only                             <NL>        }<NL><NL><HT>// If we get here%% it's a full request%% get the HTTP version and header\<NL>s                                                                               <NL><HT>last_position = position + 1;<NL><NL><HT>if (!(position = strstr(last_position%% "<NL>"))<NL><HT>        || !(last_position = http_version_str(last_position%% "<NL>"))) \<NL>{<NL><HT>        return 1;<NL><HT>}<NL><NL><NL>        req->version = (char *)malloc((matchlen + 1) * sizeof(char));<NL>        memcpy(req->version%% last_position%% matchlen);version[matchlen] = '\0';<NL><HT>last_position = position;<NL><NL><HT>req->headers = (char *)malloc(strlen(last_position) * sizeof(char));<NL><HT>strcpy(req->headers%% last_position);31%% L149<NL><HT>req->headers = (char *)malloc(strlen(last_position) * sizeof(char));<NL><HT>strcpy(req->headers%% last_position);<NL><NL><HT>return 0;<NL>}<NL><NL>char *contype(char *ext) {<NL><HT>if (strcmp(ext%% "html") == 0) return "text/html";<NL><HT>else if (strcmp(ext%% "htm") == 0) return "text/html";<NL>        else if (strcmp(ext%% "jpeg") == 0) return "image/jpeg";<NL><HT>else if (strcmp(ext%% "jpg") == 0) return "image/jpeg";if (strcmp(ext%% "gif") == 0) return "image/gif";<NL><HT>else if (strcmp(ext%% "txt") == 0) return "text/plain";<NL><HT>else return "application/octet-stream";<NL><NL>}<NL><NL>char *status(int statcode) {<NL><HT>if (statcode == 200)    return "200 OK";<NL><HT>else if (statcode == 304) return "304 Not Modified";<NL><HT>else if (statcode == 400) return "400 Bad Request";<NL><HT>else if (statcode == 403) return "403 Forbidden";<NL><HT>else if (statcode == 404) return "404 Not Found";<NL><HT>else if (statcode == 500) return "500 Internal Server Error";<NL>        else if (statcode == 501) return "501 Not Implemented";<NL><HT>else return "";<NL>}<NL><NL>int send_response(int sockfd%% httpreq_t *req%% int statcode) {<NL>        int urifd;<NL><HT>const int BUFSIZE = 2024;<NL><HT>char sendmessage[BUFSIZE];<NL><HT>char *path = req->uri;<NL><NL><HT>if (req->uri == NULL || req->method == NULL ||<NL><HT>        req->headers == NULL || req->version == NULL) {<NL><HT>        return 0;<NL><HT>}<NL><NL><NL><HT>if ((path[0] == '/') || ((strstr(path%% "http://") == path)9%% L185<NL><NL><HT>if ((path[0] == '/') || ((strstr(path%% "http://") == path)&& (path = strchr(path\<NL>+ 7%%  '/')))) {<NL>                path += 1; // remove leading slash                              <NL><HT><HT>if (path[0] == '\0') {  // substituting in index.html for a bla\<NL>nk URL!                                                                         <NL><HT>                path = "index.html";<NL><HT>        } else if (path[strlen(path) - 1] == '/') {<NL><HT>                //concatenating index.html for a /-terminated URL!      <NL><HT>                strcat(path%% "index.html");<NL><HT>        }<NL><HT>} else {<NL><HT>        statcode = 400;<NL><HT>}<NL><NL><HT>if (statcode == 200 && (urifd = open(path%% O_RDONLY%% 0)) < 0) {<NL>                if (errno == ENOENT || errno == ENOTDIR) { // file or directory\<NL> doesn't exist                                                                  <NL><HT>                statcode = 404;<NL><HT>        } else if (errno == EACCES) { // access denied                  <NL><HT>                statcode = 403;<NL><HT>        } else {<NL><HT>                // some other file access problem                       <NL><HT>                statcode = 500;<NL><HT>        }<NL><NL><NL>        if (strstr(path%% "..") != NULL) {<NL><HT>        statcode = 500;<NL><HT>}<NL><NL><NL><HT>sendmessage[0] = '\0';strcmp(req->version%% "0.9") != 0) { // full request                 <NL><HT><HT>char *ext; // file extension                                    <NL><HT><HT>time_t curtime;<NL><HT>        char *imstime;<NL><HT><HT>struct tm tm;<NL><HT><HT>struct stat stbuf;<NL>48%% L224<NL>if (statcode == 200)    return "200 OK";<NL>        else if (statcode == 304) return "304 Not Modified";<NL>        else if (statcode == 400) return "400 Bad Request";<NL>        else if (statcode == 403) return "403 Forbidden";<NL>        else if (statcode == 404) return "404 Not Found";<NL>        else if (statcode == 500) return "500 Internal Server Error";<NL>        else if (statcode == 501) return "501 Not Implemented";<NL>        else return "";<NL>}<NL><NL>int send_response(int sockfd%% httpreq_t *req%% int statcode) {<NL>        int urifd;<NL>        const int BUFSIZE = 2024;<NL>        char sendmessage[BUFSIZE];<NL>        char *path = req->uri;<NL><NL>        if (req->uri == NULL || req->method == NULL ||<NL>                req->headers == NULL || req->version == NULL) {<NL>                return 0;<NL>        }<NL><NL>3%% L22321019678987**65Mark set<HT>char *path = req->uri;<NL>        const int BUFSIZE = 2024;6<HT>strlen(<HT>+1Saving file /usr/src/fhttpd/webserver.c...Wrote /usr/src/fhttpd/webserver.c--(No files need saving)>%,sudo emacs webserver.c
CMBEGIN,,,wget http://localhosthe name is too long%% 1980 chars total.<NL>Trying to shorten...<NL>New name is 12345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912.<NL>--2018-11-28 12:29:59--  http://localhostesolving localhost (localhost)... 127.0.0.1<NL>Connecting to localhost (localhost)|127.0.0.1|:8080... connected.<NL>HTTP request sent%% awaiting response... 500 Internal Server Error<NL>2018-11-28 12:29:59 ERROR 500: Internal Server Error.<NL>%,
CMBEGIN,,,wget http://localhost:8080/12345678912345678912345,567891234567891234567891234567891234567891234567891234567891234567891234567891234<NL>456789123456789123456789123456789123456789123456789123456789123456789123456789123<NL>345678912345678912345678912345678912345678912345678912345678912345678912345678912<NL>234567891234567891234567891234567891234567891234567891234567891234567891234567891<NL>123456789123456789123456789123456789123456789123456789123456789123456789123456789<NL>912345678912345678912345678912345678912345678912345678912345678912345678912345678<NL>891234567891234567891234567891234567891234567891234567891234567891234567891234567<NL>789123456789123456789123456789123456789123456789123456789123456789123456789123456<NL>678912345678912345678912345678912345678912345678912345678912345678912345678912345<NL>567891234567891234567891234567891234567891234567891234567891234567891234567891234<NL>456789123456789123456789123456789123456789123456789123456789123456789123456789123<NL>345678912345678912345678912345678912345678912345678912345678912345678912345678912<NL>234567891234567891234567891234567891234567891234567891234567891234567891234567891<NL>123456789123456789123456789123456789123456789123456789123456789123456789123456789<NL>912345678912345678912345678912345678912345678912345678912345678912345678912345678<NL>891234567891234567891234567891234567891234567891234567891234567891234567891234567<NL>789123456789123456789123456789123456789123456789123456789123456789123456789123456<NL>678912345678912345678912345678912345678912345678912345678912345678912345678912345<NL>567891234567891234567891234567891234567891234567891234567891234567891234567891234<NL>456789123456789123456789123456789123456789123456789123456789123456789123456789123<NL>345678912345678912345678912345678912345678912345678912345678912345678912345678912<NL>234567891234567891234567891234567891234567891234567891234567891234567891234567891<NL>123456789123456789123456789123456789123456789123456789123456789123456789123456789<NL>912345678912345678912345678912345678912345678912345678912345678912345678912345678<NL>89123456789123456789123456789123456789<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<BS><BS><BS><BS><BS><BS><BS><ESC>[27Psudo emacs webserver.c<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL>,
CMBEGIN,Nov 28 12:30:44,/usr/src/fhttpd,sudo emacs webserver.c,%=><NL>=-111:----F1  *scratch*      All L1     (Fundamental) ---------------------------<NL>Loading 00debian-vars...done<NL>/etc/emacs/site-start.d/50autoconf.el (source)...<NL>done<NL>Loading /etc/emacs/site-start.d/50autoconf.el (source)...doneFile Edit Options Buffers Tools Lisp-Interaction Help                           <NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL>-111:----F1  *scratch*      All L1     (Lisp Interaction) ----------------------<NL>For information about GNU Emacs and the GNU system%% type C-h C-a.<NL>For information about GNU Emacs and the GNU system%% type C-h C-a.File Edit Options Buffers Tools C Help                                          <NL><NL>// webserver.c                                                                  <NL><NL>// FrobozzCo Official Webserver                                                 <NL><NL>// Barbazzo Fernap barbazzo@gue.com                                             <NL><NL>// Gustar Woomax gustar@gue.com                                                 <NL><NL>// Wilbar Memboob wilbar@gue.com                                                <NL><NL><NL>// By the Frobozz Magic Webserver Company                                       <NL><NL>// Released under the Grue Public License                                       <NL><NL>// Frobruary 14th%% 1067 GUE                                                     <NL><NL><NL>// THERE IS NO WARRANTY FOR THE PROGRAM%% TO THE EXTENT PERMITTED                <NL><NL>// BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE               <NL><NL>// COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \u201CAS IS\uinclude <stdio.h><NL>#include <errno.h><NL>#include <string.h><NL>#include <stdlib.h><NL>#include <netdb.h><NL>#include <sys/stat.h><NL>#include <sys/types.h><NL>#include <sys/socket.h><NL>#include <netinet/in.h><NL>#include <arpa/inet.h><NL>#include <unistd.h><NL>#include <fcntl.h><NL>#include <time.h><NL>#include <pthread.h><NL><NL>#define _XOPEN_SOURCE<NL><NL>typedef struct {<NL>        char *method;<NL>        char *uri;<NL>-11U:----F1  webserver.c    Top L1     (C/l Abbrev) ----------------------------<NL>        char *method;<NL>        char *uri;<NL>        char *version;<NL>        char *headers;<NL>} httpreq_t;<NL><NL><NL>* NOTE: this function is based on a function provided in the GNU "timegm" man<NL>   page. timegm is a GNU extension to time.h that returns the given tm struct a\<NL>s                                                                               <NL>   a UNIX timestamp in GMT/UTC%% rather than local time. The man page suggests a<NL>   function similar to the one below as a portable equivalent.   <NL> */<NL>time_t my_timegm(struct tm *tm) {<NL>        time_t ret;<NL>        char *tz;<NL><NL>        tz = getenv("TZ");<NL>        putenv("TZ=GMT");<NL>        tzset();<NL><HT>ret = mktime(tm);<NL>        if (tz) {<NL>                char envstr[strlen(tz) + 4];<NL>                envstr[0] = '\0';<NL>                strcat(envstr%% "TZ=");<NL>                strcat(envstr%% tz);<NL>                putenv(envstr);<NL>        } else {<NL>                putenv("TZ=");<NL>        }<NL><NL>        tzset();<NL><NL>        return ret;<NL>}<NL><NL>char *get_header(const httpreq_t *req%% const char* headername) {<NL><HT>char *hdrptr;<NL>        char *hdrend;retval = NULL;<NL> 9%% L39<NL>retval = NULL;<NL>searchstr[strlen(headername) + 5];<NL><HT>strcpy(searchstr%% "<NL>");<NL>        strcat(searchstr%% headername);<NL><HT>strcat(searchstr%% ": ");<NL><NL>        if (hdrptr = strstr(req->headers%% searchstr)) {<NL>                hdrptr += strlen(searchstr);<NL>                if (hdrend = strstr(hdrptr%% "<NL>")) {<NL>                        char hdrval[1024]; // temporary return value            <NL>                        memcpy((char *)hdrval%% hdrptr%% (hdrend - hdrptr));<NL>                        hdrval[hdrend - hdrptr] = '\0'; // tack null onto end o\<NL>f header value                                                                  <NL><HT>                int hdrvallen = strlen(hdrval);<NL><HT>                retval = (char *)malloc((hdrvallen + 1) * sizeof(char))\<NL>; // malloc a space for retval                                                  <NL><HT>                strcpy(retval%% (char *)hdrval);<NL><HT>        } else {<NL><HT>                retval = (char *)malloc((strlen(hdrptr) + 1) * sizeof(c\<NL>har)); //                                                                       <NL><HT>                strcpy(retval%% hdrptr);<NL><HT><HT>}<NL><HT>}<NL><NL><HT>return retval;<NL>}<NL><NL>/* As long as str begins with a proper HTTP-Version followed by delim%% returns \<NL>a                                                                               <NL>   pointer to the start of the version number (e.g.%% 1.0). Returns NULL otherwi\<NL>se.                                                                             <NL> */<NL>char *http_version_str(char *str%% char *delim) {<NL>        char *vstart = strstr(str%% "HTTP/");<NL><HT>char *vnumstart = str + 5;<NL>        char *vdot = strchr(str%% '.');vend = strstr(str%% delim);digits = "0123456789";<NL><HT>int majvlen = 0;<NL><HT>int minvlen = 0;15%% L77<NL><HT>int majvlen = 0;<NL><HT>int minvlen = 0;<NL><NL><HT>if (!vstart || !vdot // something's missing                             <NL><HT>        || vstart != str) // str doesn't start with "HTTP/"             <NL><HT>        return NULL;<NL><NL><HT>majvlen = strspn(vnumstart%% digits);<NL><HT>minvlen = strspn(vdot + 1%% digits);<NL><NL><HT>if (majvlen < 1 || (vnumstart + majvlen) != vdot // bad major version<NL><HT><HT>|| minvlen < 1 || (vdot + minvlen + 1) != vend) // bad minor ve\<NL>rsion                                                                           <NL>                return NULL;<NL><NL><HT>return vnumstart;<NL>}<NL><NL>/* Fills req with the request data from datastr. Returns 0 on success.          <NL> */<NL><NL>int parsereq(httpreq_t *req%% char *datastr) {<NL><HT>char *position;<NL><HT>char *last_position = datastr;<NL><HT>char *temp_position;<NL><HT>int matchlen;<NL><NL><HT>req->method = "";<NL>        req->uri = "";<NL>        req->version = "";<NL>        req->headers = "";<NL><NL>        if (!(position = strchr(last_position%% ' '))) {<NL>                return 1;<NL><HT>}<NL>matchlen = (int)(position - last_position);<NL><HT>req->method = (char *)malloc((matchlen + 1) * sizeof(char));<NL><HT>memcpy(req->method%% last_position%% matchlen);<NL><HT>req->method[matchlen] = '\0';<NL><HT>last_position = position + 1;<NL>24%% L111<NL>last_position = position + 1;<NL><NL><HT>if (!(position = strchr(last_position%% ' '))<NL><HT>        && !(position = strstr(last_position%% "<NL>"))) {<NL><HT><HT>return 1;<NL><HT>}<NL><NL>// strip any query string out of the URI                                <NL><HT>if ((temp_position = strchr(last_position%% '?')) && temp_position < pos\<NL>ition)<NL><HT>        matchlen = (int)(temp_position - last_position);<NL><HT>else<NL>                matchlen = (int)(position - last_position);<NL><NL><HT>req->uri = (char *)malloc((matchlen + 1) * sizeof(char));<NL><HT>memcpy(req->uri%% last_position%% matchlen);<NL>        req->uri[matchlen] = '\0';<NL><HT>if (position[0] == '<NL>') {<NL>                req->version = "0.9";<NL>                req->headers = "";<NL><HT><HT>return 0; // simple req -- uri only                             <NL>        }<NL><NL><HT>// If we get here%% it's a full request%% get the HTTP version and header\<NL>s                                                                               <NL><HT>last_position = position + 1;<NL><NL><HT>if (!(position = strstr(last_position%% "<NL>"))<NL><HT>        || !(last_position = http_version_str(last_position%% "<NL>"))) \<NL>{<NL><HT>        return 1;<NL><HT>}<NL><NL><NL>        req->version = (char *)malloc((matchlen + 1) * sizeof(char));<NL>        memcpy(req->version%% last_position%% matchlen);version[matchlen] = '\0';<NL><HT>last_position = position;<NL><NL><HT>req->headers = (char *)malloc(strlen(last_position) * sizeof(char));<NL><HT>strcpy(req->headers%% last_position);31%% L149<NL><HT>req->headers = (char *)malloc(strlen(last_position) * sizeof(char));<NL><HT>strcpy(req->headers%% last_position);<NL><NL><HT>return 0;<NL>}<NL><NL>char *contype(char *ext) {<NL><HT>if (strcmp(ext%% "html") == 0) return "text/html";<NL><HT>else if (strcmp(ext%% "htm") == 0) return "text/html";<NL>        else if (strcmp(ext%% "jpeg") == 0) return "image/jpeg";<NL><HT>else if (strcmp(ext%% "jpg") == 0) return "image/jpeg";if (strcmp(ext%% "gif") == 0) return "image/gif";<NL><HT>else if (strcmp(ext%% "txt") == 0) return "text/plain";<NL><HT>else return "application/octet-stream";<NL><NL>}<NL><NL>char *status(int statcode) {<NL><HT>if (statcode == 200)    return "200 OK";<NL><HT>else if (statcode == 304) return "304 Not Modified";<NL><HT>else if (statcode == 400) return "400 Bad Request";<NL><HT>else if (statcode == 403) return "403 Forbidden";<NL><HT>else if (statcode == 404) return "404 Not Found";<NL><HT>else if (statcode == 500) return "500 Internal Server Error";<NL>        else if (statcode == 501) return "501 Not Implemented";<NL><HT>else return "";<NL>}<NL><NL>int send_response(int sockfd%% httpreq_t *req%% int statcode) {<NL>        int urifd;<NL><HT>char *path = req->uri;<NL><HT>const int BUFSIZE = strlen(path)+1024;<NL><HT>char sendmessage[BUFSIZE];<NL><NL><NL><HT>if (req->uri == NULL || req->method == NULL ||<NL><HT>        req->headers == NULL || req->version == NULL) {<NL><HT>        return 0;<NL><HT>}<NL><NL>9%% L185<NL><NL><NL><HT>if ((path[0] == '/') || ((strstr(path%% "http://") == path)<NL><HT>                                                 && (path = strchr(path\<NL> + 7%%  '/')))) {<NL>path += 1; // remove leading slash                              <NL>                if (path[0] == '\0') {  // substituting in index.html for a bla\<NL>nk URL!                                                                         <NL><HT>                path = "index.html";<NL><HT>        } else if (path[strlen(path) - 1] == '/') {<NL><HT>                //concatenating index.html for a /-terminated URL!      <NL><HT>                strcat(path%% "index.html");<NL><HT>        }<NL><HT>} else {<NL>statcode = 400;<NL><NL><NL>        if (statcode == 200 && (urifd = open(path%% O_RDONLY%% 0)) < 0) {<NL><HT>        if (errno == ENOENT || errno == ENOTDIR) { // file or directory\<NL> doesn't exist                                                                  <NL><HT>                statcode = 404;<NL><HT>        } else if (errno == EACCES) { // access denied                  <NL><HT>                statcode = 403;<NL><HT>        } else {<NL><HT>                // some other file access problem                       <NL><HT>                statcode = 500;<NL><NL><HT>}<NL><NL><HT>if (strstr(path%% "..") != NULL) {<NL><HT>        statcode = 500;<NL><HT>}<NL><NL><NL><HT>sendmessage[0] = '\0';strcmp(req->version%% "0.9") != 0) { // full request                 <NL><HT><HT>char *ext; // file extension                                    <NL><HT><HT>time_t curtime;<NL><HT>        char *imstime;<NL><HT><HT>struct tm tm;<NL><HT><HT>struct stat stbuf;<NL>48%% L224<NL>if (statcode == 200)    return "200 OK";<NL><HT>else if (statcode == 304) return "304 Not Modified";<NL>        else if (statcode == 400) return "400 Bad Request";<NL>        else if (statcode == 403) return "403 Forbidden";<NL>        else if (statcode == 404) return "404 Not Found";<NL>        else if (statcode == 500) return "500 Internal Server Error";<NL>        else if (statcode == 501) return "501 Not Implemented";<NL>        else return "";<NL>}<NL><NL>int send_response(int sockfd%% httpreq_t *req%% int statcode) {<NL>        int urifd;<NL>        char *path = req->uri;<NL>        const int BUFSIZE = strlen(path)+1024;<NL>        char sendmessage[BUFSIZE];<NL><NL><NL>        if (req->uri == NULL || req->method == NULL ||<NL>                req->headers == NULL || req->version == NULL) {<NL>                return 0;<NL>        }<NL><NL>3%% L22321019(No files need saving)>%,sudo emacs webserver.c
CMBEGIN,,,exit,exit,
CMBEGIN,Nov 27 22:16:14,/users/jmache,ls,clean<HT><HT><HT><HT>   jelena<NL>clean2<HT><HT><HT><HT>   jmache-permissions-1393410001.tar.gz<NL>cleanlog.pl<HT><HT><HT>   lclark211.cli.intro.log.dot<NL>clean-logs<HT><HT><HT>   lclark211.cli.intro.log.pdf<NL>cut<HT><HT><HT><HT>   lclarkan-intro21.cli.intro.log.dot<NL>d1.pcap<HT><HT><HT><HT>   lclarkan-intro21.cli.intro.log.pdf<NL>dump2.pcap<HT><HT><HT>   lclarkdo-intro21.cli.intro.log.dot<NL>dump.pcap<HT><HT><HT>   lclarkdo-intro21.cli.intro.log.pdf<NL>fdorr.tar.gz<HT><HT><HT>   lclarkdt-intro21.cli.intro.log.dot<NL>firewall.sh<HT><HT><HT>   lclarkdt-intro21.cli.intro.log.pdf<NL>hi.txt<HT><HT><HT><HT>   logs<NL>Homeworknumber1.cli.intro.log.dot  logsspring18<NL>Homeworknumber1.cli.intro.log.pdf  milestones_complete_intro.py<NL>hw1<HT><HT><HT><HT>   nohup.out<NL>hwf.sh<HT><HT><HT><HT>   pulllogs.pl<NL>index.html<HT><HT><HT>   pulllogs.pl~<NL>index.html.1<HT><HT><HT>   Ryan.cli.intro.log.dot<NL>intro18.cli.intro.log.dot<HT>   Ryan.cli.intro.log.pdf<NL>intro18.cli.intro.log.pdf<HT>   snoopylogs<NL>intro21.cli.intro.log.dot<HT>   snort.conf<NL>intro21.cli.intro.log.pdf<HT>   solution<NL>intro_jens<HT><HT><HT>   top_secret,ls
CMBEGIN,Nov 27 22:16:35,/users/jmache,more index.html.1 ,%<html><NL><head><NL><title><NL><HT>Frobnick Production Reports<NL></title><NL></head><NL><body><NL><HT><h1>Frobnick Production Reports</h1><NL><HT><ul><NL><li><a href='frobnick/1.frob.txt'>1.frob.txt</a></li><NL><li><a href='frobnick/2.frob.txt'>2.frob.txt</a></li><NL><li><a href='frobnick/3.frob.txt'>3.frob.txt</a></li><NL><li><a href='frobnick/4.frob.txt'>4.frob.txt</a></li><NL><li><a href='frobnick/5.frob.txt'>5.frob.txt</a></li><NL><li><a href='frobnick/6.frob.txt'>6.frob.txt</a></li><NL><li><a href='frobnick/7.frob.txt'>7.frob.txt</a></li><NL><li><a href='frobnick/8.frob.txt'>8.frob.txt</a></li><NL><li><a href='frobnick/9.frob.txt'>9.frob.txt</a></li><NL><li><a href='frobnick/10.frob.txt'>10.frob.txt</a></li><NL><li><a href='frobnick/11.frob.txt'>11.frob.txt</a></li><NL><li><a href='frobnick/12.frob.txt'>12.frob.txt</a></li><NL><li><a href='frobnick/13.frob.txt'>13.frob.txt</a></li><NL><li><a href='frobnick/14.frob.txt'>14.frob.txt</a></li><NL><li><a href='frobnick/15.frob.txt'>15.frob.txt</a></li><NL><li><a href='frobnick/16.frob.txt'>16.frob.txt</a></li><NL><li><a href='frobnick/17.frob.txt'>17.frob.txt</a></li><NL><li><a href='frobnick/18.frob.txt'>18.frob.txt</a></li><NL><li><a href='frobnick/19.frob.txt'>19.frob.txt</a></li><NL><li><a href='frobnick/20.frob.txt'>20.frob.txt</a></li><NL><li><a href='frobnick/21.frob.txt'>21.frob.txt</a></li><NL><li><a href='frobnick/22.frob.txt'>22.frob.txt</a></li><NL><li><a href='frobnick/23.frob.txt'>23.frob.txt</a></li><NL><li><a href='frobnick/24.frob.txt'>24.frob.txt</a></li><NL><li><a href='frobnick/25.frob.txt'>25.frob.txt</a></li><NL><li><a href='frobnick/26.frob.txt'>26.frob.txt</a></li><NL><li><a href='frobnick/27.frob.txt'>27.frob.txt</a></li><NL><li><a href='frobnick/28.frob.txt'>28.frob.txt</a></li><NL><li><a href='frobnick/29.frob.txt'>29.frob.txt</a></li><NL><li><a href='frobnick/30.frob.txt'>30.frob.txt</a></li><NL><li><a href='frobnick/31.frob.txt'>31.frob.txt</a></li><NL><li><a href='frobnick/32.frob.txt'>32.frob.txt</a></li><NL><li><a href='frobnick/33.frob.txt'>33.frob.txt</a></li><NL><li><a href='frobnick/34.frob.txt'>34.frob.txt</a></li><NL><li><a href='frobnick/35.frob.txt'>35.frob.txt</a></li><NL><li><a href='frobnick/36.frob.txt'>36.frob.txt</a></li><NL><li><a href='frobnick/37.frob.txt'>37.frob.txt</a></li><NL><li><a href='frobnick/38.frob.txt'>38.frob.txt</a></li><NL><li><a href='frobnick/39.frob.txt'>39.frob.txt</a></li><NL>--More--(39%%)<NL><li><a href='frobnick/40.frob.txt'>40.frob.txt</a></li><NL><li><a href='frobnick/41.frob.txt'>41.frob.txt</a></li><NL><li><a href='frobnick/42.frob.txt'>42.frob.txt</a></li><NL><li><a href='frobnick/43.frob.txt'>43.frob.txt</a></li><NL><li><a href='frobnick/44.frob.txt'>44.frob.txt</a></li><NL><li><a href='frobnick/45.frob.txt'>45.frob.txt</a></li><NL><li><a href='frobnick/46.frob.txt'>46.frob.txt</a></li><NL><li><a href='frobnick/47.frob.txt'>47.frob.txt</a></li><NL><li><a href='frobnick/48.frob.txt'>48.frob.txt</a></li><NL><li><a href='frobnick/49.frob.txt'>49.frob.txt</a></li><NL><li><a href='frobnick/50.frob.txt'>50.frob.txt</a></li><NL><li><a href='frobnick/51.frob.txt'>51.frob.txt</a></li><NL><li><a href='frobnick/52.frob.txt'>52.frob.txt</a></li><NL><li><a href='frobnick/53.frob.txt'>53.frob.txt</a></li><NL><li><a href='frobnick/54.frob.txt'>54.frob.txt</a></li><NL><li><a href='frobnick/55.frob.txt'>55.frob.txt</a></li><NL><li><a href='frobnick/56.frob.txt'>56.frob.txt</a></li><NL><li><a href='frobnick/57.frob.txt'>57.frob.txt</a></li><NL><li><a href='frobnick/58.frob.txt'>58.frob.txt</a></li><NL><li><a href='frobnick/59.frob.txt'>59.frob.txt</a></li><NL><li><a href='frobnick/60.frob.txt'>60.frob.txt</a></li><NL><li><a href='frobnick/61.frob.txt'>61.frob.txt</a></li><NL><li><a href='frobnick/62.frob.txt'>62.frob.txt</a></li><NL><li><a href='frobnick/63.frob.txt'>63.frob.txt</a></li><NL><li><a href='frobnick/64.frob.txt'>64.frob.txt</a></li><NL><li><a href='frobnick/65.frob.txt'>65.frob.txt</a></li><NL><li><a href='frobnick/66.frob.txt'>66.frob.txt</a></li><NL><li><a href='frobnick/67.frob.txt'>67.frob.txt</a></li><NL><li><a href='frobnick/68.frob.txt'>68.frob.txt</a></li><NL><li><a href='frobnick/69.frob.txt'>69.frob.txt</a></li><NL><li><a href='frobnick/70.frob.txt'>70.frob.txt</a></li><NL><li><a href='frobnick/71.frob.txt'>71.frob.txt</a></li><NL><li><a href='frobnick/72.frob.txt'>72.frob.txt</a></li><NL><li><a href='frobnick/73.frob.txt'>73.frob.txt</a></li><NL><li><a href='frobnick/74.frob.txt'>74.frob.txt</a></li><NL><li><a href='frobnick/75.frob.txt'>75.frob.txt</a></li><NL><li><a href='frobnick/76.frob.txt'>76.frob.txt</a></li><NL><li><a href='frobnick/77.frob.txt'>77.frob.txt</a></li><NL><li><a href='frobnick/78.frob.txt'>78.frob.txt</a></li><NL><li><a href='frobnick/79.frob.txt'>79.frob.txt</a></li><NL><li><a href='frobnick/80.frob.txt'>80.frob.txt</a></li><NL><li><a href='frobnick/81.frob.txt'>81.frob.txt</a></li><NL><li><a href='frobnick/82.frob.txt'>82.frob.txt</a></li><NL><li><a href='frobnick/83.frob.txt'>83.frob.txt</a></li><NL><li><a href='frobnick/84.frob.txt'>84.frob.txt</a></li><NL><li><a href='frobnick/85.frob.txt'>85.frob.txt</a></li><NL><li><a href='frobnick/86.frob.txt'>86.frob.txt</a></li><NL><li><a href='frobnick/87.frob.txt'>87.frob.txt</a></li><NL>--More--(86%%)<NL><li><a href='frobnick/88.frob.txt'>88.frob.txt</a></li><NL><li><a href='frobnick/89.frob.txt'>89.frob.txt</a></li><NL><li><a href='frobnick/90.frob.txt'>90.frob.txt</a></li><NL><li><a href='frobnick/91.frob.txt'>91.frob.txt</a></li><NL><li><a href='frobnick/92.frob.txt'>92.frob.txt</a></li><NL><li><a href='frobnick/93.frob.txt'>93.frob.txt</a></li><NL><li><a href='frobnick/94.frob.txt'>94.frob.txt</a></li><NL><li><a href='frobnick/95.frob.txt'>95.frob.txt</a></li><NL><li><a href='frobnick/96.frob.txt'>96.frob.txt</a></li><NL><li><a href='frobnick/97.frob.txt'>97.frob.txt</a></li><NL><li><a href='frobnick/98.frob.txt'>98.frob.txt</a></li><NL><li><a href='frobnick/99.frob.txt'>99.frob.txt</a></li><NL><li><a href='frobnick/100.frob.txt'>100.frob.txt</a></li><NL></ul><NL></body><NL></html>%,more index.html.1
CMBEGIN,Nov 27 22:46:11,/users/jmache,wget http://localhost:8080,,wget http://localhost:8080
CMBEGIN,,,ssh server.bof112118.CS495LC.isi.deterlab.net,,
CMBEGIN,,,sudo ./webserver 8081,,
CMBEGIN,,,gdb ./webserver 8080,,
CMBEGIN,,,sudo ./webserver 8080,,
CMBEGIN,,,ssh server.bof112118.CS495LC.isi.deterlab.net,,
CMBEGIN,,,wget http://localhosthe name is too long%% 2000 chars total.<NL>Trying to shorten...<NL>New name is 12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456.<NL>--2018-11-27 22:20:28--  http://localhost:8080/12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890<NL>Resolving localhost (localhost)... 127.0.0.1<NL>Connecting to localhost (localhost)|127.0.0.1|:8080... connected.<NL>HTTP request sent%% awaiting response... No data received.<NL>Retrying.<NL><NL>--2018-11-27 22:20:30--  (try: 2)  http://localhost:8080/12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890<NL>Connecting to localhost (localhost)|127.0.0.1|:8080... failed: Connection refused.<NL>Resolving localhost (localhost)... 127.0.0.1<NL>Connecting to localhost (localhost)|127.0.0.1|:8080... failed: Connection refused.%,
CMBEGIN,,,wget http://localhost:8080/1234567890123456789012345678901234567890123456789012345678901234,%456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901<NL>123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678<NL>890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345<NL>567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012<NL>234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789<NL>901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456<NL>678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123<NL>345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890<NL>012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567<NL>789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234<NL>456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901<NL>123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678<NL>890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345<NL>567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012<NL>234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789<NL>901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456<NL>678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123<NL>345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890<NL>01234567890<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[Aer:~$ wget http://localhostmache@server:~$ wget http://localhostache@server:~$ wget http://localhost:8081<NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL>The name is too long%% 2000 chars total.<NL>Trying to shorten...<NL>New name is 12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456.<NL>--2018-11-27 22:21:32--  http://localhost:8081/12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890<NL>Resolving localhost (localhost)... 127.0.0.1<NL>Connecting to localhost (localhost)|127.0.0.1|:8081... connected.<NL>HTTP request sent%% awaiting response... No data received.<NL>Retrying.<NL><NL>--2018-11-27 22:23:01--  (try: 2)  http://localhost:8081/12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890<NL>Connecting to localhost (localhost)|127.0.0.1|:8081... failed: Connection refused.<NL>Resolving localhost (localhost)... 127.0.0.1<NL>Connecting to localhost (localhost)|127.0.0.1|:8081... failed: Connection refused.%,
CMBEGIN,,,wget http://localhost:8081/1234567890123456789012345678901234567890123456789012345678901234,456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901<NL>123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678<NL>890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345<NL>567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012<NL>234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789<NL>901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456<NL>678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123<NL>345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890<NL>012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567<NL>789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234<NL>456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901<NL>123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678<NL>890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345<NL>567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012<NL>234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789<NL>901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456<NL>678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123<NL>345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890<NL>01234567890<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[Aer:~$ wget http://localhost:8080<NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL>01234567890<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[Aer:~$ more index.html.1 <ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL>,
CMBEGIN,,,wget http://localhost:8080,%--2018-11-27 22:46:11--  http://localhost:8080/<NL>Resolving localhost (localhost)... 127.0.0.1<NL>Connecting to localhost (localhost)|127.0.0.1|:8080... connected.<NL>HTTP request sent%% awaiting response... 200 OK<NL>Length: unspecified [text/html]<NL>Saving to: 'index.html.2'<NL><NL><NL>index.html.2                   [<=>                                     ]       0  --.-KB/s               <NL>index.html.2                   [ <=>                                    ]   5.59K  --.-KB/s    in 0s      <NL><NL>2018-11-27 22:46:11 (149 MB/s) - 'index.html.2' saved [5725]<NL>%,
CMBEGIN,Nov 27 22:58:38,/users/jmache,wget http://localhost:8080/j,%--2018-11-27 22:58:38--  http://localhost:8080/j<NL>Resolving localhost (localhost)... 127.0.0.1<NL>Connecting to localhost (localhost)|127.0.0.1|:8080... connected.<NL>HTTP request sent%% awaiting response... 404 Not Found<NL>2018-11-27 22:58:38 ERROR 404: Not Found.<NL>%,wget http://localhost:8080/j
CMBEGIN,Nov 27 22:15:14,/usr/src/fhttpd,sudo make,make: Nothing to be done for 'project'.,sudo make
CMBEGIN,Nov 27 22:15:28,/usr/src/fhttpd,sudo ./webserver 8080,GET / HTTP/1.1<NL><NL>User-Agent: Wget/1.17.1 (linux-gnu)<NL><NL>Accept: */*<NL><NL>Accept-Encoding: identity<NL><NL>Host: localhost:8080<NL><NL>Connection: Keep-Alive<NL><NL><NL>GET /12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890 HTTP/1.1<NL><NL>User-Agent: Wget/1.17.1 (linux-gnu)<NL><NL>Accept: */*<NL><NL>Accept-Encoding: identity<NL><NL>Host: localhost:8080<NL><NL>Connection: Keep-Alive<NL><NL><NL>Segmentation fault (core dumped),sudo ./webserver 8080
CMBEGIN,Nov 27 22:21:05,/usr/src/fhttpd,gdb ./webserver,%GNU gdb (Ubuntu 7.11.1-0ubuntu1~16.04) 7.11.1<NL>Copyright (C) 2016 Free Software Foundation%% Inc.<NL>License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html><NL>This is free software: you are free to change and redistribute it.<NL>There is NO WARRANTY%% to the extent permitted by law.  Type \"show copying\"<NL>and \"show warranty\" for details.<NL>This GDB was configured as \"x86_64-linux-gnu\".<NL>Type \"show configuration\" for configuration details.<NL>For bug reporting instructions%% please see:<NL><http://www.gnu.org/software/gdb/bugs/>.<NL>Find the GDB manual and other documentation resources online at:<NL><http://www.gnu.org/software/gdb/documentation/>.<NL>For help%% type \"help\".<NL>Type \"apropos word\" to search for commands related to \"word\"...<NL>Reading symbols from ./webserver...done.<NL>(gdb) run 8080<NL>Starting program: /usr/src/fhttpd/webserver 8080<NL>[Thread debugging using libthread_db enabled]<NL>Using host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".<NL>bind: Address already in use<NL>[Inferior 1 (process 25081) exited with code 01]<NL>(gdb) run 8081<NL>Starting program: /usr/src/fhttpd/webserver 8081<NL>[Thread debugging using libthread_db enabled]<NL>Using host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".<NL>[New Thread 0x7ffff71cd700 (LWP 25087)]<NL>GET /12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890 HTTP/1.1<NL><NL>User-Agent: Wget/1.17.1 (linux-gnu)<NL><NL>Accept: */*<NL><NL>Accept-Encoding: identity<NL><NL>Host: localhost:8081<NL><NL>Connection: Keep-Alive<NL><NL><NL><NL>Thread 2 \"webserver\" received signal SIGSEGV%% Segmentation fault.<NL>[Switching to Thread 0x7ffff71cd700 (LWP 25087)]<NL>0x00000000004021d8 in send_response (sockfd=892613426%% req=0x3736353433323130%% statcode=825243960)<NL>    at webserver.c:314<NL>314<HT><HT><HT>strcat(sendmessage%% \"</h2></body></html>\");<NL>(gdb) where<NL>#0  0x00000000004021d8 in send_response (sockfd=892613426%% req=0x3736353433323130%% statcode=825243960)<NL>    at webserver.c:314<NL>#1  0x3130393837363534 in ?? ()<NL>#2  0x3938373635343332 in ?? ()<NL>#3  0x3736353433323130 in ?? ()<NL>#4  0x3534333231303938 in ?? ()<NL>#5  0x3332313039383736 in ?? ()<NL>#6  0x3130393837363534 in ?? ()<NL>#7  0x3938373635343332 in ?? ()<NL>#8  0x3736353433323130 in ?? ()<NL>#9  0x3534333231303938 in ?? ()<NL>#10 0x3332313039383736 in ?? ()<NL>#11 0x3130393837363534 in ?? ()<NL>#12 0x3938373635343332 in ?? ()<NL>#13 0x3736353433323130 in ?? ()<NL>#14 0x3534333231303938 in ?? ()<NL>#15 0x3332313039383736 in ?? ()<NL>#16 0x3130393837363534 in ?? ()<NL>#17 0x3938373635343332 in ?? ()<NL>#18 0x3736353433323130 in ?? ()<NL>#19 0x3534333231303938 in ?? ()<NL>#20 0x3332313039383736 in ?? ()<NL>#21 0x3130393837363534 in ?? ()<NL>#22 0x3938373635343332 in ?? ()<NL>#23 0x3736353433323130 in ?? ()<NL>#24 0x3534333231303938 in ?? ()<NL>#25 0x3332313039383736 in ?? ()<NL>#26 0x3130393837363534 in ?? ()<NL>#27 0x3938373635343332 in ?? ()<NL>#28 0x3736353433323130 in ?? ()<NL>#29 0x3534333231303938 in ?? ()<NL>#30 0x3332313039383736 in ?? ()<NL>#31 0x3130393837363534 in ?? ()<NL>#32 0x3938373635343332 in ?? ()<NL>#33 0x3736353433323130 in ?? ()<NL>#34 0x3534333231303938 in ?? ()<NL>#35 0x3332313039383736 in ?? ()<NL>#36 0x3130393837363534 in ?? ()<NL>#37 0x3938373635343332 in ?? ()<NL>#38 0x3736353433323130 in ?? ()<NL>#39 0x3534333231303938 in ?? ()<NL>#40 0x3332313039383736 in ?? ()<NL>#41 0x3130393837363534 in ?? ()<NL>#42 0x3938373635343332 in ?? ()<NL>#43 0x3736353433323130 in ?? ()<NL>#44 0x3534333231303938 in ?? ()<NL>#45 0x3332313039383736 in ?? ()<NL>#46 0x3130393837363534 in ?? ()<NL>#47 0x3938373635343332 in ?? ()<NL>#48 0x3736353433323130 in ?? ()<NL>#49 0x3534333231303938 in ?? ()<NL>#50 0x3332313039383736 in ?? ()<NL>#51 0x3130393837363534 in ?? ()<NL>#52 0x3938373635343332 in ?? ()<NL>#53 0x3736353433323130 in ?? ()<NL>#54 0x3534333231303938 in ?? ()<NL>#55 0x3332313039383736 in ?? ()<NL>#56 0x3130393837363534 in ?? ()<NL>#57 0x3938373635343332 in ?? ()<NL>#58 0x3736353433323130 in ?? ()<NL>#59 0x3534333231303938 in ?? ()<NL>---Type <return> to continue%% or q <return> to quit---q<NL>Quit<NL>(gdb) exit<NL>Undefined command: \"exit\".  Try \"help\".<NL>(gdb) ls<NL>Undefined command: \"ls\".  Try \"help\".<NL>(gdb) q<NL>A debugging session is active.<NL><NL><HT>Inferior 1 [process 25085] will be killed.<NL><NL>Quit anyway? (y or n) y%,gdb ./webserver
CMBEGIN,Nov 27 22:23:04,/usr/src/fhttpd,ls,frobnick  index.html  Makefile<HT>webserver  webserver.c,ls
CMBEGIN,Nov 27 22:46:00,/usr/src/fhttpd,sudo ./webserver 8080,GET / HTTP/1.1<NL><NL>User-Agent: Wget/1.17.1 (linux-gnu)<NL><NL>Accept: */*<NL><NL>Accept-Encoding: identity<NL><NL>Host: localhost:8080<NL><NL>Connection: Keep-Alive<NL><NL><NL>GET /j HTTP/1.1<NL><NL>User-Agent: Wget/1.17.1 (linux-gnu)<NL><NL>Accept: */*<NL><NL>Accept-Encoding: identity<NL><NL>Host: localhost:8080<NL><NL>Connection: Keep-Alive<NL><NL>,sudo ./webserver 8080
CMBEGIN,,,ssh server.bof-11-20.CS495LC.isi.deterlab.net,,
CMBEGIN,,,wget http://localhost:8081/123456789012345678901234567890123456789012345678901234567890,01234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123<NL>34567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456<NL>67890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789<NL>90123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012<NL>23456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345<NL>56789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678<NL>89012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901<NL>12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234<NL>45678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567<NL>78901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890<NL>01234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123<NL>34567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456<NL>67890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789<NL>90123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012<NL>23456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345<NL>56789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678<NL>89012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901<NL>12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234<NL>456789012345678901234567890123456789012345678901234567890123456789012345678901234567890<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A,
CMBEGIN,,,wget http://localhost:8080,<NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL><NL>456789012345678901234567890123456789012345678901234567890123456789012345678901234567890<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A<ESC>[A,
CMBEGIN,,,more index.html.1 ,<NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL>,
CMBEGIN,,,wget http://localhost:8080,,
CMBEGIN,Nov 28 01:04:41,/usr/src/fhttpd,sudo ./webserver 8080,,sudo ./webserver 8080
CMBEGIN,,,cd /usr/src/fhttpd/,,
CMBEGIN,,,ssh server.bof-11-20.CS495LC.isi.deterlab.net,,
CMBEGIN,,,wget http://localhost
CMBEGIN,,,more index.html.1 ,<NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL><NL><ESC>[K<NL>,
CMBEGIN,,,sudo ./webserver 8080,GET /j HTTP/1.1<NL><NL>User-Agent: Wget/1.17.1 (linux-gnu)<NL><NL>Accept: */*<NL><NL>Accept-Encoding: identity<NL><NL>Host: localhost:8080<NL><NL>Connection: Keep-Alive<NL><NL>,
CMBEGIN,,,ssh server.bof-11-20.CS495LC.isi.deterlab.net,,
CMBEGIN,Nov 28 01:06:07,/users/jmache,wget http://localhost:8080/j,%--2018-11-28 01:06:07--  http://localhost:8080/j<NL>Resolving localhost (localhost)... 127.0.0.1<NL>Connecting to localhost (localhost)|127.0.0.1|:8080... connected.<NL>HTTP request sent%% awaiting response... 404 Not Found<NL>2018-11-28 01:06:07 ERROR 404: Not Found.<NL>%,wget http://localhost:8080/j
